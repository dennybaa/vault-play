"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecretV2:
    r"""
    SecretV2 is the Schema for the SecretV2s API. Writes a KV-V2 secret to a given path in Vault

    Attributes
    ----------
    apiVersion : str, default is "kv.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecretV2", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KvVaultUpboundIoV1alpha1SecretV2Spec, default is Undefined, required
        spec
    status : KvVaultUpboundIoV1alpha1SecretV2Status, default is Undefined, optional
        status
    """


    apiVersion: "kv.vault.upbound.io/v1alpha1" = "kv.vault.upbound.io/v1alpha1"

    kind: "SecretV2" = "SecretV2"

    metadata?: v1.ObjectMeta

    spec: KvVaultUpboundIoV1alpha1SecretV2Spec

    status?: KvVaultUpboundIoV1alpha1SecretV2Status


schema KvVaultUpboundIoV1alpha1SecretV2Spec:
    r"""
    SecretV2Spec defines the desired state of SecretV2

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KvVaultUpboundIoV1alpha1SecretV2SpecForProvider, default is Undefined, required
        for provider
    initProvider : KvVaultUpboundIoV1alpha1SecretV2SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KvVaultUpboundIoV1alpha1SecretV2SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : KvVaultUpboundIoV1alpha1SecretV2SpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : KvVaultUpboundIoV1alpha1SecretV2SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KvVaultUpboundIoV1alpha1SecretV2SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KvVaultUpboundIoV1alpha1SecretV2SpecForProvider

    initProvider?: KvVaultUpboundIoV1alpha1SecretV2SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KvVaultUpboundIoV1alpha1SecretV2SpecProviderConfigRef

    providerRef?: KvVaultUpboundIoV1alpha1SecretV2SpecProviderRef

    publishConnectionDetailsTo?: KvVaultUpboundIoV1alpha1SecretV2SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KvVaultUpboundIoV1alpha1SecretV2SpecWriteConnectionSecretToRef


schema KvVaultUpboundIoV1alpha1SecretV2SpecForProvider:
    r"""
    kv vault upbound io v1alpha1 secret v2 spec for provider

    Attributes
    ----------
    cas : float, default is Undefined, optional
        This flag is required if cas_required is set to true on either the secret or the engine's config. In order for a write operation to be successful, cas must be set to the current version of the secret. This flag is required if cas_required is set to true on either the secret or the engine's config. In order for a write to be successful, cas must be set to the current version of the secret.
    customMetadata : [KvVaultUpboundIoV1alpha1SecretV2SpecForProviderCustomMetadataItems0], default is Undefined, optional
        A nested block that allows configuring metadata for the KV secret. Refer to the Configuration Options for more info. Custom metadata to be set for the secret.
    dataJsonSecretRef : KvVaultUpboundIoV1alpha1SecretV2SpecForProviderDataJSONSecretRef, default is Undefined, optional
        data Json secret ref
    deleteAllVersions : bool, default is Undefined, optional
        If set to true, permanently deletes all versions for the specified key. If set to true, permanently deletes all versions for the specified key.
    disableRead : bool, default is Undefined, optional
        If set to true, disables reading secret from Vault; note: drift won't be detected. If set to true, disables reading secret from Vault; note: drift won't be detected.
    mount : str, default is Undefined, optional
        Path where KV-V2 engine is mounted. Path where KV-V2 engine is mounted.
    name : str, default is Undefined, optional
        Full name of the secret. For a nested secret the name is the nested path excluding the mount and data prefix. For example, for a secret at kvv2/data/foo/bar/baz the name is foo/bar/baz. Full name of the secret. For a nested secret, the name is the nested path excluding the mount and data prefix. For example, for a secret at 'kvv2/data/foo/bar/baz', the name is 'foo/bar/baz'
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    options : {str:str}, default is Undefined, optional
        An object that holds option settings. An object that holds option settings.
    """


    cas?: float

    customMetadata?: [KvVaultUpboundIoV1alpha1SecretV2SpecForProviderCustomMetadataItems0]

    dataJsonSecretRef?: KvVaultUpboundIoV1alpha1SecretV2SpecForProviderDataJSONSecretRef

    deleteAllVersions?: bool

    disableRead?: bool

    mount?: str

    name?: str

    namespace?: str

    options?: {str:str}


schema KvVaultUpboundIoV1alpha1SecretV2SpecForProviderCustomMetadataItems0:
    r"""
    kv vault upbound io v1alpha1 secret v2 spec for provider custom metadata items0

    Attributes
    ----------
    casRequired : bool, default is Undefined, optional
        If true, all keys will require the cas parameter to be set on all write requests. If true, all keys will require the cas parameter to be set on all write requests.
    data : {str:str}, default is Undefined, optional
        A string to string map describing the secret. A map of arbitrary string to string valued user-provided metadata meant to describe the secret.
    deleteVersionAfter : float, default is Undefined, optional
        If set, specifies the length of time before a version is deleted. Accepts duration in integer seconds. If set, specifies the length of time before a version is deleted.
    maxVersions : float, default is Undefined, optional
        The number of versions to keep per key. The number of versions to keep per key.
    """


    casRequired?: bool

    data?: {str:str}

    deleteVersionAfter?: float

    maxVersions?: float


schema KvVaultUpboundIoV1alpha1SecretV2SpecForProviderDataJSONSecretRef:
    r"""
    JSON-encoded string that will be written as the secret data at the given path. JSON-encoded secret data to write.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema KvVaultUpboundIoV1alpha1SecretV2SpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    cas : float, default is Undefined, optional
        This flag is required if cas_required is set to true on either the secret or the engine's config. In order for a write operation to be successful, cas must be set to the current version of the secret. This flag is required if cas_required is set to true on either the secret or the engine's config. In order for a write to be successful, cas must be set to the current version of the secret.
    customMetadata : [KvVaultUpboundIoV1alpha1SecretV2SpecInitProviderCustomMetadataItems0], default is Undefined, optional
        A nested block that allows configuring metadata for the KV secret. Refer to the Configuration Options for more info. Custom metadata to be set for the secret.
    deleteAllVersions : bool, default is Undefined, optional
        If set to true, permanently deletes all versions for the specified key. If set to true, permanently deletes all versions for the specified key.
    disableRead : bool, default is Undefined, optional
        If set to true, disables reading secret from Vault; note: drift won't be detected. If set to true, disables reading secret from Vault; note: drift won't be detected.
    mount : str, default is Undefined, optional
        Path where KV-V2 engine is mounted. Path where KV-V2 engine is mounted.
    name : str, default is Undefined, optional
        Full name of the secret. For a nested secret the name is the nested path excluding the mount and data prefix. For example, for a secret at kvv2/data/foo/bar/baz the name is foo/bar/baz. Full name of the secret. For a nested secret, the name is the nested path excluding the mount and data prefix. For example, for a secret at 'kvv2/data/foo/bar/baz', the name is 'foo/bar/baz'
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    options : {str:str}, default is Undefined, optional
        An object that holds option settings. An object that holds option settings.
    """


    cas?: float

    customMetadata?: [KvVaultUpboundIoV1alpha1SecretV2SpecInitProviderCustomMetadataItems0]

    deleteAllVersions?: bool

    disableRead?: bool

    mount?: str

    name?: str

    namespace?: str

    options?: {str:str}


schema KvVaultUpboundIoV1alpha1SecretV2SpecInitProviderCustomMetadataItems0:
    r"""
    kv vault upbound io v1alpha1 secret v2 spec init provider custom metadata items0

    Attributes
    ----------
    casRequired : bool, default is Undefined, optional
        If true, all keys will require the cas parameter to be set on all write requests. If true, all keys will require the cas parameter to be set on all write requests.
    data : {str:str}, default is Undefined, optional
        A string to string map describing the secret. A map of arbitrary string to string valued user-provided metadata meant to describe the secret.
    deleteVersionAfter : float, default is Undefined, optional
        If set, specifies the length of time before a version is deleted. Accepts duration in integer seconds. If set, specifies the length of time before a version is deleted.
    maxVersions : float, default is Undefined, optional
        The number of versions to keep per key. The number of versions to keep per key.
    """


    casRequired?: bool

    data?: {str:str}

    deleteVersionAfter?: float

    maxVersions?: float


schema KvVaultUpboundIoV1alpha1SecretV2SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KvVaultUpboundIoV1alpha1SecretV2SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KvVaultUpboundIoV1alpha1SecretV2SpecProviderConfigRefPolicy


schema KvVaultUpboundIoV1alpha1SecretV2SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KvVaultUpboundIoV1alpha1SecretV2SpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KvVaultUpboundIoV1alpha1SecretV2SpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KvVaultUpboundIoV1alpha1SecretV2SpecProviderRefPolicy


schema KvVaultUpboundIoV1alpha1SecretV2SpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KvVaultUpboundIoV1alpha1SecretV2SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KvVaultUpboundIoV1alpha1SecretV2SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KvVaultUpboundIoV1alpha1SecretV2SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KvVaultUpboundIoV1alpha1SecretV2SpecPublishConnectionDetailsToConfigRef

    metadata?: KvVaultUpboundIoV1alpha1SecretV2SpecPublishConnectionDetailsToMetadata

    name: str


schema KvVaultUpboundIoV1alpha1SecretV2SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KvVaultUpboundIoV1alpha1SecretV2SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KvVaultUpboundIoV1alpha1SecretV2SpecPublishConnectionDetailsToConfigRefPolicy


schema KvVaultUpboundIoV1alpha1SecretV2SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KvVaultUpboundIoV1alpha1SecretV2SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KvVaultUpboundIoV1alpha1SecretV2SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KvVaultUpboundIoV1alpha1SecretV2Status:
    r"""
    SecretV2Status defines the observed state of SecretV2.

    Attributes
    ----------
    atProvider : KvVaultUpboundIoV1alpha1SecretV2StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KvVaultUpboundIoV1alpha1SecretV2StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: KvVaultUpboundIoV1alpha1SecretV2StatusAtProvider

    conditions?: [KvVaultUpboundIoV1alpha1SecretV2StatusConditionsItems0]


schema KvVaultUpboundIoV1alpha1SecretV2StatusAtProvider:
    r"""
    kv vault upbound io v1alpha1 secret v2 status at provider

    Attributes
    ----------
    cas : float, default is Undefined, optional
        This flag is required if cas_required is set to true on either the secret or the engine's config. In order for a write operation to be successful, cas must be set to the current version of the secret. This flag is required if cas_required is set to true on either the secret or the engine's config. In order for a write to be successful, cas must be set to the current version of the secret.
    customMetadata : [KvVaultUpboundIoV1alpha1SecretV2StatusAtProviderCustomMetadataItems0], default is Undefined, optional
        A nested block that allows configuring metadata for the KV secret. Refer to the Configuration Options for more info. Custom metadata to be set for the secret.
    deleteAllVersions : bool, default is Undefined, optional
        If set to true, permanently deletes all versions for the specified key. If set to true, permanently deletes all versions for the specified key.
    disableRead : bool, default is Undefined, optional
        If set to true, disables reading secret from Vault; note: drift won't be detected. If set to true, disables reading secret from Vault; note: drift won't be detected.
    id : str, default is Undefined, optional
        id
    metadata : {str:str}, default is Undefined, optional
        Metadata associated with this secret read from Vault. Metadata associated with this secret read from Vault.
    mount : str, default is Undefined, optional
        Path where KV-V2 engine is mounted. Path where KV-V2 engine is mounted.
    name : str, default is Undefined, optional
        Full name of the secret. For a nested secret the name is the nested path excluding the mount and data prefix. For example, for a secret at kvv2/data/foo/bar/baz the name is foo/bar/baz. Full name of the secret. For a nested secret, the name is the nested path excluding the mount and data prefix. For example, for a secret at 'kvv2/data/foo/bar/baz', the name is 'foo/bar/baz'
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    options : {str:str}, default is Undefined, optional
        An object that holds option settings. An object that holds option settings.
    path : str, default is Undefined, optional
        Full path where the KV-V2 secret will be written. Full path where the KV-V2 secret will be written.
    """


    cas?: float

    customMetadata?: [KvVaultUpboundIoV1alpha1SecretV2StatusAtProviderCustomMetadataItems0]

    deleteAllVersions?: bool

    disableRead?: bool

    id?: str

    metadata?: {str:str}

    mount?: str

    name?: str

    namespace?: str

    options?: {str:str}

    path?: str


schema KvVaultUpboundIoV1alpha1SecretV2StatusAtProviderCustomMetadataItems0:
    r"""
    kv vault upbound io v1alpha1 secret v2 status at provider custom metadata items0

    Attributes
    ----------
    casRequired : bool, default is Undefined, optional
        If true, all keys will require the cas parameter to be set on all write requests. If true, all keys will require the cas parameter to be set on all write requests.
    data : {str:str}, default is Undefined, optional
        A string to string map describing the secret. A map of arbitrary string to string valued user-provided metadata meant to describe the secret.
    deleteVersionAfter : float, default is Undefined, optional
        If set, specifies the length of time before a version is deleted. Accepts duration in integer seconds. If set, specifies the length of time before a version is deleted.
    maxVersions : float, default is Undefined, optional
        The number of versions to keep per key. The number of versions to keep per key.
    """


    casRequired?: bool

    data?: {str:str}

    deleteVersionAfter?: float

    maxVersions?: float


schema KvVaultUpboundIoV1alpha1SecretV2StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


