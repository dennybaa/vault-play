"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Secret:
    r"""
    Secret is the Schema for the Secrets API. Writes arbitrary data to a given path in Vault

    Attributes
    ----------
    apiVersion : str, default is "generic.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Secret", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GenericVaultUpboundIoV1alpha1SecretSpec, default is Undefined, required
        spec
    status : GenericVaultUpboundIoV1alpha1SecretStatus, default is Undefined, optional
        status
    """


    apiVersion: "generic.vault.upbound.io/v1alpha1" = "generic.vault.upbound.io/v1alpha1"

    kind: "Secret" = "Secret"

    metadata?: v1.ObjectMeta

    spec: GenericVaultUpboundIoV1alpha1SecretSpec

    status?: GenericVaultUpboundIoV1alpha1SecretStatus


schema GenericVaultUpboundIoV1alpha1SecretSpec:
    r"""
    SecretSpec defines the desired state of Secret

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : GenericVaultUpboundIoV1alpha1SecretSpecForProvider, default is Undefined, required
        for provider
    initProvider : GenericVaultUpboundIoV1alpha1SecretSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : GenericVaultUpboundIoV1alpha1SecretSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : GenericVaultUpboundIoV1alpha1SecretSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : GenericVaultUpboundIoV1alpha1SecretSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : GenericVaultUpboundIoV1alpha1SecretSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: GenericVaultUpboundIoV1alpha1SecretSpecForProvider

    initProvider?: GenericVaultUpboundIoV1alpha1SecretSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: GenericVaultUpboundIoV1alpha1SecretSpecProviderConfigRef

    providerRef?: GenericVaultUpboundIoV1alpha1SecretSpecProviderRef

    publishConnectionDetailsTo?: GenericVaultUpboundIoV1alpha1SecretSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: GenericVaultUpboundIoV1alpha1SecretSpecWriteConnectionSecretToRef


schema GenericVaultUpboundIoV1alpha1SecretSpecForProvider:
    r"""
    generic vault upbound io v1alpha1 secret spec for provider

    Attributes
    ----------
    dataJsonSecretRef : GenericVaultUpboundIoV1alpha1SecretSpecForProviderDataJSONSecretRef, default is Undefined, optional
        data Json secret ref
    deleteAllVersions : bool, default is Undefined, optional
        true/false.  Only applicable for kv-v2 stores. If set to true, permanently deletes all versions for the specified key. The default behavior is to only delete the latest version of the secret. Only applicable for kv-v2 stores. If set, permanently deletes all versions for the specified key.
    disableRead : bool, default is Undefined, optional
        true/false. Set this to true if your vault authentication is not able to read the data. Setting this to true will break drift detection. Defaults to false. Don't attempt to read the token from Vault if true; drift won't be detected.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    path : str, default is Undefined, optional
        The full logical path at which to write the given data. To write data into the "generic" secret backend mounted in Vault by default, this should be prefixed with secret/. Writing to other backends with this resource is possible; consult each backend's documentation to see which endpoints support the PUT and DELETE methods. Full path where the generic secret will be written.
    """


    dataJsonSecretRef?: GenericVaultUpboundIoV1alpha1SecretSpecForProviderDataJSONSecretRef

    deleteAllVersions?: bool

    disableRead?: bool

    namespace?: str

    path?: str


schema GenericVaultUpboundIoV1alpha1SecretSpecForProviderDataJSONSecretRef:
    r"""
    String containing a JSON-encoded object that will be written as the secret data at the given path. JSON-encoded secret data to write.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema GenericVaultUpboundIoV1alpha1SecretSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    deleteAllVersions : bool, default is Undefined, optional
        true/false.  Only applicable for kv-v2 stores. If set to true, permanently deletes all versions for the specified key. The default behavior is to only delete the latest version of the secret. Only applicable for kv-v2 stores. If set, permanently deletes all versions for the specified key.
    disableRead : bool, default is Undefined, optional
        true/false. Set this to true if your vault authentication is not able to read the data. Setting this to true will break drift detection. Defaults to false. Don't attempt to read the token from Vault if true; drift won't be detected.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    path : str, default is Undefined, optional
        The full logical path at which to write the given data. To write data into the "generic" secret backend mounted in Vault by default, this should be prefixed with secret/. Writing to other backends with this resource is possible; consult each backend's documentation to see which endpoints support the PUT and DELETE methods. Full path where the generic secret will be written.
    """


    deleteAllVersions?: bool

    disableRead?: bool

    namespace?: str

    path?: str


schema GenericVaultUpboundIoV1alpha1SecretSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GenericVaultUpboundIoV1alpha1SecretSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GenericVaultUpboundIoV1alpha1SecretSpecProviderConfigRefPolicy


schema GenericVaultUpboundIoV1alpha1SecretSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GenericVaultUpboundIoV1alpha1SecretSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GenericVaultUpboundIoV1alpha1SecretSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GenericVaultUpboundIoV1alpha1SecretSpecProviderRefPolicy


schema GenericVaultUpboundIoV1alpha1SecretSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GenericVaultUpboundIoV1alpha1SecretSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : GenericVaultUpboundIoV1alpha1SecretSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : GenericVaultUpboundIoV1alpha1SecretSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: GenericVaultUpboundIoV1alpha1SecretSpecPublishConnectionDetailsToConfigRef

    metadata?: GenericVaultUpboundIoV1alpha1SecretSpecPublishConnectionDetailsToMetadata

    name: str


schema GenericVaultUpboundIoV1alpha1SecretSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GenericVaultUpboundIoV1alpha1SecretSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GenericVaultUpboundIoV1alpha1SecretSpecPublishConnectionDetailsToConfigRefPolicy


schema GenericVaultUpboundIoV1alpha1SecretSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GenericVaultUpboundIoV1alpha1SecretSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema GenericVaultUpboundIoV1alpha1SecretSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema GenericVaultUpboundIoV1alpha1SecretStatus:
    r"""
    SecretStatus defines the observed state of Secret.

    Attributes
    ----------
    atProvider : GenericVaultUpboundIoV1alpha1SecretStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [GenericVaultUpboundIoV1alpha1SecretStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: GenericVaultUpboundIoV1alpha1SecretStatusAtProvider

    conditions?: [GenericVaultUpboundIoV1alpha1SecretStatusConditionsItems0]


schema GenericVaultUpboundIoV1alpha1SecretStatusAtProvider:
    r"""
    generic vault upbound io v1alpha1 secret status at provider

    Attributes
    ----------
    deleteAllVersions : bool, default is Undefined, optional
        true/false.  Only applicable for kv-v2 stores. If set to true, permanently deletes all versions for the specified key. The default behavior is to only delete the latest version of the secret. Only applicable for kv-v2 stores. If set, permanently deletes all versions for the specified key.
    disableRead : bool, default is Undefined, optional
        true/false. Set this to true if your vault authentication is not able to read the data. Setting this to true will break drift detection. Defaults to false. Don't attempt to read the token from Vault if true; drift won't be detected.
    id : str, default is Undefined, optional
        id
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    path : str, default is Undefined, optional
        The full logical path at which to write the given data. To write data into the "generic" secret backend mounted in Vault by default, this should be prefixed with secret/. Writing to other backends with this resource is possible; consult each backend's documentation to see which endpoints support the PUT and DELETE methods. Full path where the generic secret will be written.
    """


    deleteAllVersions?: bool

    disableRead?: bool

    id?: str

    namespace?: str

    path?: str


schema GenericVaultUpboundIoV1alpha1SecretStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


