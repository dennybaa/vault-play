"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AuthBackend:
    r"""
    AuthBackend is the Schema for the AuthBackends API. <no value>

    Attributes
    ----------
    apiVersion : str, default is "gcp.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AuthBackend", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GcpVaultUpboundIoV1alpha1AuthBackendSpec, default is Undefined, required
        spec
    status : GcpVaultUpboundIoV1alpha1AuthBackendStatus, default is Undefined, optional
        status
    """


    apiVersion: "gcp.vault.upbound.io/v1alpha1" = "gcp.vault.upbound.io/v1alpha1"

    kind: "AuthBackend" = "AuthBackend"

    metadata?: v1.ObjectMeta

    spec: GcpVaultUpboundIoV1alpha1AuthBackendSpec

    status?: GcpVaultUpboundIoV1alpha1AuthBackendStatus


schema GcpVaultUpboundIoV1alpha1AuthBackendSpec:
    r"""
    AuthBackendSpec defines the desired state of AuthBackend

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : GcpVaultUpboundIoV1alpha1AuthBackendSpecForProvider, default is Undefined, required
        for provider
    initProvider : GcpVaultUpboundIoV1alpha1AuthBackendSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : GcpVaultUpboundIoV1alpha1AuthBackendSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : GcpVaultUpboundIoV1alpha1AuthBackendSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : GcpVaultUpboundIoV1alpha1AuthBackendSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : GcpVaultUpboundIoV1alpha1AuthBackendSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: GcpVaultUpboundIoV1alpha1AuthBackendSpecForProvider

    initProvider?: GcpVaultUpboundIoV1alpha1AuthBackendSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: GcpVaultUpboundIoV1alpha1AuthBackendSpecProviderConfigRef

    providerRef?: GcpVaultUpboundIoV1alpha1AuthBackendSpecProviderRef

    publishConnectionDetailsTo?: GcpVaultUpboundIoV1alpha1AuthBackendSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: GcpVaultUpboundIoV1alpha1AuthBackendSpecWriteConnectionSecretToRef


schema GcpVaultUpboundIoV1alpha1AuthBackendSpecForProvider:
    r"""
    gcp vault upbound io v1alpha1 auth backend spec for provider

    Attributes
    ----------
    clientEmail : str, default is Undefined, optional
        client email
    clientId : str, default is Undefined, optional
        client Id
    credentialsSecretRef : GcpVaultUpboundIoV1alpha1AuthBackendSpecForProviderCredentialsSecretRef, default is Undefined, optional
        credentials secret ref
    customEndpoint : [GcpVaultUpboundIoV1alpha1AuthBackendSpecForProviderCustomEndpointItems0], default is Undefined, optional
        Specifies overrides to service endpoints used when making API requests to GCP.
    description : str, default is Undefined, optional
        description
    disableRemount : bool, default is Undefined, optional
        If set, opts out of mount migration on path updates.
    local : bool, default is Undefined, optional
        Specifies if the auth method is local only
    namespace : str, default is Undefined, optional
        Target namespace. (requires Enterprise)
    path : str, default is Undefined, optional
        path
    privateKeyId : str, default is Undefined, optional
        private key Id
    projectId : str, default is Undefined, optional
        project Id
    tune : [GcpVaultUpboundIoV1alpha1AuthBackendSpecForProviderTuneItems0], default is Undefined, optional
        tune
    """


    clientEmail?: str

    clientId?: str

    credentialsSecretRef?: GcpVaultUpboundIoV1alpha1AuthBackendSpecForProviderCredentialsSecretRef

    customEndpoint?: [GcpVaultUpboundIoV1alpha1AuthBackendSpecForProviderCustomEndpointItems0]

    description?: str

    disableRemount?: bool

    local?: bool

    namespace?: str

    path?: str

    privateKeyId?: str

    projectId?: str

    tune?: [GcpVaultUpboundIoV1alpha1AuthBackendSpecForProviderTuneItems0]


schema GcpVaultUpboundIoV1alpha1AuthBackendSpecForProviderCredentialsSecretRef:
    r"""
    A SecretKeySelector is a reference to a secret key in an arbitrary namespace.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema GcpVaultUpboundIoV1alpha1AuthBackendSpecForProviderCustomEndpointItems0:
    r"""
    gcp vault upbound io v1alpha1 auth backend spec for provider custom endpoint items0

    Attributes
    ----------
    api : str, default is Undefined, optional
        Replaces the service endpoint used in API requests to https://www.googleapis.com.
    compute : str, default is Undefined, optional
        Replaces the service endpoint used in API requests to `https://compute.googleapis.com`.
    crm : str, default is Undefined, optional
        Replaces the service endpoint used in API requests to `https://cloudresourcemanager.googleapis.com`.
    iam : str, default is Undefined, optional
        Replaces the service endpoint used in API requests to `https://iam.googleapis.com`.
    """


    api?: str

    compute?: str

    crm?: str

    iam?: str


schema GcpVaultUpboundIoV1alpha1AuthBackendSpecForProviderTuneItems0:
    r"""
    gcp vault upbound io v1alpha1 auth backend spec for provider tune items0

    Attributes
    ----------
    allowedResponseHeaders : [str], default is Undefined, optional
        allowed response headers
    auditNonHmacRequestKeys : [str], default is Undefined, optional
        audit non hmac request keys
    auditNonHmacResponseKeys : [str], default is Undefined, optional
        audit non hmac response keys
    defaultLeaseTtl : str, default is Undefined, optional
        default lease Ttl
    listingVisibility : str, default is Undefined, optional
        listing visibility
    maxLeaseTtl : str, default is Undefined, optional
        max lease Ttl
    passthroughRequestHeaders : [str], default is Undefined, optional
        passthrough request headers
    tokenType : str, default is Undefined, optional
        token type
    """


    allowedResponseHeaders?: [str]

    auditNonHmacRequestKeys?: [str]

    auditNonHmacResponseKeys?: [str]

    defaultLeaseTtl?: str

    listingVisibility?: str

    maxLeaseTtl?: str

    passthroughRequestHeaders?: [str]

    tokenType?: str


schema GcpVaultUpboundIoV1alpha1AuthBackendSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    clientEmail : str, default is Undefined, optional
        client email
    clientId : str, default is Undefined, optional
        client Id
    customEndpoint : [GcpVaultUpboundIoV1alpha1AuthBackendSpecInitProviderCustomEndpointItems0], default is Undefined, optional
        Specifies overrides to service endpoints used when making API requests to GCP.
    description : str, default is Undefined, optional
        description
    disableRemount : bool, default is Undefined, optional
        If set, opts out of mount migration on path updates.
    local : bool, default is Undefined, optional
        Specifies if the auth method is local only
    namespace : str, default is Undefined, optional
        Target namespace. (requires Enterprise)
    path : str, default is Undefined, optional
        path
    privateKeyId : str, default is Undefined, optional
        private key Id
    projectId : str, default is Undefined, optional
        project Id
    tune : [GcpVaultUpboundIoV1alpha1AuthBackendSpecInitProviderTuneItems0], default is Undefined, optional
        tune
    """


    clientEmail?: str

    clientId?: str

    customEndpoint?: [GcpVaultUpboundIoV1alpha1AuthBackendSpecInitProviderCustomEndpointItems0]

    description?: str

    disableRemount?: bool

    local?: bool

    namespace?: str

    path?: str

    privateKeyId?: str

    projectId?: str

    tune?: [GcpVaultUpboundIoV1alpha1AuthBackendSpecInitProviderTuneItems0]


schema GcpVaultUpboundIoV1alpha1AuthBackendSpecInitProviderCustomEndpointItems0:
    r"""
    gcp vault upbound io v1alpha1 auth backend spec init provider custom endpoint items0

    Attributes
    ----------
    api : str, default is Undefined, optional
        Replaces the service endpoint used in API requests to https://www.googleapis.com.
    compute : str, default is Undefined, optional
        Replaces the service endpoint used in API requests to `https://compute.googleapis.com`.
    crm : str, default is Undefined, optional
        Replaces the service endpoint used in API requests to `https://cloudresourcemanager.googleapis.com`.
    iam : str, default is Undefined, optional
        Replaces the service endpoint used in API requests to `https://iam.googleapis.com`.
    """


    api?: str

    compute?: str

    crm?: str

    iam?: str


schema GcpVaultUpboundIoV1alpha1AuthBackendSpecInitProviderTuneItems0:
    r"""
    gcp vault upbound io v1alpha1 auth backend spec init provider tune items0

    Attributes
    ----------
    allowedResponseHeaders : [str], default is Undefined, optional
        allowed response headers
    auditNonHmacRequestKeys : [str], default is Undefined, optional
        audit non hmac request keys
    auditNonHmacResponseKeys : [str], default is Undefined, optional
        audit non hmac response keys
    defaultLeaseTtl : str, default is Undefined, optional
        default lease Ttl
    listingVisibility : str, default is Undefined, optional
        listing visibility
    maxLeaseTtl : str, default is Undefined, optional
        max lease Ttl
    passthroughRequestHeaders : [str], default is Undefined, optional
        passthrough request headers
    tokenType : str, default is Undefined, optional
        token type
    """


    allowedResponseHeaders?: [str]

    auditNonHmacRequestKeys?: [str]

    auditNonHmacResponseKeys?: [str]

    defaultLeaseTtl?: str

    listingVisibility?: str

    maxLeaseTtl?: str

    passthroughRequestHeaders?: [str]

    tokenType?: str


schema GcpVaultUpboundIoV1alpha1AuthBackendSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GcpVaultUpboundIoV1alpha1AuthBackendSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GcpVaultUpboundIoV1alpha1AuthBackendSpecProviderConfigRefPolicy


schema GcpVaultUpboundIoV1alpha1AuthBackendSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GcpVaultUpboundIoV1alpha1AuthBackendSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GcpVaultUpboundIoV1alpha1AuthBackendSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GcpVaultUpboundIoV1alpha1AuthBackendSpecProviderRefPolicy


schema GcpVaultUpboundIoV1alpha1AuthBackendSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GcpVaultUpboundIoV1alpha1AuthBackendSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : GcpVaultUpboundIoV1alpha1AuthBackendSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : GcpVaultUpboundIoV1alpha1AuthBackendSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: GcpVaultUpboundIoV1alpha1AuthBackendSpecPublishConnectionDetailsToConfigRef

    metadata?: GcpVaultUpboundIoV1alpha1AuthBackendSpecPublishConnectionDetailsToMetadata

    name: str


schema GcpVaultUpboundIoV1alpha1AuthBackendSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GcpVaultUpboundIoV1alpha1AuthBackendSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GcpVaultUpboundIoV1alpha1AuthBackendSpecPublishConnectionDetailsToConfigRefPolicy


schema GcpVaultUpboundIoV1alpha1AuthBackendSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GcpVaultUpboundIoV1alpha1AuthBackendSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema GcpVaultUpboundIoV1alpha1AuthBackendSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema GcpVaultUpboundIoV1alpha1AuthBackendStatus:
    r"""
    AuthBackendStatus defines the observed state of AuthBackend.

    Attributes
    ----------
    atProvider : GcpVaultUpboundIoV1alpha1AuthBackendStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [GcpVaultUpboundIoV1alpha1AuthBackendStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: GcpVaultUpboundIoV1alpha1AuthBackendStatusAtProvider

    conditions?: [GcpVaultUpboundIoV1alpha1AuthBackendStatusConditionsItems0]


schema GcpVaultUpboundIoV1alpha1AuthBackendStatusAtProvider:
    r"""
    gcp vault upbound io v1alpha1 auth backend status at provider

    Attributes
    ----------
    accessor : str, default is Undefined, optional
        The accessor of the auth backend
    clientEmail : str, default is Undefined, optional
        client email
    clientId : str, default is Undefined, optional
        client Id
    customEndpoint : [GcpVaultUpboundIoV1alpha1AuthBackendStatusAtProviderCustomEndpointItems0], default is Undefined, optional
        Specifies overrides to service endpoints used when making API requests to GCP.
    description : str, default is Undefined, optional
        description
    disableRemount : bool, default is Undefined, optional
        If set, opts out of mount migration on path updates.
    id : str, default is Undefined, optional
        id
    local : bool, default is Undefined, optional
        Specifies if the auth method is local only
    namespace : str, default is Undefined, optional
        Target namespace. (requires Enterprise)
    path : str, default is Undefined, optional
        path
    privateKeyId : str, default is Undefined, optional
        private key Id
    projectId : str, default is Undefined, optional
        project Id
    tune : [GcpVaultUpboundIoV1alpha1AuthBackendStatusAtProviderTuneItems0], default is Undefined, optional
        tune
    """


    accessor?: str

    clientEmail?: str

    clientId?: str

    customEndpoint?: [GcpVaultUpboundIoV1alpha1AuthBackendStatusAtProviderCustomEndpointItems0]

    description?: str

    disableRemount?: bool

    id?: str

    local?: bool

    namespace?: str

    path?: str

    privateKeyId?: str

    projectId?: str

    tune?: [GcpVaultUpboundIoV1alpha1AuthBackendStatusAtProviderTuneItems0]


schema GcpVaultUpboundIoV1alpha1AuthBackendStatusAtProviderCustomEndpointItems0:
    r"""
    gcp vault upbound io v1alpha1 auth backend status at provider custom endpoint items0

    Attributes
    ----------
    api : str, default is Undefined, optional
        Replaces the service endpoint used in API requests to https://www.googleapis.com.
    compute : str, default is Undefined, optional
        Replaces the service endpoint used in API requests to `https://compute.googleapis.com`.
    crm : str, default is Undefined, optional
        Replaces the service endpoint used in API requests to `https://cloudresourcemanager.googleapis.com`.
    iam : str, default is Undefined, optional
        Replaces the service endpoint used in API requests to `https://iam.googleapis.com`.
    """


    api?: str

    compute?: str

    crm?: str

    iam?: str


schema GcpVaultUpboundIoV1alpha1AuthBackendStatusAtProviderTuneItems0:
    r"""
    gcp vault upbound io v1alpha1 auth backend status at provider tune items0

    Attributes
    ----------
    allowedResponseHeaders : [str], default is Undefined, optional
        allowed response headers
    auditNonHmacRequestKeys : [str], default is Undefined, optional
        audit non hmac request keys
    auditNonHmacResponseKeys : [str], default is Undefined, optional
        audit non hmac response keys
    defaultLeaseTtl : str, default is Undefined, optional
        default lease Ttl
    listingVisibility : str, default is Undefined, optional
        listing visibility
    maxLeaseTtl : str, default is Undefined, optional
        max lease Ttl
    passthroughRequestHeaders : [str], default is Undefined, optional
        passthrough request headers
    tokenType : str, default is Undefined, optional
        token type
    """


    allowedResponseHeaders?: [str]

    auditNonHmacRequestKeys?: [str]

    auditNonHmacResponseKeys?: [str]

    defaultLeaseTtl?: str

    listingVisibility?: str

    maxLeaseTtl?: str

    passthroughRequestHeaders?: [str]

    tokenType?: str


schema GcpVaultUpboundIoV1alpha1AuthBackendStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


