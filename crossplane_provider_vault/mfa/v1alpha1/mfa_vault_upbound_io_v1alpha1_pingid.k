"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Pingid:
    r"""
    Pingid is the Schema for the Pingids API. Managing the MFA PingID method configuration

    Attributes
    ----------
    apiVersion : str, default is "mfa.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Pingid", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MfaVaultUpboundIoV1alpha1PingidSpec, default is Undefined, required
        spec
    status : MfaVaultUpboundIoV1alpha1PingidStatus, default is Undefined, optional
        status
    """


    apiVersion: "mfa.vault.upbound.io/v1alpha1" = "mfa.vault.upbound.io/v1alpha1"

    kind: "Pingid" = "Pingid"

    metadata?: v1.ObjectMeta

    spec: MfaVaultUpboundIoV1alpha1PingidSpec

    status?: MfaVaultUpboundIoV1alpha1PingidStatus


schema MfaVaultUpboundIoV1alpha1PingidSpec:
    r"""
    PingidSpec defines the desired state of Pingid

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : MfaVaultUpboundIoV1alpha1PingidSpecForProvider, default is Undefined, required
        for provider
    initProvider : MfaVaultUpboundIoV1alpha1PingidSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : MfaVaultUpboundIoV1alpha1PingidSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : MfaVaultUpboundIoV1alpha1PingidSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : MfaVaultUpboundIoV1alpha1PingidSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : MfaVaultUpboundIoV1alpha1PingidSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: MfaVaultUpboundIoV1alpha1PingidSpecForProvider

    initProvider?: MfaVaultUpboundIoV1alpha1PingidSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: MfaVaultUpboundIoV1alpha1PingidSpecProviderConfigRef

    providerRef?: MfaVaultUpboundIoV1alpha1PingidSpecProviderRef

    publishConnectionDetailsTo?: MfaVaultUpboundIoV1alpha1PingidSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: MfaVaultUpboundIoV1alpha1PingidSpecWriteConnectionSecretToRef


schema MfaVaultUpboundIoV1alpha1PingidSpecForProvider:
    r"""
    mfa vault upbound io v1alpha1 pingid spec for provider

    Attributes
    ----------
    mountAccessor : str, default is Undefined, optional
        The mount to tie this method to for use in automatic mappings. The mapping will use the Name field of Aliases associated with this mount as the username in the mapping. The mount to tie this method to for use in automatic mappings. The mapping will use the Name field of Aliases associated with this mount as the username in the mapping.
    name : str, default is Undefined, optional
        (string: <required>) – Name of the MFA method. Name of the MFA method.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    settingsFileBase64 : str, default is Undefined, optional
        A base64-encoded third-party settings file retrieved from PingID's configuration page. A base64-encoded third-party settings file retrieved from PingID's configuration page.
    usernameFormat : str, default is Undefined, optional
        A format string for mapping Identity names to MFA method names. Values to substitute should be placed in {{}}. For example, "{{alias.name}}@example.com". If blank, the Alias's Name field will be used as-is. Currently-supported mappings: A format string for mapping Identity names to MFA method names. Values to substitute should be placed in `{{}}`.
    """


    mountAccessor?: str

    name?: str

    namespace?: str

    settingsFileBase64?: str

    usernameFormat?: str


schema MfaVaultUpboundIoV1alpha1PingidSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    mountAccessor : str, default is Undefined, optional
        The mount to tie this method to for use in automatic mappings. The mapping will use the Name field of Aliases associated with this mount as the username in the mapping. The mount to tie this method to for use in automatic mappings. The mapping will use the Name field of Aliases associated with this mount as the username in the mapping.
    name : str, default is Undefined, optional
        (string: <required>) – Name of the MFA method. Name of the MFA method.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    settingsFileBase64 : str, default is Undefined, optional
        A base64-encoded third-party settings file retrieved from PingID's configuration page. A base64-encoded third-party settings file retrieved from PingID's configuration page.
    usernameFormat : str, default is Undefined, optional
        A format string for mapping Identity names to MFA method names. Values to substitute should be placed in {{}}. For example, "{{alias.name}}@example.com". If blank, the Alias's Name field will be used as-is. Currently-supported mappings: A format string for mapping Identity names to MFA method names. Values to substitute should be placed in `{{}}`.
    """


    mountAccessor?: str

    name?: str

    namespace?: str

    settingsFileBase64?: str

    usernameFormat?: str


schema MfaVaultUpboundIoV1alpha1PingidSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MfaVaultUpboundIoV1alpha1PingidSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MfaVaultUpboundIoV1alpha1PingidSpecProviderConfigRefPolicy


schema MfaVaultUpboundIoV1alpha1PingidSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MfaVaultUpboundIoV1alpha1PingidSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MfaVaultUpboundIoV1alpha1PingidSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MfaVaultUpboundIoV1alpha1PingidSpecProviderRefPolicy


schema MfaVaultUpboundIoV1alpha1PingidSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MfaVaultUpboundIoV1alpha1PingidSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : MfaVaultUpboundIoV1alpha1PingidSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : MfaVaultUpboundIoV1alpha1PingidSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: MfaVaultUpboundIoV1alpha1PingidSpecPublishConnectionDetailsToConfigRef

    metadata?: MfaVaultUpboundIoV1alpha1PingidSpecPublishConnectionDetailsToMetadata

    name: str


schema MfaVaultUpboundIoV1alpha1PingidSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MfaVaultUpboundIoV1alpha1PingidSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MfaVaultUpboundIoV1alpha1PingidSpecPublishConnectionDetailsToConfigRefPolicy


schema MfaVaultUpboundIoV1alpha1PingidSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MfaVaultUpboundIoV1alpha1PingidSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema MfaVaultUpboundIoV1alpha1PingidSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema MfaVaultUpboundIoV1alpha1PingidStatus:
    r"""
    PingidStatus defines the observed state of Pingid.

    Attributes
    ----------
    atProvider : MfaVaultUpboundIoV1alpha1PingidStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [MfaVaultUpboundIoV1alpha1PingidStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: MfaVaultUpboundIoV1alpha1PingidStatusAtProvider

    conditions?: [MfaVaultUpboundIoV1alpha1PingidStatusConditionsItems0]


schema MfaVaultUpboundIoV1alpha1PingidStatusAtProvider:
    r"""
    mfa vault upbound io v1alpha1 pingid status at provider

    Attributes
    ----------
    adminUrl : str, default is Undefined, optional
        (string) – Admin URL computed by Vault Admin URL computed by Vault.
    authenticatorUrl : str, default is Undefined, optional
        (string) – Authenticator URL computed by Vault Authenticator URL computed by Vault.
    id : str, default is Undefined, optional
        (string) – ID computed by Vault
    idpUrl : str, default is Undefined, optional
        (string) – IDP URL computed by Vault IDP URL computed by Vault.
    mountAccessor : str, default is Undefined, optional
        The mount to tie this method to for use in automatic mappings. The mapping will use the Name field of Aliases associated with this mount as the username in the mapping. The mount to tie this method to for use in automatic mappings. The mapping will use the Name field of Aliases associated with this mount as the username in the mapping.
    name : str, default is Undefined, optional
        (string: <required>) – Name of the MFA method. Name of the MFA method.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    namespaceId : str, default is Undefined, optional
        (string) – Namespace ID computed by Vault Namespace ID computed by Vault.
    orgAlias : str, default is Undefined, optional
        (string) – Org Alias computed by Vault Org Alias computed by Vault.
    settingsFileBase64 : str, default is Undefined, optional
        A base64-encoded third-party settings file retrieved from PingID's configuration page. A base64-encoded third-party settings file retrieved from PingID's configuration page.
    $type : str, default is Undefined, optional
        (string) – Type of configuration computed by Vault Type of configuration computed by Vault.
    useSignature : bool, default is Undefined, optional
        (string) – If set to true, enables use of PingID signature. Computed by Vault If set, enables use of PingID signature. Computed by Vault
    usernameFormat : str, default is Undefined, optional
        A format string for mapping Identity names to MFA method names. Values to substitute should be placed in {{}}. For example, "{{alias.name}}@example.com". If blank, the Alias's Name field will be used as-is. Currently-supported mappings: A format string for mapping Identity names to MFA method names. Values to substitute should be placed in `{{}}`.
    """


    adminUrl?: str

    authenticatorUrl?: str

    id?: str

    idpUrl?: str

    mountAccessor?: str

    name?: str

    namespace?: str

    namespaceId?: str

    orgAlias?: str

    settingsFileBase64?: str

    $type?: str

    useSignature?: bool

    usernameFormat?: str


schema MfaVaultUpboundIoV1alpha1PingidStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


