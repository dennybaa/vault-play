"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SnapshotAgentConfig:
    r"""
    SnapshotAgentConfig is the Schema for the SnapshotAgentConfigs API. Creates a Raft Snapshot Agent Configuration for Vault.

    Attributes
    ----------
    apiVersion : str, default is "raft.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SnapshotAgentConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpec, default is Undefined, required
        spec
    status : RaftVaultUpboundIoV1alpha1SnapshotAgentConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "raft.vault.upbound.io/v1alpha1" = "raft.vault.upbound.io/v1alpha1"

    kind: "SnapshotAgentConfig" = "SnapshotAgentConfig"

    metadata?: v1.ObjectMeta

    spec: RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpec

    status?: RaftVaultUpboundIoV1alpha1SnapshotAgentConfigStatus


schema RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpec:
    r"""
    SnapshotAgentConfigSpec defines the desired state of SnapshotAgentConfig

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecForProvider, default is Undefined, required
        for provider
    initProvider : RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecForProvider

    initProvider?: RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecProviderConfigRef

    providerRef?: RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecProviderRef

    publishConnectionDetailsTo?: RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecWriteConnectionSecretToRef


schema RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecForProvider:
    r"""
    raft vault upbound io v1alpha1 snapshot agent config spec for provider

    Attributes
    ----------
    awsAccessKeyId : str, default is Undefined, optional
        AWS access key ID. AWS access key ID.
    awsS3Bucket : str, default is Undefined, optional
        S3 bucket to write snapshots to. S3 bucket to write snapshots to.
    awsS3DisableTls : bool, default is Undefined, optional
        Disable TLS for the S3 endpoint. This should only be used for testing purposes, typically in conjunction with aws_s3_endpoint. Disable TLS for the S3 endpoint. This should only be used for testing purposes.
    awsS3EnableKms : bool, default is Undefined, optional
        Use KMS to encrypt bucket contents. Use KMS to encrypt bucket contents.
    awsS3Endpoint : str, default is Undefined, optional
        AWS endpoint. This is typically only set when using a non-AWS S3 implementation like Minio. AWS endpoint. This is typically only set when using a non-AWS S3 implementation like Minio.
    awsS3ForcePathStyle : bool, default is Undefined, optional
        Use the endpoint/bucket URL style instead of bucket.endpoint. May be needed when setting aws_s3_endpoint. Use the endpoint/bucket URL style instead of bucket.endpoint.
    awsS3KmsKey : str, default is Undefined, optional
        Use named KMS key, when aws_s3_enable_kms = true Use named KMS key, when aws_s3_enable_kms=true
    awsS3Region : str, default is Undefined, optional
        AWS region bucket is in. AWS region bucket is in.
    awsS3ServerSideEncryption : bool, default is Undefined, optional
        Use AES256 to encrypt bucket contents. Use AES256 to encrypt bucket contents.
    awsSecretAccessKey : str, default is Undefined, optional
        AWS secret access key. AWS secret access key.
    awsSessionToken : str, default is Undefined, optional
        AWS session token. AWS session token.
    azureAccountKey : str, default is Undefined, optional
        Azure account key. Azure account key.
    azureAccountName : str, default is Undefined, optional
        Azure account name. Azure account name.
    azureBlobEnvironment : str, default is Undefined, optional
        Azure blob environment. Azure blob environment.
    azureContainerName : str, default is Undefined, optional
        Azure container name to write snapshots to. Azure container name to write snapshots to.
    azureEndpoint : str, default is Undefined, optional
        Azure blob storage endpoint. This is typically only set when using a non-Azure implementation like Azurite. Azure blob storage endpoint. This is typically only set when using a non-Azure implementation like Azurite.
    filePrefix : str, default is Undefined, optional
        Within the directory or bucket prefix given by path_prefix, the file or object name of snapshot files will start with this string. The file or object name of snapshot files will start with this string.
    googleDisableTls : bool, default is Undefined, optional
        Disable TLS for the GCS endpoint. This should only be used for testing purposes, typically in conjunction with google_endpoint. Disable TLS for the GCS endpoint.
    googleEndpoint : str, default is Undefined, optional
        GCS endpoint. This is typically only set when using a non-Google GCS implementation like fake-gcs-server. GCS endpoint. This is typically only set when using a non-Google GCS implementation like fake-gcs-server.
    googleGcsBucket : str, default is Undefined, optional
        GCS bucket to write snapshots to. GCS bucket to write snapshots to.
    googleServiceAccountKey : str, default is Undefined, optional
        Google service account key in JSON format. The raw value looks like this: Google service account key in JSON format.
    intervalSeconds : float, default is Undefined, optional
        Time (in seconds) between snapshots. Number of seconds between snapshots.
    localMaxSpace : float, default is Undefined, optional
        For storage_type = local, the maximum space, in bytes, to use for snapshots. Snapshot attempts will fail if there is not enough space left in this allowance. The maximum space, in bytes, to use for snapshots.
    name : str, default is Undefined, optional
        <required> â€“ Name of the configuration to modify. Name of the snapshot agent configuration.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    pathPrefix : str, default is Undefined, optional
        For storage_type = "local", the directory to write the snapshots in. For cloud storage types, the bucket prefix to use. Types azure-s3 and google-gcs require a trailing / (slash). Types local and aws-s3 the trailing / is optional. The directory or bucket prefix to to use.
    retain : float, default is Undefined, optional
        How many snapshots are to be kept; when writing a snapshot, if there are more snapshots already stored than this number, the oldest ones will be deleted. How many snapshots are to be kept.
    storageType : str, default is Undefined, optional
        One of "local", "azure-blob", "aws-s3", or "google-gcs". The remaining parameters described below are all specific to the selected storage_type and prefixed accordingly. What storage service to send snapshots to. One of "local", "azure-blob", "aws-s3", or "google-gcs".
    """


    awsAccessKeyId?: str

    awsS3Bucket?: str

    awsS3DisableTls?: bool

    awsS3EnableKms?: bool

    awsS3Endpoint?: str

    awsS3ForcePathStyle?: bool

    awsS3KmsKey?: str

    awsS3Region?: str

    awsS3ServerSideEncryption?: bool

    awsSecretAccessKey?: str

    awsSessionToken?: str

    azureAccountKey?: str

    azureAccountName?: str

    azureBlobEnvironment?: str

    azureContainerName?: str

    azureEndpoint?: str

    filePrefix?: str

    googleDisableTls?: bool

    googleEndpoint?: str

    googleGcsBucket?: str

    googleServiceAccountKey?: str

    intervalSeconds?: float

    localMaxSpace?: float

    name?: str

    namespace?: str

    pathPrefix?: str

    retain?: float

    storageType?: str


schema RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    awsAccessKeyId : str, default is Undefined, optional
        AWS access key ID. AWS access key ID.
    awsS3Bucket : str, default is Undefined, optional
        S3 bucket to write snapshots to. S3 bucket to write snapshots to.
    awsS3DisableTls : bool, default is Undefined, optional
        Disable TLS for the S3 endpoint. This should only be used for testing purposes, typically in conjunction with aws_s3_endpoint. Disable TLS for the S3 endpoint. This should only be used for testing purposes.
    awsS3EnableKms : bool, default is Undefined, optional
        Use KMS to encrypt bucket contents. Use KMS to encrypt bucket contents.
    awsS3Endpoint : str, default is Undefined, optional
        AWS endpoint. This is typically only set when using a non-AWS S3 implementation like Minio. AWS endpoint. This is typically only set when using a non-AWS S3 implementation like Minio.
    awsS3ForcePathStyle : bool, default is Undefined, optional
        Use the endpoint/bucket URL style instead of bucket.endpoint. May be needed when setting aws_s3_endpoint. Use the endpoint/bucket URL style instead of bucket.endpoint.
    awsS3KmsKey : str, default is Undefined, optional
        Use named KMS key, when aws_s3_enable_kms = true Use named KMS key, when aws_s3_enable_kms=true
    awsS3Region : str, default is Undefined, optional
        AWS region bucket is in. AWS region bucket is in.
    awsS3ServerSideEncryption : bool, default is Undefined, optional
        Use AES256 to encrypt bucket contents. Use AES256 to encrypt bucket contents.
    awsSecretAccessKey : str, default is Undefined, optional
        AWS secret access key. AWS secret access key.
    awsSessionToken : str, default is Undefined, optional
        AWS session token. AWS session token.
    azureAccountKey : str, default is Undefined, optional
        Azure account key. Azure account key.
    azureAccountName : str, default is Undefined, optional
        Azure account name. Azure account name.
    azureBlobEnvironment : str, default is Undefined, optional
        Azure blob environment. Azure blob environment.
    azureContainerName : str, default is Undefined, optional
        Azure container name to write snapshots to. Azure container name to write snapshots to.
    azureEndpoint : str, default is Undefined, optional
        Azure blob storage endpoint. This is typically only set when using a non-Azure implementation like Azurite. Azure blob storage endpoint. This is typically only set when using a non-Azure implementation like Azurite.
    filePrefix : str, default is Undefined, optional
        Within the directory or bucket prefix given by path_prefix, the file or object name of snapshot files will start with this string. The file or object name of snapshot files will start with this string.
    googleDisableTls : bool, default is Undefined, optional
        Disable TLS for the GCS endpoint. This should only be used for testing purposes, typically in conjunction with google_endpoint. Disable TLS for the GCS endpoint.
    googleEndpoint : str, default is Undefined, optional
        GCS endpoint. This is typically only set when using a non-Google GCS implementation like fake-gcs-server. GCS endpoint. This is typically only set when using a non-Google GCS implementation like fake-gcs-server.
    googleGcsBucket : str, default is Undefined, optional
        GCS bucket to write snapshots to. GCS bucket to write snapshots to.
    googleServiceAccountKey : str, default is Undefined, optional
        Google service account key in JSON format. The raw value looks like this: Google service account key in JSON format.
    intervalSeconds : float, default is Undefined, optional
        Time (in seconds) between snapshots. Number of seconds between snapshots.
    localMaxSpace : float, default is Undefined, optional
        For storage_type = local, the maximum space, in bytes, to use for snapshots. Snapshot attempts will fail if there is not enough space left in this allowance. The maximum space, in bytes, to use for snapshots.
    name : str, default is Undefined, optional
        <required> â€“ Name of the configuration to modify. Name of the snapshot agent configuration.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    pathPrefix : str, default is Undefined, optional
        For storage_type = "local", the directory to write the snapshots in. For cloud storage types, the bucket prefix to use. Types azure-s3 and google-gcs require a trailing / (slash). Types local and aws-s3 the trailing / is optional. The directory or bucket prefix to to use.
    retain : float, default is Undefined, optional
        How many snapshots are to be kept; when writing a snapshot, if there are more snapshots already stored than this number, the oldest ones will be deleted. How many snapshots are to be kept.
    storageType : str, default is Undefined, optional
        One of "local", "azure-blob", "aws-s3", or "google-gcs". The remaining parameters described below are all specific to the selected storage_type and prefixed accordingly. What storage service to send snapshots to. One of "local", "azure-blob", "aws-s3", or "google-gcs".
    """


    awsAccessKeyId?: str

    awsS3Bucket?: str

    awsS3DisableTls?: bool

    awsS3EnableKms?: bool

    awsS3Endpoint?: str

    awsS3ForcePathStyle?: bool

    awsS3KmsKey?: str

    awsS3Region?: str

    awsS3ServerSideEncryption?: bool

    awsSecretAccessKey?: str

    awsSessionToken?: str

    azureAccountKey?: str

    azureAccountName?: str

    azureBlobEnvironment?: str

    azureContainerName?: str

    azureEndpoint?: str

    filePrefix?: str

    googleDisableTls?: bool

    googleEndpoint?: str

    googleGcsBucket?: str

    googleServiceAccountKey?: str

    intervalSeconds?: float

    localMaxSpace?: float

    name?: str

    namespace?: str

    pathPrefix?: str

    retain?: float

    storageType?: str


schema RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecProviderConfigRefPolicy


schema RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecProviderRefPolicy


schema RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecPublishConnectionDetailsToConfigRef

    metadata?: RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecPublishConnectionDetailsToMetadata

    name: str


schema RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecPublishConnectionDetailsToConfigRefPolicy


schema RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RaftVaultUpboundIoV1alpha1SnapshotAgentConfigSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RaftVaultUpboundIoV1alpha1SnapshotAgentConfigStatus:
    r"""
    SnapshotAgentConfigStatus defines the observed state of SnapshotAgentConfig.

    Attributes
    ----------
    atProvider : RaftVaultUpboundIoV1alpha1SnapshotAgentConfigStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RaftVaultUpboundIoV1alpha1SnapshotAgentConfigStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: RaftVaultUpboundIoV1alpha1SnapshotAgentConfigStatusAtProvider

    conditions?: [RaftVaultUpboundIoV1alpha1SnapshotAgentConfigStatusConditionsItems0]


schema RaftVaultUpboundIoV1alpha1SnapshotAgentConfigStatusAtProvider:
    r"""
    raft vault upbound io v1alpha1 snapshot agent config status at provider

    Attributes
    ----------
    awsAccessKeyId : str, default is Undefined, optional
        AWS access key ID. AWS access key ID.
    awsS3Bucket : str, default is Undefined, optional
        S3 bucket to write snapshots to. S3 bucket to write snapshots to.
    awsS3DisableTls : bool, default is Undefined, optional
        Disable TLS for the S3 endpoint. This should only be used for testing purposes, typically in conjunction with aws_s3_endpoint. Disable TLS for the S3 endpoint. This should only be used for testing purposes.
    awsS3EnableKms : bool, default is Undefined, optional
        Use KMS to encrypt bucket contents. Use KMS to encrypt bucket contents.
    awsS3Endpoint : str, default is Undefined, optional
        AWS endpoint. This is typically only set when using a non-AWS S3 implementation like Minio. AWS endpoint. This is typically only set when using a non-AWS S3 implementation like Minio.
    awsS3ForcePathStyle : bool, default is Undefined, optional
        Use the endpoint/bucket URL style instead of bucket.endpoint. May be needed when setting aws_s3_endpoint. Use the endpoint/bucket URL style instead of bucket.endpoint.
    awsS3KmsKey : str, default is Undefined, optional
        Use named KMS key, when aws_s3_enable_kms = true Use named KMS key, when aws_s3_enable_kms=true
    awsS3Region : str, default is Undefined, optional
        AWS region bucket is in. AWS region bucket is in.
    awsS3ServerSideEncryption : bool, default is Undefined, optional
        Use AES256 to encrypt bucket contents. Use AES256 to encrypt bucket contents.
    awsSecretAccessKey : str, default is Undefined, optional
        AWS secret access key. AWS secret access key.
    awsSessionToken : str, default is Undefined, optional
        AWS session token. AWS session token.
    azureAccountKey : str, default is Undefined, optional
        Azure account key. Azure account key.
    azureAccountName : str, default is Undefined, optional
        Azure account name. Azure account name.
    azureBlobEnvironment : str, default is Undefined, optional
        Azure blob environment. Azure blob environment.
    azureContainerName : str, default is Undefined, optional
        Azure container name to write snapshots to. Azure container name to write snapshots to.
    azureEndpoint : str, default is Undefined, optional
        Azure blob storage endpoint. This is typically only set when using a non-Azure implementation like Azurite. Azure blob storage endpoint. This is typically only set when using a non-Azure implementation like Azurite.
    filePrefix : str, default is Undefined, optional
        Within the directory or bucket prefix given by path_prefix, the file or object name of snapshot files will start with this string. The file or object name of snapshot files will start with this string.
    googleDisableTls : bool, default is Undefined, optional
        Disable TLS for the GCS endpoint. This should only be used for testing purposes, typically in conjunction with google_endpoint. Disable TLS for the GCS endpoint.
    googleEndpoint : str, default is Undefined, optional
        GCS endpoint. This is typically only set when using a non-Google GCS implementation like fake-gcs-server. GCS endpoint. This is typically only set when using a non-Google GCS implementation like fake-gcs-server.
    googleGcsBucket : str, default is Undefined, optional
        GCS bucket to write snapshots to. GCS bucket to write snapshots to.
    googleServiceAccountKey : str, default is Undefined, optional
        Google service account key in JSON format. The raw value looks like this: Google service account key in JSON format.
    id : str, default is Undefined, optional
        id
    intervalSeconds : float, default is Undefined, optional
        Time (in seconds) between snapshots. Number of seconds between snapshots.
    localMaxSpace : float, default is Undefined, optional
        For storage_type = local, the maximum space, in bytes, to use for snapshots. Snapshot attempts will fail if there is not enough space left in this allowance. The maximum space, in bytes, to use for snapshots.
    name : str, default is Undefined, optional
        <required> â€“ Name of the configuration to modify. Name of the snapshot agent configuration.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    pathPrefix : str, default is Undefined, optional
        For storage_type = "local", the directory to write the snapshots in. For cloud storage types, the bucket prefix to use. Types azure-s3 and google-gcs require a trailing / (slash). Types local and aws-s3 the trailing / is optional. The directory or bucket prefix to to use.
    retain : float, default is Undefined, optional
        How many snapshots are to be kept; when writing a snapshot, if there are more snapshots already stored than this number, the oldest ones will be deleted. How many snapshots are to be kept.
    storageType : str, default is Undefined, optional
        One of "local", "azure-blob", "aws-s3", or "google-gcs". The remaining parameters described below are all specific to the selected storage_type and prefixed accordingly. What storage service to send snapshots to. One of "local", "azure-blob", "aws-s3", or "google-gcs".
    """


    awsAccessKeyId?: str

    awsS3Bucket?: str

    awsS3DisableTls?: bool

    awsS3EnableKms?: bool

    awsS3Endpoint?: str

    awsS3ForcePathStyle?: bool

    awsS3KmsKey?: str

    awsS3Region?: str

    awsS3ServerSideEncryption?: bool

    awsSecretAccessKey?: str

    awsSessionToken?: str

    azureAccountKey?: str

    azureAccountName?: str

    azureBlobEnvironment?: str

    azureContainerName?: str

    azureEndpoint?: str

    filePrefix?: str

    googleDisableTls?: bool

    googleEndpoint?: str

    googleGcsBucket?: str

    googleServiceAccountKey?: str

    id?: str

    intervalSeconds?: float

    localMaxSpace?: float

    name?: str

    namespace?: str

    pathPrefix?: str

    retain?: float

    storageType?: str


schema RaftVaultUpboundIoV1alpha1SnapshotAgentConfigStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


