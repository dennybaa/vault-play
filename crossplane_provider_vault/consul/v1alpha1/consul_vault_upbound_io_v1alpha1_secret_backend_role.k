"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecretBackendRole:
    r"""
    SecretBackendRole is the Schema for the SecretBackendRoles API. Manages a Consul secrets role for a Consul secrets engine in Vault.

    Attributes
    ----------
    apiVersion : str, default is "consul.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecretBackendRole", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpec, default is Undefined, required
        spec
    status : ConsulVaultUpboundIoV1alpha1SecretBackendRoleStatus, default is Undefined, optional
        status
    """


    apiVersion: "consul.vault.upbound.io/v1alpha1" = "consul.vault.upbound.io/v1alpha1"

    kind: "SecretBackendRole" = "SecretBackendRole"

    metadata?: v1.ObjectMeta

    spec: ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpec

    status?: ConsulVaultUpboundIoV1alpha1SecretBackendRoleStatus


schema ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpec:
    r"""
    SecretBackendRoleSpec defines the desired state of SecretBackendRole

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecForProvider, default is Undefined, required
        for provider
    initProvider : ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecForProvider

    initProvider?: ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRef

    providerRef?: ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRef

    publishConnectionDetailsTo?: ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecWriteConnectionSecretToRef


schema ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecForProvider:
    r"""
    consul vault upbound io v1alpha1 secret backend role spec for provider

    Attributes
    ----------
    backend : str, default is Undefined, optional
        The unique name of an existing Consul secrets backend mount. Must not begin or end with a /. One of path or backend is required. The path of the Consul Secret Backend the role belongs to.
    consulNamespace : str, default is Undefined, optional
        The Consul namespace that the token will be created in. Applicable for Vault 1.10+ and Consul 1.7+". The Consul namespace that the token will be created in. Applicable for Vault 1.10+ and Consul 1.7+
    consulPolicies : [str], default is Undefined, optional
        SEE NOTE The list of Consul ACL policies to associate with these roles. List of Consul policies to associate with this role
    consulRoles : [str], default is Undefined, optional
        SEE NOTE Set of Consul roles to attach to the token. Applicable for Vault 1.10+ with Consul 1.5+. Set of Consul roles to attach to the token. Applicable for Vault 1.10+ with Consul 1.5+
    local : bool, default is Undefined, optional
        Indicates that the token should not be replicated globally and instead be local to the current datacenter. Indicates that the token should not be replicated globally and instead be local to the current datacenter.
    maxTtl : float, default is Undefined, optional
        Maximum TTL for leases associated with this role, in seconds. Maximum TTL for leases associated with this role, in seconds.
    name : str, default is Undefined, optional
        The name of the Consul secrets engine role to create. The name of an existing role against which to create this Consul credential
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    nodeIdentities : [str], default is Undefined, optional
        SEE NOTE Set of Consul node identities to attach to the token. Applicable for Vault 1.11+ with Consul 1.8+. Set of Consul node identities to attach to the token. Applicable for Vault 1.11+ with Consul 1.8+
    partition : str, default is Undefined, optional
        The admin partition that the token will be created in. Applicable for Vault 1.10+ and Consul 1.11+". The Consul admin partition that the token will be created in. Applicable for Vault 1.10+ and Consul 1.11+
    policies : [str], default is Undefined, optional
        The list of Consul ACL policies to associate with these roles. NOTE: The new parameter consul_policies should be used in favor of this. This parameter, policies, remains supported for legacy users, but Vault has deprecated this field. List of Consul policies to associate with this role
    serviceIdentities : [str], default is Undefined, optional
        SEE NOTE Set of Consul service identities to attach to the token. Applicable for Vault 1.11+ with Consul 1.5+. Set of Consul service identities to attach to the token. Applicable for Vault 1.11+ with Consul 1.5+
    tokenType : str, default is Undefined, optional
        Specifies the type of token to create when using this role. Valid values are "client" or "management". Deprecated: Consul 1.11 and later removed the legacy ACL system which supported this field. Specifies the type of token to create when using this role. Valid values are "client" or "management".
    ttl : float, default is Undefined, optional
        Specifies the TTL for this role. Specifies the TTL for this role.
    """


    backend?: str

    consulNamespace?: str

    consulPolicies?: [str]

    consulRoles?: [str]

    local?: bool

    maxTtl?: float

    name?: str

    namespace?: str

    nodeIdentities?: [str]

    partition?: str

    policies?: [str]

    serviceIdentities?: [str]

    tokenType?: str

    ttl?: float


schema ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    backend : str, default is Undefined, optional
        The unique name of an existing Consul secrets backend mount. Must not begin or end with a /. One of path or backend is required. The path of the Consul Secret Backend the role belongs to.
    consulNamespace : str, default is Undefined, optional
        The Consul namespace that the token will be created in. Applicable for Vault 1.10+ and Consul 1.7+". The Consul namespace that the token will be created in. Applicable for Vault 1.10+ and Consul 1.7+
    consulPolicies : [str], default is Undefined, optional
        SEE NOTE The list of Consul ACL policies to associate with these roles. List of Consul policies to associate with this role
    consulRoles : [str], default is Undefined, optional
        SEE NOTE Set of Consul roles to attach to the token. Applicable for Vault 1.10+ with Consul 1.5+. Set of Consul roles to attach to the token. Applicable for Vault 1.10+ with Consul 1.5+
    local : bool, default is Undefined, optional
        Indicates that the token should not be replicated globally and instead be local to the current datacenter. Indicates that the token should not be replicated globally and instead be local to the current datacenter.
    maxTtl : float, default is Undefined, optional
        Maximum TTL for leases associated with this role, in seconds. Maximum TTL for leases associated with this role, in seconds.
    name : str, default is Undefined, optional
        The name of the Consul secrets engine role to create. The name of an existing role against which to create this Consul credential
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    nodeIdentities : [str], default is Undefined, optional
        SEE NOTE Set of Consul node identities to attach to the token. Applicable for Vault 1.11+ with Consul 1.8+. Set of Consul node identities to attach to the token. Applicable for Vault 1.11+ with Consul 1.8+
    partition : str, default is Undefined, optional
        The admin partition that the token will be created in. Applicable for Vault 1.10+ and Consul 1.11+". The Consul admin partition that the token will be created in. Applicable for Vault 1.10+ and Consul 1.11+
    policies : [str], default is Undefined, optional
        The list of Consul ACL policies to associate with these roles. NOTE: The new parameter consul_policies should be used in favor of this. This parameter, policies, remains supported for legacy users, but Vault has deprecated this field. List of Consul policies to associate with this role
    serviceIdentities : [str], default is Undefined, optional
        SEE NOTE Set of Consul service identities to attach to the token. Applicable for Vault 1.11+ with Consul 1.5+. Set of Consul service identities to attach to the token. Applicable for Vault 1.11+ with Consul 1.5+
    tokenType : str, default is Undefined, optional
        Specifies the type of token to create when using this role. Valid values are "client" or "management". Deprecated: Consul 1.11 and later removed the legacy ACL system which supported this field. Specifies the type of token to create when using this role. Valid values are "client" or "management".
    ttl : float, default is Undefined, optional
        Specifies the TTL for this role. Specifies the TTL for this role.
    """


    backend?: str

    consulNamespace?: str

    consulPolicies?: [str]

    consulRoles?: [str]

    local?: bool

    maxTtl?: float

    name?: str

    namespace?: str

    nodeIdentities?: [str]

    partition?: str

    policies?: [str]

    serviceIdentities?: [str]

    tokenType?: str

    ttl?: float


schema ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRefPolicy


schema ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRefPolicy


schema ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRef

    metadata?: ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToMetadata

    name: str


schema ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRefPolicy


schema ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ConsulVaultUpboundIoV1alpha1SecretBackendRoleSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ConsulVaultUpboundIoV1alpha1SecretBackendRoleStatus:
    r"""
    SecretBackendRoleStatus defines the observed state of SecretBackendRole.

    Attributes
    ----------
    atProvider : ConsulVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ConsulVaultUpboundIoV1alpha1SecretBackendRoleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: ConsulVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProvider

    conditions?: [ConsulVaultUpboundIoV1alpha1SecretBackendRoleStatusConditionsItems0]


schema ConsulVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProvider:
    r"""
    consul vault upbound io v1alpha1 secret backend role status at provider

    Attributes
    ----------
    backend : str, default is Undefined, optional
        The unique name of an existing Consul secrets backend mount. Must not begin or end with a /. One of path or backend is required. The path of the Consul Secret Backend the role belongs to.
    consulNamespace : str, default is Undefined, optional
        The Consul namespace that the token will be created in. Applicable for Vault 1.10+ and Consul 1.7+". The Consul namespace that the token will be created in. Applicable for Vault 1.10+ and Consul 1.7+
    consulPolicies : [str], default is Undefined, optional
        SEE NOTE The list of Consul ACL policies to associate with these roles. List of Consul policies to associate with this role
    consulRoles : [str], default is Undefined, optional
        SEE NOTE Set of Consul roles to attach to the token. Applicable for Vault 1.10+ with Consul 1.5+. Set of Consul roles to attach to the token. Applicable for Vault 1.10+ with Consul 1.5+
    id : str, default is Undefined, optional
        id
    local : bool, default is Undefined, optional
        Indicates that the token should not be replicated globally and instead be local to the current datacenter. Indicates that the token should not be replicated globally and instead be local to the current datacenter.
    maxTtl : float, default is Undefined, optional
        Maximum TTL for leases associated with this role, in seconds. Maximum TTL for leases associated with this role, in seconds.
    name : str, default is Undefined, optional
        The name of the Consul secrets engine role to create. The name of an existing role against which to create this Consul credential
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    nodeIdentities : [str], default is Undefined, optional
        SEE NOTE Set of Consul node identities to attach to the token. Applicable for Vault 1.11+ with Consul 1.8+. Set of Consul node identities to attach to the token. Applicable for Vault 1.11+ with Consul 1.8+
    partition : str, default is Undefined, optional
        The admin partition that the token will be created in. Applicable for Vault 1.10+ and Consul 1.11+". The Consul admin partition that the token will be created in. Applicable for Vault 1.10+ and Consul 1.11+
    policies : [str], default is Undefined, optional
        The list of Consul ACL policies to associate with these roles. NOTE: The new parameter consul_policies should be used in favor of this. This parameter, policies, remains supported for legacy users, but Vault has deprecated this field. List of Consul policies to associate with this role
    serviceIdentities : [str], default is Undefined, optional
        SEE NOTE Set of Consul service identities to attach to the token. Applicable for Vault 1.11+ with Consul 1.5+. Set of Consul service identities to attach to the token. Applicable for Vault 1.11+ with Consul 1.5+
    tokenType : str, default is Undefined, optional
        Specifies the type of token to create when using this role. Valid values are "client" or "management". Deprecated: Consul 1.11 and later removed the legacy ACL system which supported this field. Specifies the type of token to create when using this role. Valid values are "client" or "management".
    ttl : float, default is Undefined, optional
        Specifies the TTL for this role. Specifies the TTL for this role.
    """


    backend?: str

    consulNamespace?: str

    consulPolicies?: [str]

    consulRoles?: [str]

    id?: str

    local?: bool

    maxTtl?: float

    name?: str

    namespace?: str

    nodeIdentities?: [str]

    partition?: str

    policies?: [str]

    serviceIdentities?: [str]

    tokenType?: str

    ttl?: float


schema ConsulVaultUpboundIoV1alpha1SecretBackendRoleStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


