"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecretRole:
    r"""
    SecretRole is the Schema for the SecretRoles API. Provision KMIP Secret roles in Vault.

    Attributes
    ----------
    apiVersion : str, default is "kmip.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecretRole", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KmipVaultUpboundIoV1alpha1SecretRoleSpec, default is Undefined, required
        spec
    status : KmipVaultUpboundIoV1alpha1SecretRoleStatus, default is Undefined, optional
        status
    """


    apiVersion: "kmip.vault.upbound.io/v1alpha1" = "kmip.vault.upbound.io/v1alpha1"

    kind: "SecretRole" = "SecretRole"

    metadata?: v1.ObjectMeta

    spec: KmipVaultUpboundIoV1alpha1SecretRoleSpec

    status?: KmipVaultUpboundIoV1alpha1SecretRoleStatus


schema KmipVaultUpboundIoV1alpha1SecretRoleSpec:
    r"""
    SecretRoleSpec defines the desired state of SecretRole

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KmipVaultUpboundIoV1alpha1SecretRoleSpecForProvider, default is Undefined, required
        for provider
    initProvider : KmipVaultUpboundIoV1alpha1SecretRoleSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KmipVaultUpboundIoV1alpha1SecretRoleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : KmipVaultUpboundIoV1alpha1SecretRoleSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : KmipVaultUpboundIoV1alpha1SecretRoleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KmipVaultUpboundIoV1alpha1SecretRoleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KmipVaultUpboundIoV1alpha1SecretRoleSpecForProvider

    initProvider?: KmipVaultUpboundIoV1alpha1SecretRoleSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KmipVaultUpboundIoV1alpha1SecretRoleSpecProviderConfigRef

    providerRef?: KmipVaultUpboundIoV1alpha1SecretRoleSpecProviderRef

    publishConnectionDetailsTo?: KmipVaultUpboundIoV1alpha1SecretRoleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KmipVaultUpboundIoV1alpha1SecretRoleSpecWriteConnectionSecretToRef


schema KmipVaultUpboundIoV1alpha1SecretRoleSpecForProvider:
    r"""
    kmip vault upbound io v1alpha1 secret role spec for provider

    Attributes
    ----------
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    operationActivate : bool, default is Undefined, optional
        Grant permission to use the KMIP Activate operation. Grant permission to use the KMIP Activate operation
    operationAddAttribute : bool, default is Undefined, optional
        Grant permission to use the KMIP Add Attribute operation. Grant permission to use the KMIP Add Attribute operation
    operationAll : bool, default is Undefined, optional
        Grant all permissions to this role. May not be specified with any other operation_* params. Grant all permissions to this role. May not be specified with any other operation_* params
    operationCreate : bool, default is Undefined, optional
        Grant permission to use the KMIP Create operation. Grant permission to use the KMIP Create operation
    operationDestroy : bool, default is Undefined, optional
        Grant permission to use the KMIP Destroy operation. Grant permission to use the KMIP Destroy operation
    operationDiscoverVersions : bool, default is Undefined, optional
        Grant permission to use the KMIP Discover Version operation. Grant permission to use the KMIP Discover Version operation
    operationGet : bool, default is Undefined, optional
        Grant permission to use the KMIP Get operation. Grant permission to use the KMIP Get operation
    operationGetAttributeList : bool, default is Undefined, optional
        Grant permission to use the KMIP Get Atrribute List operation. Grant permission to use the KMIP Get Attribute List operation
    operationGetAttributes : bool, default is Undefined, optional
        Grant permission to use the KMIP Get Atrributes operation. Grant permission to use the KMIP Get Attributes operation
    operationLocate : bool, default is Undefined, optional
        Grant permission to use the KMIP Get Locate operation. Grant permission to use the KMIP Locate operation
    operationNone : bool, default is Undefined, optional
        Remove all permissions from this role. May not be specified with any other operation_* params. Remove all permissions from this role. May not be specified with any other operation_* params
    operationRegister : bool, default is Undefined, optional
        Grant permission to use the KMIP Register operation. Grant permission to use the KMIP Register operation
    operationRekey : bool, default is Undefined, optional
        Grant permission to use the KMIP Rekey operation. Grant permission to use the KMIP Rekey operation
    operationRevoke : bool, default is Undefined, optional
        Grant permission to use the KMIP Revoke operation. Grant permission to use the KMIP Revoke operation
    path : str, default is Undefined, optional
        The unique path this backend should be mounted at. Must not begin or end with a /. Defaults to kmip. Path where KMIP backend is mounted
    role : str, default is Undefined, optional
        Name of the role. Name of the role
    scope : str, default is Undefined, optional
        Name of the scope. Name of the scope
    tlsClientKeyBits : float, default is Undefined, optional
        Client certificate key bits, valid values depend on key type. Client certificate key bits, valid values depend on key type
    tlsClientKeyType : str, default is Undefined, optional
        Client certificate key type, rsa or ec. Client certificate key type, rsa or ec
    tlsClientTtl : float, default is Undefined, optional
        Client certificate TTL in seconds. Client certificate TTL in seconds
    """


    namespace?: str

    operationActivate?: bool

    operationAddAttribute?: bool

    operationAll?: bool

    operationCreate?: bool

    operationDestroy?: bool

    operationDiscoverVersions?: bool

    operationGet?: bool

    operationGetAttributeList?: bool

    operationGetAttributes?: bool

    operationLocate?: bool

    operationNone?: bool

    operationRegister?: bool

    operationRekey?: bool

    operationRevoke?: bool

    path?: str

    role?: str

    scope?: str

    tlsClientKeyBits?: float

    tlsClientKeyType?: str

    tlsClientTtl?: float


schema KmipVaultUpboundIoV1alpha1SecretRoleSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    operationActivate : bool, default is Undefined, optional
        Grant permission to use the KMIP Activate operation. Grant permission to use the KMIP Activate operation
    operationAddAttribute : bool, default is Undefined, optional
        Grant permission to use the KMIP Add Attribute operation. Grant permission to use the KMIP Add Attribute operation
    operationAll : bool, default is Undefined, optional
        Grant all permissions to this role. May not be specified with any other operation_* params. Grant all permissions to this role. May not be specified with any other operation_* params
    operationCreate : bool, default is Undefined, optional
        Grant permission to use the KMIP Create operation. Grant permission to use the KMIP Create operation
    operationDestroy : bool, default is Undefined, optional
        Grant permission to use the KMIP Destroy operation. Grant permission to use the KMIP Destroy operation
    operationDiscoverVersions : bool, default is Undefined, optional
        Grant permission to use the KMIP Discover Version operation. Grant permission to use the KMIP Discover Version operation
    operationGet : bool, default is Undefined, optional
        Grant permission to use the KMIP Get operation. Grant permission to use the KMIP Get operation
    operationGetAttributeList : bool, default is Undefined, optional
        Grant permission to use the KMIP Get Atrribute List operation. Grant permission to use the KMIP Get Attribute List operation
    operationGetAttributes : bool, default is Undefined, optional
        Grant permission to use the KMIP Get Atrributes operation. Grant permission to use the KMIP Get Attributes operation
    operationLocate : bool, default is Undefined, optional
        Grant permission to use the KMIP Get Locate operation. Grant permission to use the KMIP Locate operation
    operationNone : bool, default is Undefined, optional
        Remove all permissions from this role. May not be specified with any other operation_* params. Remove all permissions from this role. May not be specified with any other operation_* params
    operationRegister : bool, default is Undefined, optional
        Grant permission to use the KMIP Register operation. Grant permission to use the KMIP Register operation
    operationRekey : bool, default is Undefined, optional
        Grant permission to use the KMIP Rekey operation. Grant permission to use the KMIP Rekey operation
    operationRevoke : bool, default is Undefined, optional
        Grant permission to use the KMIP Revoke operation. Grant permission to use the KMIP Revoke operation
    path : str, default is Undefined, optional
        The unique path this backend should be mounted at. Must not begin or end with a /. Defaults to kmip. Path where KMIP backend is mounted
    role : str, default is Undefined, optional
        Name of the role. Name of the role
    scope : str, default is Undefined, optional
        Name of the scope. Name of the scope
    tlsClientKeyBits : float, default is Undefined, optional
        Client certificate key bits, valid values depend on key type. Client certificate key bits, valid values depend on key type
    tlsClientKeyType : str, default is Undefined, optional
        Client certificate key type, rsa or ec. Client certificate key type, rsa or ec
    tlsClientTtl : float, default is Undefined, optional
        Client certificate TTL in seconds. Client certificate TTL in seconds
    """


    namespace?: str

    operationActivate?: bool

    operationAddAttribute?: bool

    operationAll?: bool

    operationCreate?: bool

    operationDestroy?: bool

    operationDiscoverVersions?: bool

    operationGet?: bool

    operationGetAttributeList?: bool

    operationGetAttributes?: bool

    operationLocate?: bool

    operationNone?: bool

    operationRegister?: bool

    operationRekey?: bool

    operationRevoke?: bool

    path?: str

    role?: str

    scope?: str

    tlsClientKeyBits?: float

    tlsClientKeyType?: str

    tlsClientTtl?: float


schema KmipVaultUpboundIoV1alpha1SecretRoleSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KmipVaultUpboundIoV1alpha1SecretRoleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KmipVaultUpboundIoV1alpha1SecretRoleSpecProviderConfigRefPolicy


schema KmipVaultUpboundIoV1alpha1SecretRoleSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KmipVaultUpboundIoV1alpha1SecretRoleSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KmipVaultUpboundIoV1alpha1SecretRoleSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KmipVaultUpboundIoV1alpha1SecretRoleSpecProviderRefPolicy


schema KmipVaultUpboundIoV1alpha1SecretRoleSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KmipVaultUpboundIoV1alpha1SecretRoleSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KmipVaultUpboundIoV1alpha1SecretRoleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KmipVaultUpboundIoV1alpha1SecretRoleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KmipVaultUpboundIoV1alpha1SecretRoleSpecPublishConnectionDetailsToConfigRef

    metadata?: KmipVaultUpboundIoV1alpha1SecretRoleSpecPublishConnectionDetailsToMetadata

    name: str


schema KmipVaultUpboundIoV1alpha1SecretRoleSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KmipVaultUpboundIoV1alpha1SecretRoleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KmipVaultUpboundIoV1alpha1SecretRoleSpecPublishConnectionDetailsToConfigRefPolicy


schema KmipVaultUpboundIoV1alpha1SecretRoleSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KmipVaultUpboundIoV1alpha1SecretRoleSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KmipVaultUpboundIoV1alpha1SecretRoleSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KmipVaultUpboundIoV1alpha1SecretRoleStatus:
    r"""
    SecretRoleStatus defines the observed state of SecretRole.

    Attributes
    ----------
    atProvider : KmipVaultUpboundIoV1alpha1SecretRoleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KmipVaultUpboundIoV1alpha1SecretRoleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: KmipVaultUpboundIoV1alpha1SecretRoleStatusAtProvider

    conditions?: [KmipVaultUpboundIoV1alpha1SecretRoleStatusConditionsItems0]


schema KmipVaultUpboundIoV1alpha1SecretRoleStatusAtProvider:
    r"""
    kmip vault upbound io v1alpha1 secret role status at provider

    Attributes
    ----------
    id : str, default is Undefined, optional
        id
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    operationActivate : bool, default is Undefined, optional
        Grant permission to use the KMIP Activate operation. Grant permission to use the KMIP Activate operation
    operationAddAttribute : bool, default is Undefined, optional
        Grant permission to use the KMIP Add Attribute operation. Grant permission to use the KMIP Add Attribute operation
    operationAll : bool, default is Undefined, optional
        Grant all permissions to this role. May not be specified with any other operation_* params. Grant all permissions to this role. May not be specified with any other operation_* params
    operationCreate : bool, default is Undefined, optional
        Grant permission to use the KMIP Create operation. Grant permission to use the KMIP Create operation
    operationDestroy : bool, default is Undefined, optional
        Grant permission to use the KMIP Destroy operation. Grant permission to use the KMIP Destroy operation
    operationDiscoverVersions : bool, default is Undefined, optional
        Grant permission to use the KMIP Discover Version operation. Grant permission to use the KMIP Discover Version operation
    operationGet : bool, default is Undefined, optional
        Grant permission to use the KMIP Get operation. Grant permission to use the KMIP Get operation
    operationGetAttributeList : bool, default is Undefined, optional
        Grant permission to use the KMIP Get Atrribute List operation. Grant permission to use the KMIP Get Attribute List operation
    operationGetAttributes : bool, default is Undefined, optional
        Grant permission to use the KMIP Get Atrributes operation. Grant permission to use the KMIP Get Attributes operation
    operationLocate : bool, default is Undefined, optional
        Grant permission to use the KMIP Get Locate operation. Grant permission to use the KMIP Locate operation
    operationNone : bool, default is Undefined, optional
        Remove all permissions from this role. May not be specified with any other operation_* params. Remove all permissions from this role. May not be specified with any other operation_* params
    operationRegister : bool, default is Undefined, optional
        Grant permission to use the KMIP Register operation. Grant permission to use the KMIP Register operation
    operationRekey : bool, default is Undefined, optional
        Grant permission to use the KMIP Rekey operation. Grant permission to use the KMIP Rekey operation
    operationRevoke : bool, default is Undefined, optional
        Grant permission to use the KMIP Revoke operation. Grant permission to use the KMIP Revoke operation
    path : str, default is Undefined, optional
        The unique path this backend should be mounted at. Must not begin or end with a /. Defaults to kmip. Path where KMIP backend is mounted
    role : str, default is Undefined, optional
        Name of the role. Name of the role
    scope : str, default is Undefined, optional
        Name of the scope. Name of the scope
    tlsClientKeyBits : float, default is Undefined, optional
        Client certificate key bits, valid values depend on key type. Client certificate key bits, valid values depend on key type
    tlsClientKeyType : str, default is Undefined, optional
        Client certificate key type, rsa or ec. Client certificate key type, rsa or ec
    tlsClientTtl : float, default is Undefined, optional
        Client certificate TTL in seconds. Client certificate TTL in seconds
    """


    id?: str

    namespace?: str

    operationActivate?: bool

    operationAddAttribute?: bool

    operationAll?: bool

    operationCreate?: bool

    operationDestroy?: bool

    operationDiscoverVersions?: bool

    operationGet?: bool

    operationGetAttributeList?: bool

    operationGetAttributes?: bool

    operationLocate?: bool

    operationNone?: bool

    operationRegister?: bool

    operationRekey?: bool

    operationRevoke?: bool

    path?: str

    role?: str

    scope?: str

    tlsClientKeyBits?: float

    tlsClientKeyType?: str

    tlsClientTtl?: float


schema KmipVaultUpboundIoV1alpha1SecretRoleStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


