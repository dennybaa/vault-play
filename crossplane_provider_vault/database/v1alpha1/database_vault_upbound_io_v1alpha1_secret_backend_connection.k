"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecretBackendConnection:
    r"""
    SecretBackendConnection is the Schema for the SecretBackendConnections API. Configures a database secret backend connection for Vault.

    Attributes
    ----------
    apiVersion : str, default is "database.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecretBackendConnection", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpec, default is Undefined, required
        spec
    status : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatus, default is Undefined, optional
        status
    """


    apiVersion: "database.vault.upbound.io/v1alpha1" = "database.vault.upbound.io/v1alpha1"

    kind: "SecretBackendConnection" = "SecretBackendConnection"

    metadata?: v1.ObjectMeta

    spec: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpec

    status?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatus


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpec:
    r"""
    SecretBackendConnectionSpec defines the desired state of SecretBackendConnection

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProvider, default is Undefined, required
        for provider
    initProvider : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProvider

    initProvider?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecProviderConfigRef

    providerRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecProviderRef

    publishConnectionDetailsTo?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecWriteConnectionSecretToRef


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProvider:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    backend : str, default is Undefined, optional
        The unique name of the Vault mount to configure. Unique name of the Vault mount to configure.
    cassandra : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCassandraItems0], default is Undefined, optional
        A nested block containing configuration options for Cassandra connections. Connection parameters for the cassandra-database-plugin plugin.
    couchbase : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCouchbaseItems0], default is Undefined, optional
        A nested block containing configuration options for Couchbase connections. Connection parameters for the couchbase-database-plugin plugin.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    elasticsearch : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderElasticsearchItems0], default is Undefined, optional
        A nested block containing configuration options for Elasticsearch connections. Connection parameters for the elasticsearch-database-plugin.
    hana : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderHanaItems0], default is Undefined, optional
        A nested block containing configuration options for SAP HanaDB connections. Connection parameters for the hana-database-plugin plugin.
    influxdb : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderInfluxdbItems0], default is Undefined, optional
        A nested block containing configuration options for InfluxDB connections. Connection parameters for the influxdb-database-plugin plugin.
    mongodb : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMongodbItems0], default is Undefined, optional
        A nested block containing configuration options for MongoDB connections. Connection parameters for the mongodb-database-plugin plugin.
    mongodbatlas : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMongodbatlasItems0], default is Undefined, optional
        A nested block containing configuration options for MongoDB Atlas connections. Connection parameters for the mongodbatlas-database-plugin plugin.
    mssql : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMssqlItems0], default is Undefined, optional
        A nested block containing configuration options for MSSQL connections. Connection parameters for the mssql-database-plugin plugin.
    mysql : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlItems0], default is Undefined, optional
        A nested block containing configuration options for MySQL connections. Connection parameters for the mysql-database-plugin plugin.
    mysqlAurora : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlAuroraItems0], default is Undefined, optional
        A nested block containing configuration options for Aurora MySQL connections. Connection parameters for the mysql-aurora-database-plugin plugin.
    mysqlLegacy : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlLegacyItems0], default is Undefined, optional
        A nested block containing configuration options for legacy MySQL connections. Connection parameters for the mysql-legacy-database-plugin plugin.
    mysqlRds : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlRdsItems0], default is Undefined, optional
        A nested block containing configuration options for RDS MySQL connections. Connection parameters for the mysql-rds-database-plugin plugin.
    name : str, default is Undefined, optional
        A unique name to give the database connection. Name of the database connection.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    oracle : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderOracleItems0], default is Undefined, optional
        A nested block containing configuration options for Oracle connections. Connection parameters for the oracle-database-plugin plugin.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    postgresql : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderPostgresqlItems0], default is Undefined, optional
        A nested block containing configuration options for PostgreSQL connections. Connection parameters for the postgresql-database-plugin plugin.
    redis : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedisItems0], default is Undefined, optional
        A nested block containing configuration options for Redis connections. Connection parameters for the redis-database-plugin plugin.
    redisElasticache : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedisElasticacheItems0], default is Undefined, optional
        A nested block containing configuration options for Redis ElastiCache connections. Connection parameters for the redis-elasticache-database-plugin plugin.
    redshift : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedshiftItems0], default is Undefined, optional
        Connection parameters for the redshift-database-plugin plugin.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    snowflake : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderSnowflakeItems0], default is Undefined, optional
        A nested block containing configuration options for Snowflake connections. Connection parameters for the snowflake-database-plugin plugin.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    backend?: str

    cassandra?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCassandraItems0]

    couchbase?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCouchbaseItems0]

    data?: {str:str}

    elasticsearch?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderElasticsearchItems0]

    hana?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderHanaItems0]

    influxdb?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderInfluxdbItems0]

    mongodb?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMongodbItems0]

    mongodbatlas?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMongodbatlasItems0]

    mssql?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMssqlItems0]

    mysql?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlItems0]

    mysqlAurora?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlAuroraItems0]

    mysqlLegacy?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlLegacyItems0]

    mysqlRds?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlRdsItems0]

    name?: str

    namespace?: str

    oracle?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderOracleItems0]

    pluginName?: str

    postgresql?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderPostgresqlItems0]

    redis?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedisItems0]

    redisElasticache?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedisElasticacheItems0]

    redshift?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedshiftItems0]

    rootRotationStatements?: [str]

    snowflake?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderSnowflakeItems0]

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCassandraItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider cassandra items0

    Attributes
    ----------
    connectTimeout : float, default is Undefined, optional
        The number of seconds to use as a connection timeout. The number of seconds to use as a connection timeout.
    hosts : [str], default is Undefined, optional
        The hosts to connect to. Cassandra hosts to connect to.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Whether to skip verification of the server certificate when using TLS.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCassandraItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    pemBundleSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCassandraItems0PemBundleSecretRef, default is Undefined, optional
        pem bundle secret ref
    pemJsonSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCassandraItems0PemJSONSecretRef, default is Undefined, optional
        pem Json secret ref
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Cassandra.
    protocolVersion : float, default is Undefined, optional
        The CQL protocol version to use. The CQL protocol version to use.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Whether to use TLS when connecting to Cassandra.
    username : str, default is Undefined, optional
        The username to authenticate with. The username to use when authenticating with Cassandra.
    """


    connectTimeout?: float

    hosts?: [str]

    insecureTls?: bool

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCassandraItems0PasswordSecretRef

    pemBundleSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCassandraItems0PemBundleSecretRef

    pemJsonSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCassandraItems0PemJSONSecretRef

    port?: float

    protocolVersion?: float

    tls?: bool

    username?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCassandraItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The password to use when authenticating with Cassandra.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCassandraItems0PemBundleSecretRef:
    r"""
    Concatenated PEM blocks configuring the certificate chain. Concatenated PEM blocks containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCassandraItems0PemJSONSecretRef:
    r"""
    A JSON structure configuring the certificate chain. Specifies JSON containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCouchbaseItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider couchbase items0

    Attributes
    ----------
    base64PemSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCouchbaseItems0Base64PemSecretRef, default is Undefined, optional
        base64 pem secret ref
    bucketName : str, default is Undefined, optional
        Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server. Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server.
    hosts : [str], default is Undefined, optional
        The hosts to connect to. A set of Couchbase URIs to connect to. Must use `couchbases://` scheme if `tls` is `true`.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Specifies whether to skip verification of the server certificate when using TLS.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCouchbaseItems0PasswordSecretRef, default is Undefined, required
        password secret ref
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Specifies whether to use TLS when connecting to Couchbase.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username for Vault to use.
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    """


    base64PemSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCouchbaseItems0Base64PemSecretRef

    bucketName?: str

    hosts?: [str]

    insecureTls?: bool

    passwordSecretRef: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCouchbaseItems0PasswordSecretRef

    tls?: bool

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCouchbaseItems0Base64PemSecretRef:
    r"""
    Required if tls is true. Specifies the certificate authority of the Couchbase server, as a PEM certificate that has been base64 encoded. Required if `tls` is `true`. Specifies the certificate authority of the Couchbase server, as a PEM certificate that has been base64 encoded.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderCouchbaseItems0PasswordSecretRef:
    r"""
    The password to authenticate with. Specifies the password corresponding to the given username.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderElasticsearchItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider elasticsearch items0

    Attributes
    ----------
    caCert : str, default is Undefined, optional
        The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity. The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity
    caPath : str, default is Undefined, optional
        The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity. The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity
    clientCert : str, default is Undefined, optional
        The path to the certificate for the Elasticsearch client to present for communication. The path to the certificate for the Elasticsearch client to present for communication
    clientKey : str, default is Undefined, optional
        The path to the key for the Elasticsearch client to use for communication. The path to the key for the Elasticsearch client to use for communication
    insecure : bool, default is Undefined, optional
        Whether to disable certificate verification. Whether to disable certificate verification
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderElasticsearchItems0PasswordSecretRef, default is Undefined, required
        password secret ref
    tlsServerName : str, default is Undefined, optional
        This, if set, is used to set the SNI host when connecting via TLS. This, if set, is used to set the SNI host when connecting via TLS
    url : str, default is Undefined, optional
        The url to connect to including the port; e.g. master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379. The URL for Elasticsearch's API
    username : str, default is Undefined, optional
        The username to authenticate with. The username to be used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    """


    caCert?: str

    caPath?: str

    clientCert?: str

    clientKey?: str

    insecure?: bool

    passwordSecretRef: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderElasticsearchItems0PasswordSecretRef

    tlsServerName?: str

    url?: str

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderElasticsearchItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The password to be used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderHanaItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider hana items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderHanaItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    """


    connectionUrl?: str

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderHanaItems0PasswordSecretRef

    username?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderHanaItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderInfluxdbItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider influxdb items0

    Attributes
    ----------
    connectTimeout : float, default is Undefined, optional
        The number of seconds to use as a connection timeout. The number of seconds to use as a connection timeout.
    host : str, default is Undefined, optional
        The host to connect to. Influxdb host to connect to.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Whether to skip verification of the server certificate when using TLS.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderInfluxdbItems0PasswordSecretRef, default is Undefined, required
        password secret ref
    pemBundleSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderInfluxdbItems0PemBundleSecretRef, default is Undefined, optional
        pem bundle secret ref
    pemJsonSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderInfluxdbItems0PemJSONSecretRef, default is Undefined, optional
        pem Json secret ref
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Influxdb.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Whether to use TLS when connecting to Influxdb.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username to use for superuser access.
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    """


    connectTimeout?: float

    host?: str

    insecureTls?: bool

    passwordSecretRef: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderInfluxdbItems0PasswordSecretRef

    pemBundleSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderInfluxdbItems0PemBundleSecretRef

    pemJsonSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderInfluxdbItems0PemJSONSecretRef

    port?: float

    tls?: bool

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderInfluxdbItems0PasswordSecretRef:
    r"""
    The password to authenticate with. Specifies the password corresponding to the given username.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderInfluxdbItems0PemBundleSecretRef:
    r"""
    Concatenated PEM blocks configuring the certificate chain. Concatenated PEM blocks containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderInfluxdbItems0PemJSONSecretRef:
    r"""
    A JSON structure configuring the certificate chain. Specifies JSON containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMongodbItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider mongodb items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMongodbItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMongodbItems0PasswordSecretRef

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMongodbItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMongodbatlasItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider mongodbatlas items0

    Attributes
    ----------
    privateKeySecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMongodbatlasItems0PrivateKeySecretRef, default is Undefined, required
        private key secret ref
    projectId : str, default is Undefined, optional
        The Project ID the Database User should be created within. The Project ID the Database User should be created within.
    publicKey : str, default is Undefined, optional
        The Public Programmatic API Key used to authenticate with the MongoDB Atlas API. The Public Programmatic API Key used to authenticate with the MongoDB Atlas API.
    """


    privateKeySecretRef: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMongodbatlasItems0PrivateKeySecretRef

    projectId?: str

    publicKey?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMongodbatlasItems0PrivateKeySecretRef:
    r"""
    The Private Programmatic API Key used to connect with MongoDB Atlas API. The Private Programmatic API Key used to connect with MongoDB Atlas API.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMssqlItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider mssql items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    containedDb : bool, default is Undefined, optional
        For Vault v1.9+. Set to true when the target is a Contained Database, e.g. AzureSQL. See the Vault docs Set to true when the target is a Contained Database, e.g. AzureSQL.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMssqlItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    connectionUrl?: str

    containedDb?: bool

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMssqlItems0PasswordSecretRef

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMssqlItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlAuroraItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider mysql aurora items0

    Attributes
    ----------
    authType : str, default is Undefined, optional
        Enable IAM authentication to a Google Cloud instance when set to gcp_iam Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlAuroraItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    serviceAccountJsonSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlAuroraItems0ServiceAccountJSONSecretRef, default is Undefined, optional
        service account Json secret ref
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    tlsCertificateKeySecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlAuroraItems0TLSCertificateKeySecretRef, default is Undefined, optional
        tls certificate key secret ref
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    authType?: str

    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlAuroraItems0PasswordSecretRef

    serviceAccountJsonSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlAuroraItems0ServiceAccountJSONSecretRef

    tlsCa?: str

    tlsCertificateKeySecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlAuroraItems0TLSCertificateKeySecretRef

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlAuroraItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlAuroraItems0ServiceAccountJSONSecretRef:
    r"""
    JSON encoding of an IAM access key. Requires auth_type to be gcp_iam. A JSON encoded credential for use with IAM authorization

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlAuroraItems0TLSCertificateKeySecretRef:
    r"""
    x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined. x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider mysql items0

    Attributes
    ----------
    authType : str, default is Undefined, optional
        Enable IAM authentication to a Google Cloud instance when set to gcp_iam Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    serviceAccountJsonSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlItems0ServiceAccountJSONSecretRef, default is Undefined, optional
        service account Json secret ref
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    tlsCertificateKeySecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlItems0TLSCertificateKeySecretRef, default is Undefined, optional
        tls certificate key secret ref
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    authType?: str

    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlItems0PasswordSecretRef

    serviceAccountJsonSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlItems0ServiceAccountJSONSecretRef

    tlsCa?: str

    tlsCertificateKeySecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlItems0TLSCertificateKeySecretRef

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlItems0ServiceAccountJSONSecretRef:
    r"""
    JSON encoding of an IAM access key. Requires auth_type to be gcp_iam. A JSON encoded credential for use with IAM authorization

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlItems0TLSCertificateKeySecretRef:
    r"""
    x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined. x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlLegacyItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider mysql legacy items0

    Attributes
    ----------
    authType : str, default is Undefined, optional
        Enable IAM authentication to a Google Cloud instance when set to gcp_iam Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlLegacyItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    serviceAccountJsonSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlLegacyItems0ServiceAccountJSONSecretRef, default is Undefined, optional
        service account Json secret ref
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    tlsCertificateKeySecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlLegacyItems0TLSCertificateKeySecretRef, default is Undefined, optional
        tls certificate key secret ref
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    authType?: str

    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlLegacyItems0PasswordSecretRef

    serviceAccountJsonSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlLegacyItems0ServiceAccountJSONSecretRef

    tlsCa?: str

    tlsCertificateKeySecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlLegacyItems0TLSCertificateKeySecretRef

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlLegacyItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlLegacyItems0ServiceAccountJSONSecretRef:
    r"""
    JSON encoding of an IAM access key. Requires auth_type to be gcp_iam. A JSON encoded credential for use with IAM authorization

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlLegacyItems0TLSCertificateKeySecretRef:
    r"""
    x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined. x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlRdsItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider mysql rds items0

    Attributes
    ----------
    authType : str, default is Undefined, optional
        Enable IAM authentication to a Google Cloud instance when set to gcp_iam Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlRdsItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    serviceAccountJsonSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlRdsItems0ServiceAccountJSONSecretRef, default is Undefined, optional
        service account Json secret ref
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    tlsCertificateKeySecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlRdsItems0TLSCertificateKeySecretRef, default is Undefined, optional
        tls certificate key secret ref
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    authType?: str

    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlRdsItems0PasswordSecretRef

    serviceAccountJsonSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlRdsItems0ServiceAccountJSONSecretRef

    tlsCa?: str

    tlsCertificateKeySecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlRdsItems0TLSCertificateKeySecretRef

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlRdsItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlRdsItems0ServiceAccountJSONSecretRef:
    r"""
    JSON encoding of an IAM access key. Requires auth_type to be gcp_iam. A JSON encoded credential for use with IAM authorization

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderMysqlRdsItems0TLSCertificateKeySecretRef:
    r"""
    x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined. x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderOracleItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider oracle items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    disconnectSessions : bool, default is Undefined, optional
        Enable the built-in session disconnect mechanism. Set to true to disconnect any open sessions prior to running the revocation statements.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderOracleItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    splitStatements : bool, default is Undefined, optional
        Enable spliting statements after semi-colons. Set to true in order to split statements after semi-colons.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    connectionUrl?: str

    disconnectSessions?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderOracleItems0PasswordSecretRef

    splitStatements?: bool

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderOracleItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderPostgresqlItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider postgresql items0

    Attributes
    ----------
    authType : str, default is Undefined, optional
        Enable IAM authentication to a Google Cloud instance when set to gcp_iam Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderPostgresqlItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    serviceAccountJsonSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderPostgresqlItems0ServiceAccountJSONSecretRef, default is Undefined, optional
        service account Json secret ref
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    authType?: str

    connectionUrl?: str

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderPostgresqlItems0PasswordSecretRef

    serviceAccountJsonSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderPostgresqlItems0ServiceAccountJSONSecretRef

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderPostgresqlItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderPostgresqlItems0ServiceAccountJSONSecretRef:
    r"""
    JSON encoding of an IAM access key. Requires auth_type to be gcp_iam. A JSON encoded credential for use with IAM authorization

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedisElasticacheItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider redis elasticache items0

    Attributes
    ----------
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedisElasticacheItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    region : str, default is Undefined, optional
        The region where the ElastiCache cluster is hosted. If omitted Vault tries to infer from the environment instead. The AWS region where the ElastiCache cluster is hosted. If omitted the plugin tries to infer the region from the environment.
    url : str, default is Undefined, optional
        The url to connect to including the port; e.g. master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379. The configuration endpoint for the ElastiCache cluster to connect to.
    usernameSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedisElasticacheItems0UsernameSecretRef, default is Undefined, optional
        username secret ref
    """


    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedisElasticacheItems0PasswordSecretRef

    region?: str

    url?: str

    usernameSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedisElasticacheItems0UsernameSecretRef


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedisElasticacheItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The AWS secret key id to use to talk to ElastiCache. If omitted the credentials chain provider is used instead.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedisElasticacheItems0UsernameSecretRef:
    r"""
    The username to authenticate with. The AWS access key id to use to talk to ElastiCache. If omitted the credentials chain provider is used instead.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedisItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider redis items0

    Attributes
    ----------
    caCert : str, default is Undefined, optional
        The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity. The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.
    host : str, default is Undefined, optional
        The host to connect to. Specifies the host to connect to
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Specifies whether to skip verification of the server certificate when using TLS.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedisItems0PasswordSecretRef, default is Undefined, required
        password secret ref
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Redis.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Specifies whether to use TLS when connecting to Redis.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username for Vault to use.
    """


    caCert?: str

    host?: str

    insecureTls?: bool

    passwordSecretRef: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedisItems0PasswordSecretRef

    port?: float

    tls?: bool

    username?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedisItems0PasswordSecretRef:
    r"""
    The password to authenticate with. Specifies the password corresponding to the given username.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedshiftItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider redshift items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedshiftItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    connectionUrl?: str

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedshiftItems0PasswordSecretRef

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderRedshiftItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderSnowflakeItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec for provider snowflake items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderSnowflakeItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderSnowflakeItems0PasswordSecretRef

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecForProviderSnowflakeItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    backend : str, default is Undefined, optional
        The unique name of the Vault mount to configure. Unique name of the Vault mount to configure.
    cassandra : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderCassandraItems0], default is Undefined, optional
        A nested block containing configuration options for Cassandra connections. Connection parameters for the cassandra-database-plugin plugin.
    couchbase : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderCouchbaseItems0], default is Undefined, optional
        A nested block containing configuration options for Couchbase connections. Connection parameters for the couchbase-database-plugin plugin.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    elasticsearch : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderElasticsearchItems0], default is Undefined, optional
        A nested block containing configuration options for Elasticsearch connections. Connection parameters for the elasticsearch-database-plugin.
    hana : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderHanaItems0], default is Undefined, optional
        A nested block containing configuration options for SAP HanaDB connections. Connection parameters for the hana-database-plugin plugin.
    influxdb : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderInfluxdbItems0], default is Undefined, optional
        A nested block containing configuration options for InfluxDB connections. Connection parameters for the influxdb-database-plugin plugin.
    mongodb : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMongodbItems0], default is Undefined, optional
        A nested block containing configuration options for MongoDB connections. Connection parameters for the mongodb-database-plugin plugin.
    mongodbatlas : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMongodbatlasItems0], default is Undefined, optional
        A nested block containing configuration options for MongoDB Atlas connections. Connection parameters for the mongodbatlas-database-plugin plugin.
    mssql : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMssqlItems0], default is Undefined, optional
        A nested block containing configuration options for MSSQL connections. Connection parameters for the mssql-database-plugin plugin.
    mysql : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMysqlItems0], default is Undefined, optional
        A nested block containing configuration options for MySQL connections. Connection parameters for the mysql-database-plugin plugin.
    mysqlAurora : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMysqlAuroraItems0], default is Undefined, optional
        A nested block containing configuration options for Aurora MySQL connections. Connection parameters for the mysql-aurora-database-plugin plugin.
    mysqlLegacy : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMysqlLegacyItems0], default is Undefined, optional
        A nested block containing configuration options for legacy MySQL connections. Connection parameters for the mysql-legacy-database-plugin plugin.
    mysqlRds : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMysqlRdsItems0], default is Undefined, optional
        A nested block containing configuration options for RDS MySQL connections. Connection parameters for the mysql-rds-database-plugin plugin.
    name : str, default is Undefined, optional
        A unique name to give the database connection. Name of the database connection.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    oracle : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderOracleItems0], default is Undefined, optional
        A nested block containing configuration options for Oracle connections. Connection parameters for the oracle-database-plugin plugin.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    postgresql : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderPostgresqlItems0], default is Undefined, optional
        A nested block containing configuration options for PostgreSQL connections. Connection parameters for the postgresql-database-plugin plugin.
    redis : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderRedisItems0], default is Undefined, optional
        A nested block containing configuration options for Redis connections. Connection parameters for the redis-database-plugin plugin.
    redisElasticache : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderRedisElasticacheItems0], default is Undefined, optional
        A nested block containing configuration options for Redis ElastiCache connections. Connection parameters for the redis-elasticache-database-plugin plugin.
    redshift : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderRedshiftItems0], default is Undefined, optional
        Connection parameters for the redshift-database-plugin plugin.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    snowflake : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderSnowflakeItems0], default is Undefined, optional
        A nested block containing configuration options for Snowflake connections. Connection parameters for the snowflake-database-plugin plugin.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    backend?: str

    cassandra?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderCassandraItems0]

    couchbase?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderCouchbaseItems0]

    data?: {str:str}

    elasticsearch?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderElasticsearchItems0]

    hana?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderHanaItems0]

    influxdb?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderInfluxdbItems0]

    mongodb?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMongodbItems0]

    mongodbatlas?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMongodbatlasItems0]

    mssql?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMssqlItems0]

    mysql?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMysqlItems0]

    mysqlAurora?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMysqlAuroraItems0]

    mysqlLegacy?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMysqlLegacyItems0]

    mysqlRds?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMysqlRdsItems0]

    name?: str

    namespace?: str

    oracle?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderOracleItems0]

    pluginName?: str

    postgresql?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderPostgresqlItems0]

    redis?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderRedisItems0]

    redisElasticache?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderRedisElasticacheItems0]

    redshift?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderRedshiftItems0]

    rootRotationStatements?: [str]

    snowflake?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderSnowflakeItems0]

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderCassandraItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider cassandra items0

    Attributes
    ----------
    connectTimeout : float, default is Undefined, optional
        The number of seconds to use as a connection timeout. The number of seconds to use as a connection timeout.
    hosts : [str], default is Undefined, optional
        The hosts to connect to. Cassandra hosts to connect to.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Whether to skip verification of the server certificate when using TLS.
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Cassandra.
    protocolVersion : float, default is Undefined, optional
        The CQL protocol version to use. The CQL protocol version to use.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Whether to use TLS when connecting to Cassandra.
    username : str, default is Undefined, optional
        The username to authenticate with. The username to use when authenticating with Cassandra.
    """


    connectTimeout?: float

    hosts?: [str]

    insecureTls?: bool

    port?: float

    protocolVersion?: float

    tls?: bool

    username?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderCouchbaseItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider couchbase items0

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server. Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server.
    hosts : [str], default is Undefined, optional
        The hosts to connect to. A set of Couchbase URIs to connect to. Must use `couchbases://` scheme if `tls` is `true`.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Specifies whether to skip verification of the server certificate when using TLS.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Specifies whether to use TLS when connecting to Couchbase.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username for Vault to use.
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    """


    bucketName?: str

    hosts?: [str]

    insecureTls?: bool

    tls?: bool

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderElasticsearchItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider elasticsearch items0

    Attributes
    ----------
    caCert : str, default is Undefined, optional
        The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity. The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity
    caPath : str, default is Undefined, optional
        The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity. The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity
    clientCert : str, default is Undefined, optional
        The path to the certificate for the Elasticsearch client to present for communication. The path to the certificate for the Elasticsearch client to present for communication
    clientKey : str, default is Undefined, optional
        The path to the key for the Elasticsearch client to use for communication. The path to the key for the Elasticsearch client to use for communication
    insecure : bool, default is Undefined, optional
        Whether to disable certificate verification. Whether to disable certificate verification
    tlsServerName : str, default is Undefined, optional
        This, if set, is used to set the SNI host when connecting via TLS. This, if set, is used to set the SNI host when connecting via TLS
    url : str, default is Undefined, optional
        The url to connect to including the port; e.g. master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379. The URL for Elasticsearch's API
    username : str, default is Undefined, optional
        The username to authenticate with. The username to be used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    """


    caCert?: str

    caPath?: str

    clientCert?: str

    clientKey?: str

    insecure?: bool

    tlsServerName?: str

    url?: str

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderHanaItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider hana items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    """


    connectionUrl?: str

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    username?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderInfluxdbItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider influxdb items0

    Attributes
    ----------
    connectTimeout : float, default is Undefined, optional
        The number of seconds to use as a connection timeout. The number of seconds to use as a connection timeout.
    host : str, default is Undefined, optional
        The host to connect to. Influxdb host to connect to.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Whether to skip verification of the server certificate when using TLS.
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Influxdb.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Whether to use TLS when connecting to Influxdb.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username to use for superuser access.
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    """


    connectTimeout?: float

    host?: str

    insecureTls?: bool

    port?: float

    tls?: bool

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMongodbItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider mongodb items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMongodbatlasItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider mongodbatlas items0

    Attributes
    ----------
    projectId : str, default is Undefined, optional
        The Project ID the Database User should be created within. The Project ID the Database User should be created within.
    publicKey : str, default is Undefined, optional
        The Public Programmatic API Key used to authenticate with the MongoDB Atlas API. The Public Programmatic API Key used to authenticate with the MongoDB Atlas API.
    """


    projectId?: str

    publicKey?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMssqlItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider mssql items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    containedDb : bool, default is Undefined, optional
        For Vault v1.9+. Set to true when the target is a Contained Database, e.g. AzureSQL. See the Vault docs Set to true when the target is a Contained Database, e.g. AzureSQL.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    connectionUrl?: str

    containedDb?: bool

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMysqlAuroraItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider mysql aurora items0

    Attributes
    ----------
    authType : str, default is Undefined, optional
        Enable IAM authentication to a Google Cloud instance when set to gcp_iam Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    authType?: str

    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    tlsCa?: str

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMysqlItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider mysql items0

    Attributes
    ----------
    authType : str, default is Undefined, optional
        Enable IAM authentication to a Google Cloud instance when set to gcp_iam Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    authType?: str

    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    tlsCa?: str

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMysqlLegacyItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider mysql legacy items0

    Attributes
    ----------
    authType : str, default is Undefined, optional
        Enable IAM authentication to a Google Cloud instance when set to gcp_iam Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    authType?: str

    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    tlsCa?: str

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderMysqlRdsItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider mysql rds items0

    Attributes
    ----------
    authType : str, default is Undefined, optional
        Enable IAM authentication to a Google Cloud instance when set to gcp_iam Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    authType?: str

    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    tlsCa?: str

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderOracleItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider oracle items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    disconnectSessions : bool, default is Undefined, optional
        Enable the built-in session disconnect mechanism. Set to true to disconnect any open sessions prior to running the revocation statements.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    splitStatements : bool, default is Undefined, optional
        Enable spliting statements after semi-colons. Set to true in order to split statements after semi-colons.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    connectionUrl?: str

    disconnectSessions?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    splitStatements?: bool

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderPostgresqlItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider postgresql items0

    Attributes
    ----------
    authType : str, default is Undefined, optional
        Enable IAM authentication to a Google Cloud instance when set to gcp_iam Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    authType?: str

    connectionUrl?: str

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderRedisElasticacheItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider redis elasticache items0

    Attributes
    ----------
    region : str, default is Undefined, optional
        The region where the ElastiCache cluster is hosted. If omitted Vault tries to infer from the environment instead. The AWS region where the ElastiCache cluster is hosted. If omitted the plugin tries to infer the region from the environment.
    url : str, default is Undefined, optional
        The url to connect to including the port; e.g. master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379. The configuration endpoint for the ElastiCache cluster to connect to.
    """


    region?: str

    url?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderRedisItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider redis items0

    Attributes
    ----------
    caCert : str, default is Undefined, optional
        The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity. The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.
    host : str, default is Undefined, optional
        The host to connect to. Specifies the host to connect to
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Specifies whether to skip verification of the server certificate when using TLS.
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Redis.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Specifies whether to use TLS when connecting to Redis.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username for Vault to use.
    """


    caCert?: str

    host?: str

    insecureTls?: bool

    port?: float

    tls?: bool

    username?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderRedshiftItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider redshift items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    connectionUrl?: str

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecInitProviderSnowflakeItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection spec init provider snowflake items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecProviderConfigRefPolicy


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecProviderRefPolicy


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecPublishConnectionDetailsToConfigRef

    metadata?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecPublishConnectionDetailsToMetadata

    name: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecPublishConnectionDetailsToConfigRefPolicy


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatus:
    r"""
    SecretBackendConnectionStatus defines the observed state of SecretBackendConnection.

    Attributes
    ----------
    atProvider : DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProvider

    conditions?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusConditionsItems0]


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProvider:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    backend : str, default is Undefined, optional
        The unique name of the Vault mount to configure. Unique name of the Vault mount to configure.
    cassandra : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderCassandraItems0], default is Undefined, optional
        A nested block containing configuration options for Cassandra connections. Connection parameters for the cassandra-database-plugin plugin.
    couchbase : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderCouchbaseItems0], default is Undefined, optional
        A nested block containing configuration options for Couchbase connections. Connection parameters for the couchbase-database-plugin plugin.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    elasticsearch : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderElasticsearchItems0], default is Undefined, optional
        A nested block containing configuration options for Elasticsearch connections. Connection parameters for the elasticsearch-database-plugin.
    hana : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderHanaItems0], default is Undefined, optional
        A nested block containing configuration options for SAP HanaDB connections. Connection parameters for the hana-database-plugin plugin.
    id : str, default is Undefined, optional
        id
    influxdb : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderInfluxdbItems0], default is Undefined, optional
        A nested block containing configuration options for InfluxDB connections. Connection parameters for the influxdb-database-plugin plugin.
    mongodb : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMongodbItems0], default is Undefined, optional
        A nested block containing configuration options for MongoDB connections. Connection parameters for the mongodb-database-plugin plugin.
    mongodbatlas : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMongodbatlasItems0], default is Undefined, optional
        A nested block containing configuration options for MongoDB Atlas connections. Connection parameters for the mongodbatlas-database-plugin plugin.
    mssql : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMssqlItems0], default is Undefined, optional
        A nested block containing configuration options for MSSQL connections. Connection parameters for the mssql-database-plugin plugin.
    mysql : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMysqlItems0], default is Undefined, optional
        A nested block containing configuration options for MySQL connections. Connection parameters for the mysql-database-plugin plugin.
    mysqlAurora : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMysqlAuroraItems0], default is Undefined, optional
        A nested block containing configuration options for Aurora MySQL connections. Connection parameters for the mysql-aurora-database-plugin plugin.
    mysqlLegacy : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMysqlLegacyItems0], default is Undefined, optional
        A nested block containing configuration options for legacy MySQL connections. Connection parameters for the mysql-legacy-database-plugin plugin.
    mysqlRds : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMysqlRdsItems0], default is Undefined, optional
        A nested block containing configuration options for RDS MySQL connections. Connection parameters for the mysql-rds-database-plugin plugin.
    name : str, default is Undefined, optional
        A unique name to give the database connection. Name of the database connection.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    oracle : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderOracleItems0], default is Undefined, optional
        A nested block containing configuration options for Oracle connections. Connection parameters for the oracle-database-plugin plugin.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    postgresql : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderPostgresqlItems0], default is Undefined, optional
        A nested block containing configuration options for PostgreSQL connections. Connection parameters for the postgresql-database-plugin plugin.
    redis : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderRedisItems0], default is Undefined, optional
        A nested block containing configuration options for Redis connections. Connection parameters for the redis-database-plugin plugin.
    redisElasticache : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderRedisElasticacheItems0], default is Undefined, optional
        A nested block containing configuration options for Redis ElastiCache connections. Connection parameters for the redis-elasticache-database-plugin plugin.
    redshift : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderRedshiftItems0], default is Undefined, optional
        Connection parameters for the redshift-database-plugin plugin.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    snowflake : [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderSnowflakeItems0], default is Undefined, optional
        A nested block containing configuration options for Snowflake connections. Connection parameters for the snowflake-database-plugin plugin.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    backend?: str

    cassandra?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderCassandraItems0]

    couchbase?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderCouchbaseItems0]

    data?: {str:str}

    elasticsearch?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderElasticsearchItems0]

    hana?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderHanaItems0]

    id?: str

    influxdb?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderInfluxdbItems0]

    mongodb?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMongodbItems0]

    mongodbatlas?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMongodbatlasItems0]

    mssql?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMssqlItems0]

    mysql?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMysqlItems0]

    mysqlAurora?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMysqlAuroraItems0]

    mysqlLegacy?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMysqlLegacyItems0]

    mysqlRds?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMysqlRdsItems0]

    name?: str

    namespace?: str

    oracle?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderOracleItems0]

    pluginName?: str

    postgresql?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderPostgresqlItems0]

    redis?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderRedisItems0]

    redisElasticache?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderRedisElasticacheItems0]

    redshift?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderRedshiftItems0]

    rootRotationStatements?: [str]

    snowflake?: [DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderSnowflakeItems0]

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderCassandraItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider cassandra items0

    Attributes
    ----------
    connectTimeout : float, default is Undefined, optional
        The number of seconds to use as a connection timeout. The number of seconds to use as a connection timeout.
    hosts : [str], default is Undefined, optional
        The hosts to connect to. Cassandra hosts to connect to.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Whether to skip verification of the server certificate when using TLS.
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Cassandra.
    protocolVersion : float, default is Undefined, optional
        The CQL protocol version to use. The CQL protocol version to use.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Whether to use TLS when connecting to Cassandra.
    username : str, default is Undefined, optional
        The username to authenticate with. The username to use when authenticating with Cassandra.
    """


    connectTimeout?: float

    hosts?: [str]

    insecureTls?: bool

    port?: float

    protocolVersion?: float

    tls?: bool

    username?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderCouchbaseItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider couchbase items0

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server. Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server.
    hosts : [str], default is Undefined, optional
        The hosts to connect to. A set of Couchbase URIs to connect to. Must use `couchbases://` scheme if `tls` is `true`.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Specifies whether to skip verification of the server certificate when using TLS.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Specifies whether to use TLS when connecting to Couchbase.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username for Vault to use.
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    """


    bucketName?: str

    hosts?: [str]

    insecureTls?: bool

    tls?: bool

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderElasticsearchItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider elasticsearch items0

    Attributes
    ----------
    caCert : str, default is Undefined, optional
        The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity. The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity
    caPath : str, default is Undefined, optional
        The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity. The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity
    clientCert : str, default is Undefined, optional
        The path to the certificate for the Elasticsearch client to present for communication. The path to the certificate for the Elasticsearch client to present for communication
    clientKey : str, default is Undefined, optional
        The path to the key for the Elasticsearch client to use for communication. The path to the key for the Elasticsearch client to use for communication
    insecure : bool, default is Undefined, optional
        Whether to disable certificate verification. Whether to disable certificate verification
    tlsServerName : str, default is Undefined, optional
        This, if set, is used to set the SNI host when connecting via TLS. This, if set, is used to set the SNI host when connecting via TLS
    url : str, default is Undefined, optional
        The url to connect to including the port; e.g. master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379. The URL for Elasticsearch's API
    username : str, default is Undefined, optional
        The username to authenticate with. The username to be used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    """


    caCert?: str

    caPath?: str

    clientCert?: str

    clientKey?: str

    insecure?: bool

    tlsServerName?: str

    url?: str

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderHanaItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider hana items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    """


    connectionUrl?: str

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    username?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderInfluxdbItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider influxdb items0

    Attributes
    ----------
    connectTimeout : float, default is Undefined, optional
        The number of seconds to use as a connection timeout. The number of seconds to use as a connection timeout.
    host : str, default is Undefined, optional
        The host to connect to. Influxdb host to connect to.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Whether to skip verification of the server certificate when using TLS.
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Influxdb.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Whether to use TLS when connecting to Influxdb.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username to use for superuser access.
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    """


    connectTimeout?: float

    host?: str

    insecureTls?: bool

    port?: float

    tls?: bool

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMongodbItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider mongodb items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMongodbatlasItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider mongodbatlas items0

    Attributes
    ----------
    projectId : str, default is Undefined, optional
        The Project ID the Database User should be created within. The Project ID the Database User should be created within.
    publicKey : str, default is Undefined, optional
        The Public Programmatic API Key used to authenticate with the MongoDB Atlas API. The Public Programmatic API Key used to authenticate with the MongoDB Atlas API.
    """


    projectId?: str

    publicKey?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMssqlItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider mssql items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    containedDb : bool, default is Undefined, optional
        For Vault v1.9+. Set to true when the target is a Contained Database, e.g. AzureSQL. See the Vault docs Set to true when the target is a Contained Database, e.g. AzureSQL.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    connectionUrl?: str

    containedDb?: bool

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMysqlAuroraItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider mysql aurora items0

    Attributes
    ----------
    authType : str, default is Undefined, optional
        Enable IAM authentication to a Google Cloud instance when set to gcp_iam Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    authType?: str

    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    tlsCa?: str

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMysqlItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider mysql items0

    Attributes
    ----------
    authType : str, default is Undefined, optional
        Enable IAM authentication to a Google Cloud instance when set to gcp_iam Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    authType?: str

    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    tlsCa?: str

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMysqlLegacyItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider mysql legacy items0

    Attributes
    ----------
    authType : str, default is Undefined, optional
        Enable IAM authentication to a Google Cloud instance when set to gcp_iam Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    authType?: str

    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    tlsCa?: str

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderMysqlRdsItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider mysql rds items0

    Attributes
    ----------
    authType : str, default is Undefined, optional
        Enable IAM authentication to a Google Cloud instance when set to gcp_iam Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    authType?: str

    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    tlsCa?: str

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderOracleItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider oracle items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    disconnectSessions : bool, default is Undefined, optional
        Enable the built-in session disconnect mechanism. Set to true to disconnect any open sessions prior to running the revocation statements.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    splitStatements : bool, default is Undefined, optional
        Enable spliting statements after semi-colons. Set to true in order to split statements after semi-colons.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    connectionUrl?: str

    disconnectSessions?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    splitStatements?: bool

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderPostgresqlItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider postgresql items0

    Attributes
    ----------
    authType : str, default is Undefined, optional
        Enable IAM authentication to a Google Cloud instance when set to gcp_iam Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    authType?: str

    connectionUrl?: str

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderRedisElasticacheItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider redis elasticache items0

    Attributes
    ----------
    region : str, default is Undefined, optional
        The region where the ElastiCache cluster is hosted. If omitted Vault tries to infer from the environment instead. The AWS region where the ElastiCache cluster is hosted. If omitted the plugin tries to infer the region from the environment.
    url : str, default is Undefined, optional
        The url to connect to including the port; e.g. master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379. The configuration endpoint for the ElastiCache cluster to connect to.
    """


    region?: str

    url?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderRedisItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider redis items0

    Attributes
    ----------
    caCert : str, default is Undefined, optional
        The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity. The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.
    host : str, default is Undefined, optional
        The host to connect to. Specifies the host to connect to
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Specifies whether to skip verification of the server certificate when using TLS.
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Redis.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Specifies whether to use TLS when connecting to Redis.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username for Vault to use.
    """


    caCert?: str

    host?: str

    insecureTls?: bool

    port?: float

    tls?: bool

    username?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderRedshiftItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider redshift items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    connectionUrl?: str

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusAtProviderSnowflakeItems0:
    r"""
    database vault upbound io v1alpha1 secret backend connection status at provider snowflake items0

    Attributes
    ----------
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See the Vault docs for an example. Connection string to use to connect to the database.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    """


    connectionUrl?: str

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    username?: str

    usernameTemplate?: str


schema DatabaseVaultUpboundIoV1alpha1SecretBackendConnectionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


