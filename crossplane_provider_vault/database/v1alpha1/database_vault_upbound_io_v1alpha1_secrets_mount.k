"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecretsMount:
    r"""
    SecretsMount is the Schema for the SecretsMounts API. Configures any number of database secrets engines under a single mount resource

    Attributes
    ----------
    apiVersion : str, default is "database.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecretsMount", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DatabaseVaultUpboundIoV1alpha1SecretsMountSpec, default is Undefined, required
        spec
    status : DatabaseVaultUpboundIoV1alpha1SecretsMountStatus, default is Undefined, optional
        status
    """


    apiVersion: "database.vault.upbound.io/v1alpha1" = "database.vault.upbound.io/v1alpha1"

    kind: "SecretsMount" = "SecretsMount"

    metadata?: v1.ObjectMeta

    spec: DatabaseVaultUpboundIoV1alpha1SecretsMountSpec

    status?: DatabaseVaultUpboundIoV1alpha1SecretsMountStatus


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpec:
    r"""
    SecretsMountSpec defines the desired state of SecretsMount

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProvider, default is Undefined, required
        for provider
    initProvider : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProvider

    initProvider?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecProviderConfigRef

    providerRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecProviderRef

    publishConnectionDetailsTo?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecWriteConnectionSecretToRef


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProvider:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider

    Attributes
    ----------
    allowedManagedKeys : [str], default is Undefined, optional
        Set of managed key registry entry names that the mount in question is allowed to access List of managed key registry entry names that the mount in question is allowed to access
    auditNonHmacRequestKeys : [str], default is Undefined, optional
        Specifies the list of keys that will not be HMAC'd by audit devices in the request data object. Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.
    auditNonHmacResponseKeys : [str], default is Undefined, optional
        Specifies the list of keys that will not be HMAC'd by audit devices in the response data object. Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.
    cassandra : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCassandraItems0], default is Undefined, optional
        A nested block containing configuration options for Cassandra connections. See Connection parameters for the cassandra-database-plugin plugin.
    couchbase : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCouchbaseItems0], default is Undefined, optional
        A nested block containing configuration options for Couchbase connections. See Connection parameters for the couchbase-database-plugin plugin.
    defaultLeaseTtlSeconds : float, default is Undefined, optional
        Default lease duration for tokens and secrets in seconds Default lease duration for tokens and secrets in seconds
    description : str, default is Undefined, optional
        Human-friendly description of the mount Human-friendly description of the mount
    elasticsearch : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderElasticsearchItems0], default is Undefined, optional
        A nested block containing configuration options for Elasticsearch connections. See Connection parameters for the elasticsearch-database-plugin.
    externalEntropyAccess : bool, default is Undefined, optional
        Boolean flag that can be explicitly set to true to enable the secrets engine to access Vault's external entropy source Enable the secrets engine to access Vault's external entropy source
    hana : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderHanaItems0], default is Undefined, optional
        A nested block containing configuration options for SAP HanaDB connections. See Connection parameters for the hana-database-plugin plugin.
    influxdb : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderInfluxdbItems0], default is Undefined, optional
        A nested block containing configuration options for InfluxDB connections. See Connection parameters for the influxdb-database-plugin plugin.
    local : bool, default is Undefined, optional
        Boolean flag that can be explicitly set to true to enforce local mount in HA environment Local mount flag that can be explicitly set to true to enforce local mount in HA environment
    maxLeaseTtlSeconds : float, default is Undefined, optional
        Maximum possible lease duration for tokens and secrets in seconds Maximum possible lease duration for tokens and secrets in seconds
    mongodb : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMongodbItems0], default is Undefined, optional
        A nested block containing configuration options for MongoDB connections. See Connection parameters for the mongodb-database-plugin plugin.
    mongodbatlas : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMongodbatlasItems0], default is Undefined, optional
        A nested block containing configuration options for MongoDB Atlas connections. See Connection parameters for the mongodbatlas-database-plugin plugin.
    mssql : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMssqlItems0], default is Undefined, optional
        A nested block containing configuration options for MSSQL connections. See Connection parameters for the mssql-database-plugin plugin.
    mysql : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlItems0], default is Undefined, optional
        A nested block containing configuration options for MySQL connections. See Connection parameters for the mysql-database-plugin plugin.
    mysqlAurora : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlAuroraItems0], default is Undefined, optional
        A nested block containing configuration options for Aurora MySQL connections. See Connection parameters for the mysql-aurora-database-plugin plugin.
    mysqlLegacy : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlLegacyItems0], default is Undefined, optional
        A nested block containing configuration options for legacy MySQL connections. See Connection parameters for the mysql-legacy-database-plugin plugin.
    mysqlRds : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlRdsItems0], default is Undefined, optional
        A nested block containing configuration options for RDS MySQL connections. See Connection parameters for the mysql-rds-database-plugin plugin.
    namespace : str, default is Undefined, optional
        Target namespace. (requires Enterprise)
    options : {str:str}, default is Undefined, optional
        Specifies mount type specific options that are passed to the backend Specifies mount type specific options that are passed to the backend
    oracle : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderOracleItems0], default is Undefined, optional
        A nested block containing configuration options for Oracle connections. See Connection parameters for the oracle-database-plugin plugin.
    path : str, default is Undefined, optional
        Where the secret backend will be mounted Where the secret backend will be mounted
    postgresql : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderPostgresqlItems0], default is Undefined, optional
        A nested block containing configuration options for PostgreSQL connections. See Connection parameters for the postgresql-database-plugin plugin.
    redis : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedisItems0], default is Undefined, optional
        A nested block containing configuration options for Redis connections. See Connection parameters for the redis-database-plugin plugin.
    redisElasticache : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedisElasticacheItems0], default is Undefined, optional
        A nested block containing configuration options for Redis ElastiCache connections. See Connection parameters for the redis-elasticache-database-plugin plugin.
    redshift : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedshiftItems0], default is Undefined, optional
        A nested block containing configuration options for AWS Redshift connections. See Connection parameters for the redshift-database-plugin plugin.
    sealWrap : bool, default is Undefined, optional
        Boolean flag that can be explicitly set to true to enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability
    snowflake : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderSnowflakeItems0], default is Undefined, optional
        A nested block containing configuration options for Snowflake connections. See Connection parameters for the snowflake-database-plugin plugin.
    """


    allowedManagedKeys?: [str]

    auditNonHmacRequestKeys?: [str]

    auditNonHmacResponseKeys?: [str]

    cassandra?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCassandraItems0]

    couchbase?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCouchbaseItems0]

    defaultLeaseTtlSeconds?: float

    description?: str

    elasticsearch?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderElasticsearchItems0]

    externalEntropyAccess?: bool

    hana?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderHanaItems0]

    influxdb?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderInfluxdbItems0]

    local?: bool

    maxLeaseTtlSeconds?: float

    mongodb?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMongodbItems0]

    mongodbatlas?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMongodbatlasItems0]

    mssql?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMssqlItems0]

    mysql?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlItems0]

    mysqlAurora?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlAuroraItems0]

    mysqlLegacy?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlLegacyItems0]

    mysqlRds?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlRdsItems0]

    namespace?: str

    options?: {str:str}

    oracle?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderOracleItems0]

    path?: str

    postgresql?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderPostgresqlItems0]

    redis?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedisItems0]

    redisElasticache?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedisElasticacheItems0]

    redshift?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedshiftItems0]

    sealWrap?: bool

    snowflake?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderSnowflakeItems0]


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCassandraItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider cassandra items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectTimeout : float, default is Undefined, optional
        The number of seconds to use as a connection timeout. The number of seconds to use as a connection timeout.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    hosts : [str], default is Undefined, optional
        The hosts to connect to. Cassandra hosts to connect to.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Whether to skip verification of the server certificate when using TLS.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCassandraItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    pemBundleSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCassandraItems0PemBundleSecretRef, default is Undefined, optional
        pem bundle secret ref
    pemJsonSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCassandraItems0PemJSONSecretRef, default is Undefined, optional
        pem Json secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Cassandra.
    protocolVersion : float, default is Undefined, optional
        The CQL protocol version to use. The CQL protocol version to use.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Whether to use TLS when connecting to Cassandra.
    username : str, default is Undefined, optional
        The username to authenticate with. The username to use when authenticating with Cassandra.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectTimeout?: float

    data?: {str:str}

    hosts?: [str]

    insecureTls?: bool

    name?: str

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCassandraItems0PasswordSecretRef

    pemBundleSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCassandraItems0PemBundleSecretRef

    pemJsonSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCassandraItems0PemJSONSecretRef

    pluginName?: str

    port?: float

    protocolVersion?: float

    rootRotationStatements?: [str]

    tls?: bool

    username?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCassandraItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The password to use when authenticating with Cassandra.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCassandraItems0PemBundleSecretRef:
    r"""
    Concatenated PEM blocks configuring the certificate chain. Concatenated PEM blocks containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCassandraItems0PemJSONSecretRef:
    r"""
    A JSON structure configuring the certificate chain. Specifies JSON containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCouchbaseItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider couchbase items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    base64PemSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCouchbaseItems0Base64PemSecretRef, default is Undefined, optional
        base64 pem secret ref
    bucketName : str, default is Undefined, optional
        Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server. Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    hosts : [str], default is Undefined, optional
        The hosts to connect to. A set of Couchbase URIs to connect to. Must use `couchbases://` scheme if `tls` is `true`.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Specifies whether to skip verification of the server certificate when using TLS.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCouchbaseItems0PasswordSecretRef, default is Undefined, required
        password secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Specifies whether to use TLS when connecting to Couchbase.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username for Vault to use.
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    base64PemSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCouchbaseItems0Base64PemSecretRef

    bucketName?: str

    data?: {str:str}

    hosts?: [str]

    insecureTls?: bool

    name?: str

    passwordSecretRef: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCouchbaseItems0PasswordSecretRef

    pluginName?: str

    rootRotationStatements?: [str]

    tls?: bool

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCouchbaseItems0Base64PemSecretRef:
    r"""
    Required if tls is true. Specifies the certificate authority of the Couchbase server, as a PEM certificate that has been base64 encoded. Required if `tls` is `true`. Specifies the certificate authority of the Couchbase server, as a PEM certificate that has been base64 encoded.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderCouchbaseItems0PasswordSecretRef:
    r"""
    The password to authenticate with. Specifies the password corresponding to the given username.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderElasticsearchItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider elasticsearch items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    caCert : str, default is Undefined, optional
        The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity. The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity
    caPath : str, default is Undefined, optional
        The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity. The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity
    clientCert : str, default is Undefined, optional
        The path to the certificate for the Elasticsearch client to present for communication. The path to the certificate for the Elasticsearch client to present for communication
    clientKey : str, default is Undefined, optional
        The path to the key for the Elasticsearch client to use for communication. The path to the key for the Elasticsearch client to use for communication
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    insecure : bool, default is Undefined, optional
        Whether to disable certificate verification. Whether to disable certificate verification
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderElasticsearchItems0PasswordSecretRef, default is Undefined, required
        password secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tlsServerName : str, default is Undefined, optional
        This, if set, is used to set the SNI host when connecting via TLS. This, if set, is used to set the SNI host when connecting via TLS
    url : str, default is Undefined, optional
        The URL for Elasticsearch's API. https requires certificate by trusted CA if used. The URL for Elasticsearch's API
    username : str, default is Undefined, optional
        The username to authenticate with. The username to be used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    caCert?: str

    caPath?: str

    clientCert?: str

    clientKey?: str

    data?: {str:str}

    insecure?: bool

    name?: str

    passwordSecretRef: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderElasticsearchItems0PasswordSecretRef

    pluginName?: str

    rootRotationStatements?: [str]

    tlsServerName?: str

    url?: str

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderElasticsearchItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The password to be used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderHanaItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider hana items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderHanaItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    data?: {str:str}

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderHanaItems0PasswordSecretRef

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderHanaItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderInfluxdbItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider influxdb items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectTimeout : float, default is Undefined, optional
        The number of seconds to use as a connection timeout. The number of seconds to use as a connection timeout.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    host : str, default is Undefined, optional
        The host to connect to. Influxdb host to connect to.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Whether to skip verification of the server certificate when using TLS.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderInfluxdbItems0PasswordSecretRef, default is Undefined, required
        password secret ref
    pemBundleSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderInfluxdbItems0PemBundleSecretRef, default is Undefined, optional
        pem bundle secret ref
    pemJsonSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderInfluxdbItems0PemJSONSecretRef, default is Undefined, optional
        pem Json secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Influxdb.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Whether to use TLS when connecting to Influxdb.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username to use for superuser access.
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectTimeout?: float

    data?: {str:str}

    host?: str

    insecureTls?: bool

    name?: str

    passwordSecretRef: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderInfluxdbItems0PasswordSecretRef

    pemBundleSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderInfluxdbItems0PemBundleSecretRef

    pemJsonSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderInfluxdbItems0PemJSONSecretRef

    pluginName?: str

    port?: float

    rootRotationStatements?: [str]

    tls?: bool

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderInfluxdbItems0PasswordSecretRef:
    r"""
    The password to authenticate with. Specifies the password corresponding to the given username.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderInfluxdbItems0PemBundleSecretRef:
    r"""
    Concatenated PEM blocks configuring the certificate chain. Concatenated PEM blocks containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderInfluxdbItems0PemJSONSecretRef:
    r"""
    A JSON structure configuring the certificate chain. Specifies JSON containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMongodbItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider mongodb items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMongodbItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMongodbItems0PasswordSecretRef

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMongodbItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMongodbatlasItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider mongodbatlas items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    privateKeySecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMongodbatlasItems0PrivateKeySecretRef, default is Undefined, required
        private key secret ref
    projectId : str, default is Undefined, optional
        The Project ID the Database User should be created within. The Project ID the Database User should be created within.
    publicKey : str, default is Undefined, optional
        The Public Programmatic API Key used to authenticate with the MongoDB Atlas API. The Public Programmatic API Key used to authenticate with the MongoDB Atlas API.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    data?: {str:str}

    name?: str

    pluginName?: str

    privateKeySecretRef: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMongodbatlasItems0PrivateKeySecretRef

    projectId?: str

    publicKey?: str

    rootRotationStatements?: [str]

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMongodbatlasItems0PrivateKeySecretRef:
    r"""
    The Private Programmatic API Key used to connect with MongoDB Atlas API. The Private Programmatic API Key used to connect with MongoDB Atlas API.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMssqlItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider mssql items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    containedDb : bool, default is Undefined, optional
        For Vault v1.9+. Set to true when the target is a Contained Database, e.g. AzureSQL. See Vault docs Set to true when the target is a Contained Database, e.g. AzureSQL.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMssqlItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    containedDb?: bool

    data?: {str:str}

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMssqlItems0PasswordSecretRef

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMssqlItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlAuroraItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider mysql aurora items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    authType : str, default is Undefined, optional
        Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlAuroraItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    serviceAccountJsonSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlAuroraItems0ServiceAccountJSONSecretRef, default is Undefined, optional
        service account Json secret ref
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    tlsCertificateKeySecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlAuroraItems0TLSCertificateKeySecretRef, default is Undefined, optional
        tls certificate key secret ref
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    authType?: str

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlAuroraItems0PasswordSecretRef

    pluginName?: str

    rootRotationStatements?: [str]

    serviceAccountJsonSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlAuroraItems0ServiceAccountJSONSecretRef

    tlsCa?: str

    tlsCertificateKeySecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlAuroraItems0TLSCertificateKeySecretRef

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlAuroraItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlAuroraItems0ServiceAccountJSONSecretRef:
    r"""
    A JSON encoded credential for use with IAM authorization

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlAuroraItems0TLSCertificateKeySecretRef:
    r"""
    x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined. x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider mysql items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    authType : str, default is Undefined, optional
        Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    serviceAccountJsonSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlItems0ServiceAccountJSONSecretRef, default is Undefined, optional
        service account Json secret ref
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    tlsCertificateKeySecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlItems0TLSCertificateKeySecretRef, default is Undefined, optional
        tls certificate key secret ref
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    authType?: str

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlItems0PasswordSecretRef

    pluginName?: str

    rootRotationStatements?: [str]

    serviceAccountJsonSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlItems0ServiceAccountJSONSecretRef

    tlsCa?: str

    tlsCertificateKeySecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlItems0TLSCertificateKeySecretRef

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlItems0ServiceAccountJSONSecretRef:
    r"""
    A JSON encoded credential for use with IAM authorization

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlItems0TLSCertificateKeySecretRef:
    r"""
    x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined. x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlLegacyItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider mysql legacy items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    authType : str, default is Undefined, optional
        Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlLegacyItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    serviceAccountJsonSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlLegacyItems0ServiceAccountJSONSecretRef, default is Undefined, optional
        service account Json secret ref
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    tlsCertificateKeySecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlLegacyItems0TLSCertificateKeySecretRef, default is Undefined, optional
        tls certificate key secret ref
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    authType?: str

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlLegacyItems0PasswordSecretRef

    pluginName?: str

    rootRotationStatements?: [str]

    serviceAccountJsonSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlLegacyItems0ServiceAccountJSONSecretRef

    tlsCa?: str

    tlsCertificateKeySecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlLegacyItems0TLSCertificateKeySecretRef

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlLegacyItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlLegacyItems0ServiceAccountJSONSecretRef:
    r"""
    A JSON encoded credential for use with IAM authorization

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlLegacyItems0TLSCertificateKeySecretRef:
    r"""
    x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined. x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlRdsItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider mysql rds items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    authType : str, default is Undefined, optional
        Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlRdsItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    serviceAccountJsonSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlRdsItems0ServiceAccountJSONSecretRef, default is Undefined, optional
        service account Json secret ref
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    tlsCertificateKeySecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlRdsItems0TLSCertificateKeySecretRef, default is Undefined, optional
        tls certificate key secret ref
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    authType?: str

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlRdsItems0PasswordSecretRef

    pluginName?: str

    rootRotationStatements?: [str]

    serviceAccountJsonSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlRdsItems0ServiceAccountJSONSecretRef

    tlsCa?: str

    tlsCertificateKeySecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlRdsItems0TLSCertificateKeySecretRef

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlRdsItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlRdsItems0ServiceAccountJSONSecretRef:
    r"""
    A JSON encoded credential for use with IAM authorization

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderMysqlRdsItems0TLSCertificateKeySecretRef:
    r"""
    x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined. x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderOracleItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider oracle items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    disconnectSessions : bool, default is Undefined, optional
        Set to true to disconnect any open sessions prior to running the revocation statements.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderOracleItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    splitStatements : bool, default is Undefined, optional
        Set to true in order to split statements after semi-colons.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    data?: {str:str}

    disconnectSessions?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderOracleItems0PasswordSecretRef

    pluginName?: str

    rootRotationStatements?: [str]

    splitStatements?: bool

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderOracleItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderPostgresqlItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider postgresql items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    authType : str, default is Undefined, optional
        Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderPostgresqlItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    serviceAccountJsonSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderPostgresqlItems0ServiceAccountJSONSecretRef, default is Undefined, optional
        service account Json secret ref
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    authType?: str

    connectionUrl?: str

    data?: {str:str}

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderPostgresqlItems0PasswordSecretRef

    pluginName?: str

    rootRotationStatements?: [str]

    serviceAccountJsonSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderPostgresqlItems0ServiceAccountJSONSecretRef

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderPostgresqlItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderPostgresqlItems0ServiceAccountJSONSecretRef:
    r"""
    A JSON encoded credential for use with IAM authorization

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedisElasticacheItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider redis elasticache items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedisElasticacheItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    region : str, default is Undefined, optional
        The AWS region where the ElastiCache cluster is hosted. If omitted the plugin tries to infer the region from the environment. The AWS region where the ElastiCache cluster is hosted. If omitted the plugin tries to infer the region from the environment.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    url : str, default is Undefined, optional
        The URL for Elasticsearch's API. https requires certificate by trusted CA if used. The configuration endpoint for the ElastiCache cluster to connect to.
    usernameSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedisElasticacheItems0UsernameSecretRef, default is Undefined, optional
        username secret ref
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    data?: {str:str}

    name?: str

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedisElasticacheItems0PasswordSecretRef

    pluginName?: str

    region?: str

    rootRotationStatements?: [str]

    url?: str

    usernameSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedisElasticacheItems0UsernameSecretRef

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedisElasticacheItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The AWS secret key id to use to talk to ElastiCache. If omitted the credentials chain provider is used instead.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedisElasticacheItems0UsernameSecretRef:
    r"""
    The username to authenticate with. The AWS access key id to use to talk to ElastiCache. If omitted the credentials chain provider is used instead.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedisItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider redis items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    caCert : str, default is Undefined, optional
        The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity. The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    host : str, default is Undefined, optional
        The host to connect to. Specifies the host to connect to
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Specifies whether to skip verification of the server certificate when using TLS.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedisItems0PasswordSecretRef, default is Undefined, required
        password secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Redis.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Specifies whether to use TLS when connecting to Redis.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username for Vault to use.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    caCert?: str

    data?: {str:str}

    host?: str

    insecureTls?: bool

    name?: str

    passwordSecretRef: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedisItems0PasswordSecretRef

    pluginName?: str

    port?: float

    rootRotationStatements?: [str]

    tls?: bool

    username?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedisItems0PasswordSecretRef:
    r"""
    The password to authenticate with. Specifies the password corresponding to the given username.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedshiftItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider redshift items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedshiftItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    data?: {str:str}

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedshiftItems0PasswordSecretRef

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderRedshiftItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderSnowflakeItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec for provider snowflake items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    passwordSecretRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderSnowflakeItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    passwordSecretRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderSnowflakeItems0PasswordSecretRef

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecForProviderSnowflakeItems0PasswordSecretRef:
    r"""
    The password to authenticate with. The root credential password used in the connection URL

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    allowedManagedKeys : [str], default is Undefined, optional
        Set of managed key registry entry names that the mount in question is allowed to access List of managed key registry entry names that the mount in question is allowed to access
    auditNonHmacRequestKeys : [str], default is Undefined, optional
        Specifies the list of keys that will not be HMAC'd by audit devices in the request data object. Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.
    auditNonHmacResponseKeys : [str], default is Undefined, optional
        Specifies the list of keys that will not be HMAC'd by audit devices in the response data object. Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.
    cassandra : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderCassandraItems0], default is Undefined, optional
        A nested block containing configuration options for Cassandra connections. See Connection parameters for the cassandra-database-plugin plugin.
    couchbase : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderCouchbaseItems0], default is Undefined, optional
        A nested block containing configuration options for Couchbase connections. See Connection parameters for the couchbase-database-plugin plugin.
    defaultLeaseTtlSeconds : float, default is Undefined, optional
        Default lease duration for tokens and secrets in seconds Default lease duration for tokens and secrets in seconds
    description : str, default is Undefined, optional
        Human-friendly description of the mount Human-friendly description of the mount
    elasticsearch : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderElasticsearchItems0], default is Undefined, optional
        A nested block containing configuration options for Elasticsearch connections. See Connection parameters for the elasticsearch-database-plugin.
    externalEntropyAccess : bool, default is Undefined, optional
        Boolean flag that can be explicitly set to true to enable the secrets engine to access Vault's external entropy source Enable the secrets engine to access Vault's external entropy source
    hana : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderHanaItems0], default is Undefined, optional
        A nested block containing configuration options for SAP HanaDB connections. See Connection parameters for the hana-database-plugin plugin.
    influxdb : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderInfluxdbItems0], default is Undefined, optional
        A nested block containing configuration options for InfluxDB connections. See Connection parameters for the influxdb-database-plugin plugin.
    local : bool, default is Undefined, optional
        Boolean flag that can be explicitly set to true to enforce local mount in HA environment Local mount flag that can be explicitly set to true to enforce local mount in HA environment
    maxLeaseTtlSeconds : float, default is Undefined, optional
        Maximum possible lease duration for tokens and secrets in seconds Maximum possible lease duration for tokens and secrets in seconds
    mongodb : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMongodbItems0], default is Undefined, optional
        A nested block containing configuration options for MongoDB connections. See Connection parameters for the mongodb-database-plugin plugin.
    mongodbatlas : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMongodbatlasItems0], default is Undefined, optional
        A nested block containing configuration options for MongoDB Atlas connections. See Connection parameters for the mongodbatlas-database-plugin plugin.
    mssql : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMssqlItems0], default is Undefined, optional
        A nested block containing configuration options for MSSQL connections. See Connection parameters for the mssql-database-plugin plugin.
    mysql : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMysqlItems0], default is Undefined, optional
        A nested block containing configuration options for MySQL connections. See Connection parameters for the mysql-database-plugin plugin.
    mysqlAurora : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMysqlAuroraItems0], default is Undefined, optional
        A nested block containing configuration options for Aurora MySQL connections. See Connection parameters for the mysql-aurora-database-plugin plugin.
    mysqlLegacy : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMysqlLegacyItems0], default is Undefined, optional
        A nested block containing configuration options for legacy MySQL connections. See Connection parameters for the mysql-legacy-database-plugin plugin.
    mysqlRds : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMysqlRdsItems0], default is Undefined, optional
        A nested block containing configuration options for RDS MySQL connections. See Connection parameters for the mysql-rds-database-plugin plugin.
    namespace : str, default is Undefined, optional
        Target namespace. (requires Enterprise)
    options : {str:str}, default is Undefined, optional
        Specifies mount type specific options that are passed to the backend Specifies mount type specific options that are passed to the backend
    oracle : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderOracleItems0], default is Undefined, optional
        A nested block containing configuration options for Oracle connections. See Connection parameters for the oracle-database-plugin plugin.
    path : str, default is Undefined, optional
        Where the secret backend will be mounted Where the secret backend will be mounted
    postgresql : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderPostgresqlItems0], default is Undefined, optional
        A nested block containing configuration options for PostgreSQL connections. See Connection parameters for the postgresql-database-plugin plugin.
    redis : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderRedisItems0], default is Undefined, optional
        A nested block containing configuration options for Redis connections. See Connection parameters for the redis-database-plugin plugin.
    redisElasticache : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderRedisElasticacheItems0], default is Undefined, optional
        A nested block containing configuration options for Redis ElastiCache connections. See Connection parameters for the redis-elasticache-database-plugin plugin.
    redshift : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderRedshiftItems0], default is Undefined, optional
        A nested block containing configuration options for AWS Redshift connections. See Connection parameters for the redshift-database-plugin plugin.
    sealWrap : bool, default is Undefined, optional
        Boolean flag that can be explicitly set to true to enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability
    snowflake : [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderSnowflakeItems0], default is Undefined, optional
        A nested block containing configuration options for Snowflake connections. See Connection parameters for the snowflake-database-plugin plugin.
    """


    allowedManagedKeys?: [str]

    auditNonHmacRequestKeys?: [str]

    auditNonHmacResponseKeys?: [str]

    cassandra?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderCassandraItems0]

    couchbase?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderCouchbaseItems0]

    defaultLeaseTtlSeconds?: float

    description?: str

    elasticsearch?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderElasticsearchItems0]

    externalEntropyAccess?: bool

    hana?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderHanaItems0]

    influxdb?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderInfluxdbItems0]

    local?: bool

    maxLeaseTtlSeconds?: float

    mongodb?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMongodbItems0]

    mongodbatlas?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMongodbatlasItems0]

    mssql?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMssqlItems0]

    mysql?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMysqlItems0]

    mysqlAurora?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMysqlAuroraItems0]

    mysqlLegacy?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMysqlLegacyItems0]

    mysqlRds?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMysqlRdsItems0]

    namespace?: str

    options?: {str:str}

    oracle?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderOracleItems0]

    path?: str

    postgresql?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderPostgresqlItems0]

    redis?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderRedisItems0]

    redisElasticache?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderRedisElasticacheItems0]

    redshift?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderRedshiftItems0]

    sealWrap?: bool

    snowflake?: [DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderSnowflakeItems0]


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderCassandraItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider cassandra items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectTimeout : float, default is Undefined, optional
        The number of seconds to use as a connection timeout. The number of seconds to use as a connection timeout.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    hosts : [str], default is Undefined, optional
        The hosts to connect to. Cassandra hosts to connect to.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Whether to skip verification of the server certificate when using TLS.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Cassandra.
    protocolVersion : float, default is Undefined, optional
        The CQL protocol version to use. The CQL protocol version to use.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Whether to use TLS when connecting to Cassandra.
    username : str, default is Undefined, optional
        The username to authenticate with. The username to use when authenticating with Cassandra.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectTimeout?: float

    data?: {str:str}

    hosts?: [str]

    insecureTls?: bool

    name?: str

    pluginName?: str

    port?: float

    protocolVersion?: float

    rootRotationStatements?: [str]

    tls?: bool

    username?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderCouchbaseItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider couchbase items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    bucketName : str, default is Undefined, optional
        Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server. Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    hosts : [str], default is Undefined, optional
        The hosts to connect to. A set of Couchbase URIs to connect to. Must use `couchbases://` scheme if `tls` is `true`.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Specifies whether to skip verification of the server certificate when using TLS.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Specifies whether to use TLS when connecting to Couchbase.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username for Vault to use.
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    bucketName?: str

    data?: {str:str}

    hosts?: [str]

    insecureTls?: bool

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    tls?: bool

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderElasticsearchItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider elasticsearch items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    caCert : str, default is Undefined, optional
        The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity. The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity
    caPath : str, default is Undefined, optional
        The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity. The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity
    clientCert : str, default is Undefined, optional
        The path to the certificate for the Elasticsearch client to present for communication. The path to the certificate for the Elasticsearch client to present for communication
    clientKey : str, default is Undefined, optional
        The path to the key for the Elasticsearch client to use for communication. The path to the key for the Elasticsearch client to use for communication
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    insecure : bool, default is Undefined, optional
        Whether to disable certificate verification. Whether to disable certificate verification
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tlsServerName : str, default is Undefined, optional
        This, if set, is used to set the SNI host when connecting via TLS. This, if set, is used to set the SNI host when connecting via TLS
    url : str, default is Undefined, optional
        The URL for Elasticsearch's API. https requires certificate by trusted CA if used. The URL for Elasticsearch's API
    username : str, default is Undefined, optional
        The username to authenticate with. The username to be used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    caCert?: str

    caPath?: str

    clientCert?: str

    clientKey?: str

    data?: {str:str}

    insecure?: bool

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    tlsServerName?: str

    url?: str

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderHanaItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider hana items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    data?: {str:str}

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderInfluxdbItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider influxdb items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectTimeout : float, default is Undefined, optional
        The number of seconds to use as a connection timeout. The number of seconds to use as a connection timeout.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    host : str, default is Undefined, optional
        The host to connect to. Influxdb host to connect to.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Whether to skip verification of the server certificate when using TLS.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Influxdb.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Whether to use TLS when connecting to Influxdb.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username to use for superuser access.
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectTimeout?: float

    data?: {str:str}

    host?: str

    insecureTls?: bool

    name?: str

    pluginName?: str

    port?: float

    rootRotationStatements?: [str]

    tls?: bool

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMongodbItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider mongodb items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMongodbatlasItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider mongodbatlas items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    projectId : str, default is Undefined, optional
        The Project ID the Database User should be created within. The Project ID the Database User should be created within.
    publicKey : str, default is Undefined, optional
        The Public Programmatic API Key used to authenticate with the MongoDB Atlas API. The Public Programmatic API Key used to authenticate with the MongoDB Atlas API.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    data?: {str:str}

    name?: str

    pluginName?: str

    projectId?: str

    publicKey?: str

    rootRotationStatements?: [str]

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMssqlItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider mssql items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    containedDb : bool, default is Undefined, optional
        For Vault v1.9+. Set to true when the target is a Contained Database, e.g. AzureSQL. See Vault docs Set to true when the target is a Contained Database, e.g. AzureSQL.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    containedDb?: bool

    data?: {str:str}

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMysqlAuroraItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider mysql aurora items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    authType : str, default is Undefined, optional
        Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    authType?: str

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    tlsCa?: str

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMysqlItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider mysql items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    authType : str, default is Undefined, optional
        Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    authType?: str

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    tlsCa?: str

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMysqlLegacyItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider mysql legacy items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    authType : str, default is Undefined, optional
        Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    authType?: str

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    tlsCa?: str

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderMysqlRdsItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider mysql rds items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    authType : str, default is Undefined, optional
        Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    authType?: str

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    tlsCa?: str

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderOracleItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider oracle items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    disconnectSessions : bool, default is Undefined, optional
        Set to true to disconnect any open sessions prior to running the revocation statements.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    splitStatements : bool, default is Undefined, optional
        Set to true in order to split statements after semi-colons.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    data?: {str:str}

    disconnectSessions?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    splitStatements?: bool

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderPostgresqlItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider postgresql items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    authType : str, default is Undefined, optional
        Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    authType?: str

    connectionUrl?: str

    data?: {str:str}

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderRedisElasticacheItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider redis elasticache items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    region : str, default is Undefined, optional
        The AWS region where the ElastiCache cluster is hosted. If omitted the plugin tries to infer the region from the environment. The AWS region where the ElastiCache cluster is hosted. If omitted the plugin tries to infer the region from the environment.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    url : str, default is Undefined, optional
        The URL for Elasticsearch's API. https requires certificate by trusted CA if used. The configuration endpoint for the ElastiCache cluster to connect to.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    data?: {str:str}

    name?: str

    pluginName?: str

    region?: str

    rootRotationStatements?: [str]

    url?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderRedisItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider redis items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    caCert : str, default is Undefined, optional
        The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity. The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    host : str, default is Undefined, optional
        The host to connect to. Specifies the host to connect to
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Specifies whether to skip verification of the server certificate when using TLS.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Redis.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Specifies whether to use TLS when connecting to Redis.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username for Vault to use.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    caCert?: str

    data?: {str:str}

    host?: str

    insecureTls?: bool

    name?: str

    pluginName?: str

    port?: float

    rootRotationStatements?: [str]

    tls?: bool

    username?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderRedshiftItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider redshift items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    data?: {str:str}

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecInitProviderSnowflakeItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount spec init provider snowflake items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecProviderConfigRefPolicy


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecProviderRefPolicy


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecPublishConnectionDetailsToConfigRef

    metadata?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecPublishConnectionDetailsToMetadata

    name: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatabaseVaultUpboundIoV1alpha1SecretsMountSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatabaseVaultUpboundIoV1alpha1SecretsMountSpecPublishConnectionDetailsToConfigRefPolicy


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatus:
    r"""
    SecretsMountStatus defines the observed state of SecretsMount.

    Attributes
    ----------
    atProvider : DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProvider

    conditions?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusConditionsItems0]


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProvider:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider

    Attributes
    ----------
    accessor : str, default is Undefined, optional
        Accessor of the mount
    allowedManagedKeys : [str], default is Undefined, optional
        Set of managed key registry entry names that the mount in question is allowed to access List of managed key registry entry names that the mount in question is allowed to access
    auditNonHmacRequestKeys : [str], default is Undefined, optional
        Specifies the list of keys that will not be HMAC'd by audit devices in the request data object. Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.
    auditNonHmacResponseKeys : [str], default is Undefined, optional
        Specifies the list of keys that will not be HMAC'd by audit devices in the response data object. Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.
    cassandra : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderCassandraItems0], default is Undefined, optional
        A nested block containing configuration options for Cassandra connections. See Connection parameters for the cassandra-database-plugin plugin.
    couchbase : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderCouchbaseItems0], default is Undefined, optional
        A nested block containing configuration options for Couchbase connections. See Connection parameters for the couchbase-database-plugin plugin.
    defaultLeaseTtlSeconds : float, default is Undefined, optional
        Default lease duration for tokens and secrets in seconds Default lease duration for tokens and secrets in seconds
    description : str, default is Undefined, optional
        Human-friendly description of the mount Human-friendly description of the mount
    elasticsearch : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderElasticsearchItems0], default is Undefined, optional
        A nested block containing configuration options for Elasticsearch connections. See Connection parameters for the elasticsearch-database-plugin.
    engineCount : float, default is Undefined, optional
        The total number of database secrets engines configured. Total number of database secret engines configured under the mount.
    externalEntropyAccess : bool, default is Undefined, optional
        Boolean flag that can be explicitly set to true to enable the secrets engine to access Vault's external entropy source Enable the secrets engine to access Vault's external entropy source
    hana : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderHanaItems0], default is Undefined, optional
        A nested block containing configuration options for SAP HanaDB connections. See Connection parameters for the hana-database-plugin plugin.
    id : str, default is Undefined, optional
        id
    influxdb : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderInfluxdbItems0], default is Undefined, optional
        A nested block containing configuration options for InfluxDB connections. See Connection parameters for the influxdb-database-plugin plugin.
    local : bool, default is Undefined, optional
        Boolean flag that can be explicitly set to true to enforce local mount in HA environment Local mount flag that can be explicitly set to true to enforce local mount in HA environment
    maxLeaseTtlSeconds : float, default is Undefined, optional
        Maximum possible lease duration for tokens and secrets in seconds Maximum possible lease duration for tokens and secrets in seconds
    mongodb : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMongodbItems0], default is Undefined, optional
        A nested block containing configuration options for MongoDB connections. See Connection parameters for the mongodb-database-plugin plugin.
    mongodbatlas : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMongodbatlasItems0], default is Undefined, optional
        A nested block containing configuration options for MongoDB Atlas connections. See Connection parameters for the mongodbatlas-database-plugin plugin.
    mssql : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMssqlItems0], default is Undefined, optional
        A nested block containing configuration options for MSSQL connections. See Connection parameters for the mssql-database-plugin plugin.
    mysql : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMysqlItems0], default is Undefined, optional
        A nested block containing configuration options for MySQL connections. See Connection parameters for the mysql-database-plugin plugin.
    mysqlAurora : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMysqlAuroraItems0], default is Undefined, optional
        A nested block containing configuration options for Aurora MySQL connections. See Connection parameters for the mysql-aurora-database-plugin plugin.
    mysqlLegacy : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMysqlLegacyItems0], default is Undefined, optional
        A nested block containing configuration options for legacy MySQL connections. See Connection parameters for the mysql-legacy-database-plugin plugin.
    mysqlRds : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMysqlRdsItems0], default is Undefined, optional
        A nested block containing configuration options for RDS MySQL connections. See Connection parameters for the mysql-rds-database-plugin plugin.
    namespace : str, default is Undefined, optional
        Target namespace. (requires Enterprise)
    options : {str:str}, default is Undefined, optional
        Specifies mount type specific options that are passed to the backend Specifies mount type specific options that are passed to the backend
    oracle : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderOracleItems0], default is Undefined, optional
        A nested block containing configuration options for Oracle connections. See Connection parameters for the oracle-database-plugin plugin.
    path : str, default is Undefined, optional
        Where the secret backend will be mounted Where the secret backend will be mounted
    postgresql : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderPostgresqlItems0], default is Undefined, optional
        A nested block containing configuration options for PostgreSQL connections. See Connection parameters for the postgresql-database-plugin plugin.
    redis : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderRedisItems0], default is Undefined, optional
        A nested block containing configuration options for Redis connections. See Connection parameters for the redis-database-plugin plugin.
    redisElasticache : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderRedisElasticacheItems0], default is Undefined, optional
        A nested block containing configuration options for Redis ElastiCache connections. See Connection parameters for the redis-elasticache-database-plugin plugin.
    redshift : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderRedshiftItems0], default is Undefined, optional
        A nested block containing configuration options for AWS Redshift connections. See Connection parameters for the redshift-database-plugin plugin.
    sealWrap : bool, default is Undefined, optional
        Boolean flag that can be explicitly set to true to enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability
    snowflake : [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderSnowflakeItems0], default is Undefined, optional
        A nested block containing configuration options for Snowflake connections. See Connection parameters for the snowflake-database-plugin plugin.
    """


    accessor?: str

    allowedManagedKeys?: [str]

    auditNonHmacRequestKeys?: [str]

    auditNonHmacResponseKeys?: [str]

    cassandra?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderCassandraItems0]

    couchbase?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderCouchbaseItems0]

    defaultLeaseTtlSeconds?: float

    description?: str

    elasticsearch?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderElasticsearchItems0]

    engineCount?: float

    externalEntropyAccess?: bool

    hana?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderHanaItems0]

    id?: str

    influxdb?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderInfluxdbItems0]

    local?: bool

    maxLeaseTtlSeconds?: float

    mongodb?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMongodbItems0]

    mongodbatlas?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMongodbatlasItems0]

    mssql?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMssqlItems0]

    mysql?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMysqlItems0]

    mysqlAurora?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMysqlAuroraItems0]

    mysqlLegacy?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMysqlLegacyItems0]

    mysqlRds?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMysqlRdsItems0]

    namespace?: str

    options?: {str:str}

    oracle?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderOracleItems0]

    path?: str

    postgresql?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderPostgresqlItems0]

    redis?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderRedisItems0]

    redisElasticache?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderRedisElasticacheItems0]

    redshift?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderRedshiftItems0]

    sealWrap?: bool

    snowflake?: [DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderSnowflakeItems0]


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderCassandraItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider cassandra items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectTimeout : float, default is Undefined, optional
        The number of seconds to use as a connection timeout. The number of seconds to use as a connection timeout.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    hosts : [str], default is Undefined, optional
        The hosts to connect to. Cassandra hosts to connect to.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Whether to skip verification of the server certificate when using TLS.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Cassandra.
    protocolVersion : float, default is Undefined, optional
        The CQL protocol version to use. The CQL protocol version to use.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Whether to use TLS when connecting to Cassandra.
    username : str, default is Undefined, optional
        The username to authenticate with. The username to use when authenticating with Cassandra.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectTimeout?: float

    data?: {str:str}

    hosts?: [str]

    insecureTls?: bool

    name?: str

    pluginName?: str

    port?: float

    protocolVersion?: float

    rootRotationStatements?: [str]

    tls?: bool

    username?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderCouchbaseItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider couchbase items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    bucketName : str, default is Undefined, optional
        Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server. Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    hosts : [str], default is Undefined, optional
        The hosts to connect to. A set of Couchbase URIs to connect to. Must use `couchbases://` scheme if `tls` is `true`.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Specifies whether to skip verification of the server certificate when using TLS.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Specifies whether to use TLS when connecting to Couchbase.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username for Vault to use.
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    bucketName?: str

    data?: {str:str}

    hosts?: [str]

    insecureTls?: bool

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    tls?: bool

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderElasticsearchItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider elasticsearch items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    caCert : str, default is Undefined, optional
        The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity. The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity
    caPath : str, default is Undefined, optional
        The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity. The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity
    clientCert : str, default is Undefined, optional
        The path to the certificate for the Elasticsearch client to present for communication. The path to the certificate for the Elasticsearch client to present for communication
    clientKey : str, default is Undefined, optional
        The path to the key for the Elasticsearch client to use for communication. The path to the key for the Elasticsearch client to use for communication
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    insecure : bool, default is Undefined, optional
        Whether to disable certificate verification. Whether to disable certificate verification
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tlsServerName : str, default is Undefined, optional
        This, if set, is used to set the SNI host when connecting via TLS. This, if set, is used to set the SNI host when connecting via TLS
    url : str, default is Undefined, optional
        The URL for Elasticsearch's API. https requires certificate by trusted CA if used. The URL for Elasticsearch's API
    username : str, default is Undefined, optional
        The username to authenticate with. The username to be used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    caCert?: str

    caPath?: str

    clientCert?: str

    clientKey?: str

    data?: {str:str}

    insecure?: bool

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    tlsServerName?: str

    url?: str

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderHanaItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider hana items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    data?: {str:str}

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderInfluxdbItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider influxdb items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectTimeout : float, default is Undefined, optional
        The number of seconds to use as a connection timeout. The number of seconds to use as a connection timeout.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    host : str, default is Undefined, optional
        The host to connect to. Influxdb host to connect to.
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Whether to skip verification of the server certificate when using TLS.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Influxdb.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Whether to use TLS when connecting to Influxdb.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username to use for superuser access.
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Template describing how dynamic usernames are generated.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectTimeout?: float

    data?: {str:str}

    host?: str

    insecureTls?: bool

    name?: str

    pluginName?: str

    port?: float

    rootRotationStatements?: [str]

    tls?: bool

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMongodbItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider mongodb items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMongodbatlasItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider mongodbatlas items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    projectId : str, default is Undefined, optional
        The Project ID the Database User should be created within. The Project ID the Database User should be created within.
    publicKey : str, default is Undefined, optional
        The Public Programmatic API Key used to authenticate with the MongoDB Atlas API. The Public Programmatic API Key used to authenticate with the MongoDB Atlas API.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    data?: {str:str}

    name?: str

    pluginName?: str

    projectId?: str

    publicKey?: str

    rootRotationStatements?: [str]

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMssqlItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider mssql items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    containedDb : bool, default is Undefined, optional
        For Vault v1.9+. Set to true when the target is a Contained Database, e.g. AzureSQL. See Vault docs Set to true when the target is a Contained Database, e.g. AzureSQL.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    containedDb?: bool

    data?: {str:str}

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMysqlAuroraItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider mysql aurora items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    authType : str, default is Undefined, optional
        Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    authType?: str

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    tlsCa?: str

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMysqlItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider mysql items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    authType : str, default is Undefined, optional
        Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    authType?: str

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    tlsCa?: str

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMysqlLegacyItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider mysql legacy items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    authType : str, default is Undefined, optional
        Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    authType?: str

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    tlsCa?: str

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderMysqlRdsItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider mysql rds items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    authType : str, default is Undefined, optional
        Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tlsCa : str, default is Undefined, optional
        x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded. x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    authType?: str

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    tlsCa?: str

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderOracleItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider oracle items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    disconnectSessions : bool, default is Undefined, optional
        Set to true to disconnect any open sessions prior to running the revocation statements.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    splitStatements : bool, default is Undefined, optional
        Set to true in order to split statements after semi-colons.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    data?: {str:str}

    disconnectSessions?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    splitStatements?: bool

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderPostgresqlItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider postgresql items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    authType : str, default is Undefined, optional
        Specify alternative authorization type. (Only 'gcp_iam' is valid currently)
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    authType?: str

    connectionUrl?: str

    data?: {str:str}

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderRedisElasticacheItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider redis elasticache items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    region : str, default is Undefined, optional
        The AWS region where the ElastiCache cluster is hosted. If omitted the plugin tries to infer the region from the environment. The AWS region where the ElastiCache cluster is hosted. If omitted the plugin tries to infer the region from the environment.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    url : str, default is Undefined, optional
        The URL for Elasticsearch's API. https requires certificate by trusted CA if used. The configuration endpoint for the ElastiCache cluster to connect to.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    data?: {str:str}

    name?: str

    pluginName?: str

    region?: str

    rootRotationStatements?: [str]

    url?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderRedisItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider redis items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    caCert : str, default is Undefined, optional
        The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity. The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    host : str, default is Undefined, optional
        The host to connect to. Specifies the host to connect to
    insecureTls : bool, default is Undefined, optional
        Whether to skip verification of the server certificate when using TLS. Specifies whether to skip verification of the server certificate when using TLS.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    port : float, default is Undefined, optional
        The default port to connect to if no port is specified as part of the host. The transport port to use to connect to Redis.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    tls : bool, default is Undefined, optional
        Whether to use TLS when connecting to Cassandra. Specifies whether to use TLS when connecting to Redis.
    username : str, default is Undefined, optional
        The username to authenticate with. Specifies the username for Vault to use.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    caCert?: str

    data?: {str:str}

    host?: str

    insecureTls?: bool

    name?: str

    pluginName?: str

    port?: float

    rootRotationStatements?: [str]

    tls?: bool

    username?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderRedshiftItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider redshift items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    disableEscaping : bool, default is Undefined, optional
        Disable special character escaping in username and password. Disable special character escaping in username and password
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    data?: {str:str}

    disableEscaping?: bool

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusAtProviderSnowflakeItems0:
    r"""
    database vault upbound io v1alpha1 secrets mount status at provider snowflake items0

    Attributes
    ----------
    allowedRoles : [str], default is Undefined, optional
        A list of roles that are allowed to use this connection. A list of roles that are allowed to use this connection.
    connectionUrl : str, default is Undefined, optional
        A URL containing connection information. See Vault docs Connection string to use to connect to the database.
    data : {str:str}, default is Undefined, optional
        A map of sensitive data to pass to the endpoint. Useful for templated connection strings. A map of sensitive data to pass to the endpoint. Useful for templated connection strings.
    maxConnectionLifetime : float, default is Undefined, optional
        The maximum number of seconds to keep a connection alive for. Maximum number of seconds a connection may be reused.
    maxIdleConnections : float, default is Undefined, optional
        The maximum number of idle connections to maintain. Maximum number of idle connections to the database.
    maxOpenConnections : float, default is Undefined, optional
        The maximum number of open connections to use. Maximum number of open connections to the database.
    name : str, default is Undefined, optional
        for any configured database engine is changed Name of the database connection.
    pluginName : str, default is Undefined, optional
        Specifies the name of the plugin to use. Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.
    rootRotationStatements : [str], default is Undefined, optional
        A list of database statements to be executed to rotate the root user's credentials. A list of database statements to be executed to rotate the root user's credentials.
    username : str, default is Undefined, optional
        The username to authenticate with. The root credential username used in the connection URL
    usernameTemplate : str, default is Undefined, optional
        Template describing how dynamic usernames are generated. Username generation template.
    verifyConnection : bool, default is Undefined, optional
        Whether the connection should be verified on initial configuration or not. Specifies if the connection is verified during initial configuration.
    """


    allowedRoles?: [str]

    connectionUrl?: str

    data?: {str:str}

    maxConnectionLifetime?: float

    maxIdleConnections?: float

    maxOpenConnections?: float

    name?: str

    pluginName?: str

    rootRotationStatements?: [str]

    username?: str

    usernameTemplate?: str

    verifyConnection?: bool


schema DatabaseVaultUpboundIoV1alpha1SecretsMountStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


