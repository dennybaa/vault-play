"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecretBackendCert:
    r"""
    SecretBackendCert is the Schema for the SecretBackendCerts API. Generate an PKI certificate.

    Attributes
    ----------
    apiVersion : str, default is "pki.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecretBackendCert", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PkiVaultUpboundIoV1alpha1SecretBackendCertSpec, default is Undefined, required
        spec
    status : PkiVaultUpboundIoV1alpha1SecretBackendCertStatus, default is Undefined, optional
        status
    """


    apiVersion: "pki.vault.upbound.io/v1alpha1" = "pki.vault.upbound.io/v1alpha1"

    kind: "SecretBackendCert" = "SecretBackendCert"

    metadata?: v1.ObjectMeta

    spec: PkiVaultUpboundIoV1alpha1SecretBackendCertSpec

    status?: PkiVaultUpboundIoV1alpha1SecretBackendCertStatus


schema PkiVaultUpboundIoV1alpha1SecretBackendCertSpec:
    r"""
    SecretBackendCertSpec defines the desired state of SecretBackendCert

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : PkiVaultUpboundIoV1alpha1SecretBackendCertSpecForProvider, default is Undefined, required
        for provider
    initProvider : PkiVaultUpboundIoV1alpha1SecretBackendCertSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : PkiVaultUpboundIoV1alpha1SecretBackendCertSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : PkiVaultUpboundIoV1alpha1SecretBackendCertSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : PkiVaultUpboundIoV1alpha1SecretBackendCertSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : PkiVaultUpboundIoV1alpha1SecretBackendCertSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: PkiVaultUpboundIoV1alpha1SecretBackendCertSpecForProvider

    initProvider?: PkiVaultUpboundIoV1alpha1SecretBackendCertSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: PkiVaultUpboundIoV1alpha1SecretBackendCertSpecProviderConfigRef

    providerRef?: PkiVaultUpboundIoV1alpha1SecretBackendCertSpecProviderRef

    publishConnectionDetailsTo?: PkiVaultUpboundIoV1alpha1SecretBackendCertSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: PkiVaultUpboundIoV1alpha1SecretBackendCertSpecWriteConnectionSecretToRef


schema PkiVaultUpboundIoV1alpha1SecretBackendCertSpecForProvider:
    r"""
    pki vault upbound io v1alpha1 secret backend cert spec for provider

    Attributes
    ----------
    altNames : [str], default is Undefined, optional
        List of alternative names List of alternative names.
    autoRenew : bool, default is Undefined, optional
        If set to true, certs will be renewed if the expiration is within min_seconds_remaining. Default false If enabled, a new certificate will be generated if the expiration is within min_seconds_remaining
    backend : str, default is Undefined, optional
        The PKI secret backend the resource belongs to. The PKI secret backend the resource belongs to.
    commonName : str, default is Undefined, optional
        CN of certificate to create CN of the certificate to create.
    excludeCnFromSans : bool, default is Undefined, optional
        Flag to exclude CN from SANs Flag to exclude CN from SANs.
    format : str, default is Undefined, optional
        The format of data The format of data.
    ipSans : [str], default is Undefined, optional
        List of alternative IPs List of alternative IPs.
    issuerRef : str, default is Undefined, optional
        Specifies the default issuer of this request.
    minSecondsRemaining : float, default is Undefined, optional
        Generate a new certificate when the expiration is within this number of seconds, default is 604800 (7 days) Generate a new certificate when the expiration is within this number of seconds
    name : str, default is Undefined, optional
        Name of the role to create the certificate against Name of the role to create the certificate against.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    otherSans : [str], default is Undefined, optional
        List of other SANs List of other SANs.
    privateKeyFormat : str, default is Undefined, optional
        The private key format The private key format.
    revoke : bool, default is Undefined, optional
        If set to true, the certificate will be revoked on resource destruction. Revoke the certificate upon resource destruction.
    ttl : str, default is Undefined, optional
        Time to live Time to live.
    uriSans : [str], default is Undefined, optional
        List of alternative URIs List of alternative URIs.
    userIds : [str], default is Undefined, optional
        List of Subject User IDs List of Subject User IDs.
    """


    altNames?: [str]

    autoRenew?: bool

    backend?: str

    commonName?: str

    excludeCnFromSans?: bool

    format?: str

    ipSans?: [str]

    issuerRef?: str

    minSecondsRemaining?: float

    name?: str

    namespace?: str

    otherSans?: [str]

    privateKeyFormat?: str

    revoke?: bool

    ttl?: str

    uriSans?: [str]

    userIds?: [str]


schema PkiVaultUpboundIoV1alpha1SecretBackendCertSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    altNames : [str], default is Undefined, optional
        List of alternative names List of alternative names.
    autoRenew : bool, default is Undefined, optional
        If set to true, certs will be renewed if the expiration is within min_seconds_remaining. Default false If enabled, a new certificate will be generated if the expiration is within min_seconds_remaining
    backend : str, default is Undefined, optional
        The PKI secret backend the resource belongs to. The PKI secret backend the resource belongs to.
    commonName : str, default is Undefined, optional
        CN of certificate to create CN of the certificate to create.
    excludeCnFromSans : bool, default is Undefined, optional
        Flag to exclude CN from SANs Flag to exclude CN from SANs.
    format : str, default is Undefined, optional
        The format of data The format of data.
    ipSans : [str], default is Undefined, optional
        List of alternative IPs List of alternative IPs.
    issuerRef : str, default is Undefined, optional
        Specifies the default issuer of this request.
    minSecondsRemaining : float, default is Undefined, optional
        Generate a new certificate when the expiration is within this number of seconds, default is 604800 (7 days) Generate a new certificate when the expiration is within this number of seconds
    name : str, default is Undefined, optional
        Name of the role to create the certificate against Name of the role to create the certificate against.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    otherSans : [str], default is Undefined, optional
        List of other SANs List of other SANs.
    privateKeyFormat : str, default is Undefined, optional
        The private key format The private key format.
    revoke : bool, default is Undefined, optional
        If set to true, the certificate will be revoked on resource destruction. Revoke the certificate upon resource destruction.
    ttl : str, default is Undefined, optional
        Time to live Time to live.
    uriSans : [str], default is Undefined, optional
        List of alternative URIs List of alternative URIs.
    userIds : [str], default is Undefined, optional
        List of Subject User IDs List of Subject User IDs.
    """


    altNames?: [str]

    autoRenew?: bool

    backend?: str

    commonName?: str

    excludeCnFromSans?: bool

    format?: str

    ipSans?: [str]

    issuerRef?: str

    minSecondsRemaining?: float

    name?: str

    namespace?: str

    otherSans?: [str]

    privateKeyFormat?: str

    revoke?: bool

    ttl?: str

    uriSans?: [str]

    userIds?: [str]


schema PkiVaultUpboundIoV1alpha1SecretBackendCertSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendCertSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendCertSpecProviderConfigRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendCertSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendCertSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendCertSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendCertSpecProviderRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendCertSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendCertSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : PkiVaultUpboundIoV1alpha1SecretBackendCertSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : PkiVaultUpboundIoV1alpha1SecretBackendCertSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: PkiVaultUpboundIoV1alpha1SecretBackendCertSpecPublishConnectionDetailsToConfigRef

    metadata?: PkiVaultUpboundIoV1alpha1SecretBackendCertSpecPublishConnectionDetailsToMetadata

    name: str


schema PkiVaultUpboundIoV1alpha1SecretBackendCertSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendCertSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendCertSpecPublishConnectionDetailsToConfigRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendCertSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendCertSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema PkiVaultUpboundIoV1alpha1SecretBackendCertSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema PkiVaultUpboundIoV1alpha1SecretBackendCertStatus:
    r"""
    SecretBackendCertStatus defines the observed state of SecretBackendCert.

    Attributes
    ----------
    atProvider : PkiVaultUpboundIoV1alpha1SecretBackendCertStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [PkiVaultUpboundIoV1alpha1SecretBackendCertStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: PkiVaultUpboundIoV1alpha1SecretBackendCertStatusAtProvider

    conditions?: [PkiVaultUpboundIoV1alpha1SecretBackendCertStatusConditionsItems0]


schema PkiVaultUpboundIoV1alpha1SecretBackendCertStatusAtProvider:
    r"""
    pki vault upbound io v1alpha1 secret backend cert status at provider

    Attributes
    ----------
    altNames : [str], default is Undefined, optional
        List of alternative names List of alternative names.
    autoRenew : bool, default is Undefined, optional
        If set to true, certs will be renewed if the expiration is within min_seconds_remaining. Default false If enabled, a new certificate will be generated if the expiration is within min_seconds_remaining
    backend : str, default is Undefined, optional
        The PKI secret backend the resource belongs to. The PKI secret backend the resource belongs to.
    caChain : str, default is Undefined, optional
        The CA chain The CA chain.
    certificate : str, default is Undefined, optional
        The certificate The certicate.
    commonName : str, default is Undefined, optional
        CN of certificate to create CN of the certificate to create.
    excludeCnFromSans : bool, default is Undefined, optional
        Flag to exclude CN from SANs Flag to exclude CN from SANs.
    expiration : float, default is Undefined, optional
        The expiration date of the certificate in unix epoch format The certificate expiration as a Unix-style timestamp.
    format : str, default is Undefined, optional
        The format of data The format of data.
    id : str, default is Undefined, optional
        id
    ipSans : [str], default is Undefined, optional
        List of alternative IPs List of alternative IPs.
    issuerRef : str, default is Undefined, optional
        Specifies the default issuer of this request.
    issuingCa : str, default is Undefined, optional
        The issuing CA The issuing CA.
    minSecondsRemaining : float, default is Undefined, optional
        Generate a new certificate when the expiration is within this number of seconds, default is 604800 (7 days) Generate a new certificate when the expiration is within this number of seconds
    name : str, default is Undefined, optional
        Name of the role to create the certificate against Name of the role to create the certificate against.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    otherSans : [str], default is Undefined, optional
        List of other SANs List of other SANs.
    privateKeyFormat : str, default is Undefined, optional
        The private key format The private key format.
    privateKeyType : str, default is Undefined, optional
        The private key type The private key type.
    renewPending : bool, default is Undefined, optional
        true if the current time (during refresh) is after the start of the early renewal window declared by min_seconds_remaining, and false otherwise; if auto_renew is set to true then the provider will plan to replace the certificate once renewal is pending. Initially false, and then set to true during refresh once the expiration is less than min_seconds_remaining in the future.
    revoke : bool, default is Undefined, optional
        If set to true, the certificate will be revoked on resource destruction. Revoke the certificate upon resource destruction.
    serialNumber : str, default is Undefined, optional
        The serial number The serial number.
    ttl : str, default is Undefined, optional
        Time to live Time to live.
    uriSans : [str], default is Undefined, optional
        List of alternative URIs List of alternative URIs.
    userIds : [str], default is Undefined, optional
        List of Subject User IDs List of Subject User IDs.
    """


    altNames?: [str]

    autoRenew?: bool

    backend?: str

    caChain?: str

    certificate?: str

    commonName?: str

    excludeCnFromSans?: bool

    expiration?: float

    format?: str

    id?: str

    ipSans?: [str]

    issuerRef?: str

    issuingCa?: str

    minSecondsRemaining?: float

    name?: str

    namespace?: str

    otherSans?: [str]

    privateKeyFormat?: str

    privateKeyType?: str

    renewPending?: bool

    revoke?: bool

    serialNumber?: str

    ttl?: str

    uriSans?: [str]

    userIds?: [str]


schema PkiVaultUpboundIoV1alpha1SecretBackendCertStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


