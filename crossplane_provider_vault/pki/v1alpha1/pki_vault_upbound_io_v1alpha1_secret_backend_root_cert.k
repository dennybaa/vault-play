"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecretBackendRootCert:
    r"""
    SecretBackendRootCert is the Schema for the SecretBackendRootCerts API. Generate root.

    Attributes
    ----------
    apiVersion : str, default is "pki.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecretBackendRootCert", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpec, default is Undefined, required
        spec
    status : PkiVaultUpboundIoV1alpha1SecretBackendRootCertStatus, default is Undefined, optional
        status
    """


    apiVersion: "pki.vault.upbound.io/v1alpha1" = "pki.vault.upbound.io/v1alpha1"

    kind: "SecretBackendRootCert" = "SecretBackendRootCert"

    metadata?: v1.ObjectMeta

    spec: PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpec

    status?: PkiVaultUpboundIoV1alpha1SecretBackendRootCertStatus


schema PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpec:
    r"""
    SecretBackendRootCertSpec defines the desired state of SecretBackendRootCert

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecForProvider, default is Undefined, required
        for provider
    initProvider : PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecForProvider

    initProvider?: PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecProviderConfigRef

    providerRef?: PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecProviderRef

    publishConnectionDetailsTo?: PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecWriteConnectionSecretToRef


schema PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecForProvider:
    r"""
    pki vault upbound io v1alpha1 secret backend root cert spec for provider

    Attributes
    ----------
    altNames : [str], default is Undefined, optional
        List of alternative names List of alternative names.
    backend : str, default is Undefined, optional
        The PKI secret backend the resource belongs to. The PKI secret backend the resource belongs to.
    commonName : str, default is Undefined, optional
        CN of intermediate to create CN of root to create.
    country : str, default is Undefined, optional
        The country The country.
    excludeCnFromSans : bool, default is Undefined, optional
        Flag to exclude CN from SANs Flag to exclude CN from SANs.
    format : str, default is Undefined, optional
        The format of data The format of data.
    ipSans : [str], default is Undefined, optional
        List of alternative IPs List of alternative IPs.
    issuerName : str, default is Undefined, optional
        Provides a name to the specified issuer. The name must be unique across all issuers and not be the reserved value default Provides a name to the specified issuer. The name must be unique across all issuers and not be the reserved value 'default'.
    keyBits : float, default is Undefined, optional
        The number of bits to use The number of bits to use.
    keyName : str, default is Undefined, optional
        When a new key is created with this request, optionally specifies the name for this. The global ref default may not be used as a name. When a new key is created with this request, optionally specifies the name for this.
    keyRef : str, default is Undefined, optional
        Specifies the key (either default, by name, or by identifier) to use for generating this request. Only suitable for type=existing requests. Specifies the key to use for generating this request.
    keyType : str, default is Undefined, optional
        The desired key type The desired key type.
    locality : str, default is Undefined, optional
        The locality The locality.
    managedKeyId : str, default is Undefined, optional
        The ID of the previously configured managed key. This field is required if type is kms and it conflicts with managed_key_name The ID of the previously configured managed key.
    managedKeyName : str, default is Undefined, optional
        The name of the previously configured managed key. This field is required if type is kms  and it conflicts with managed_key_id The name of the previously configured managed key.
    maxPathLength : float, default is Undefined, optional
        The maximum path length to encode in the generated certificate The maximum path length to encode in the generated certificate.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    organization : str, default is Undefined, optional
        The organization The organization.
    otherSans : [str], default is Undefined, optional
        List of other SANs List of other SANs.
    ou : str, default is Undefined, optional
        The organization unit The organization unit.
    permittedDnsDomains : [str], default is Undefined, optional
        List of domains for which certificates are allowed to be issued List of domains for which certificates are allowed to be issued.
    postalCode : str, default is Undefined, optional
        The postal code The postal code.
    privateKeyFormat : str, default is Undefined, optional
        The private key format The private key format.
    province : str, default is Undefined, optional
        The province The province.
    streetAddress : str, default is Undefined, optional
        The street address The street address.
    ttl : str, default is Undefined, optional
        Time to live Time to live.
    $type : str, default is Undefined, optional
        Type of intermediate to create. Must be either "exported", "internal" or "kms" Type of root to create. Must be either "existing", "exported", "internal" or "kms"
    uriSans : [str], default is Undefined, optional
        List of alternative URIs List of alternative URIs.
    """


    altNames?: [str]

    backend?: str

    commonName?: str

    country?: str

    excludeCnFromSans?: bool

    format?: str

    ipSans?: [str]

    issuerName?: str

    keyBits?: float

    keyName?: str

    keyRef?: str

    keyType?: str

    locality?: str

    managedKeyId?: str

    managedKeyName?: str

    maxPathLength?: float

    namespace?: str

    organization?: str

    otherSans?: [str]

    ou?: str

    permittedDnsDomains?: [str]

    postalCode?: str

    privateKeyFormat?: str

    province?: str

    streetAddress?: str

    ttl?: str

    $type?: str

    uriSans?: [str]


schema PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    altNames : [str], default is Undefined, optional
        List of alternative names List of alternative names.
    backend : str, default is Undefined, optional
        The PKI secret backend the resource belongs to. The PKI secret backend the resource belongs to.
    commonName : str, default is Undefined, optional
        CN of intermediate to create CN of root to create.
    country : str, default is Undefined, optional
        The country The country.
    excludeCnFromSans : bool, default is Undefined, optional
        Flag to exclude CN from SANs Flag to exclude CN from SANs.
    format : str, default is Undefined, optional
        The format of data The format of data.
    ipSans : [str], default is Undefined, optional
        List of alternative IPs List of alternative IPs.
    issuerName : str, default is Undefined, optional
        Provides a name to the specified issuer. The name must be unique across all issuers and not be the reserved value default Provides a name to the specified issuer. The name must be unique across all issuers and not be the reserved value 'default'.
    keyBits : float, default is Undefined, optional
        The number of bits to use The number of bits to use.
    keyName : str, default is Undefined, optional
        When a new key is created with this request, optionally specifies the name for this. The global ref default may not be used as a name. When a new key is created with this request, optionally specifies the name for this.
    keyRef : str, default is Undefined, optional
        Specifies the key (either default, by name, or by identifier) to use for generating this request. Only suitable for type=existing requests. Specifies the key to use for generating this request.
    keyType : str, default is Undefined, optional
        The desired key type The desired key type.
    locality : str, default is Undefined, optional
        The locality The locality.
    managedKeyId : str, default is Undefined, optional
        The ID of the previously configured managed key. This field is required if type is kms and it conflicts with managed_key_name The ID of the previously configured managed key.
    managedKeyName : str, default is Undefined, optional
        The name of the previously configured managed key. This field is required if type is kms  and it conflicts with managed_key_id The name of the previously configured managed key.
    maxPathLength : float, default is Undefined, optional
        The maximum path length to encode in the generated certificate The maximum path length to encode in the generated certificate.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    organization : str, default is Undefined, optional
        The organization The organization.
    otherSans : [str], default is Undefined, optional
        List of other SANs List of other SANs.
    ou : str, default is Undefined, optional
        The organization unit The organization unit.
    permittedDnsDomains : [str], default is Undefined, optional
        List of domains for which certificates are allowed to be issued List of domains for which certificates are allowed to be issued.
    postalCode : str, default is Undefined, optional
        The postal code The postal code.
    privateKeyFormat : str, default is Undefined, optional
        The private key format The private key format.
    province : str, default is Undefined, optional
        The province The province.
    streetAddress : str, default is Undefined, optional
        The street address The street address.
    ttl : str, default is Undefined, optional
        Time to live Time to live.
    $type : str, default is Undefined, optional
        Type of intermediate to create. Must be either "exported", "internal" or "kms" Type of root to create. Must be either "existing", "exported", "internal" or "kms"
    uriSans : [str], default is Undefined, optional
        List of alternative URIs List of alternative URIs.
    """


    altNames?: [str]

    backend?: str

    commonName?: str

    country?: str

    excludeCnFromSans?: bool

    format?: str

    ipSans?: [str]

    issuerName?: str

    keyBits?: float

    keyName?: str

    keyRef?: str

    keyType?: str

    locality?: str

    managedKeyId?: str

    managedKeyName?: str

    maxPathLength?: float

    namespace?: str

    organization?: str

    otherSans?: [str]

    ou?: str

    permittedDnsDomains?: [str]

    postalCode?: str

    privateKeyFormat?: str

    province?: str

    streetAddress?: str

    ttl?: str

    $type?: str

    uriSans?: [str]


schema PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecProviderConfigRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecProviderRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecPublishConnectionDetailsToConfigRef

    metadata?: PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecPublishConnectionDetailsToMetadata

    name: str


schema PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecPublishConnectionDetailsToConfigRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema PkiVaultUpboundIoV1alpha1SecretBackendRootCertSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema PkiVaultUpboundIoV1alpha1SecretBackendRootCertStatus:
    r"""
    SecretBackendRootCertStatus defines the observed state of SecretBackendRootCert.

    Attributes
    ----------
    atProvider : PkiVaultUpboundIoV1alpha1SecretBackendRootCertStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [PkiVaultUpboundIoV1alpha1SecretBackendRootCertStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: PkiVaultUpboundIoV1alpha1SecretBackendRootCertStatusAtProvider

    conditions?: [PkiVaultUpboundIoV1alpha1SecretBackendRootCertStatusConditionsItems0]


schema PkiVaultUpboundIoV1alpha1SecretBackendRootCertStatusAtProvider:
    r"""
    pki vault upbound io v1alpha1 secret backend root cert status at provider

    Attributes
    ----------
    altNames : [str], default is Undefined, optional
        List of alternative names List of alternative names.
    backend : str, default is Undefined, optional
        The PKI secret backend the resource belongs to. The PKI secret backend the resource belongs to.
    certificate : str, default is Undefined, optional
        The certificate. The certificate.
    commonName : str, default is Undefined, optional
        CN of intermediate to create CN of root to create.
    country : str, default is Undefined, optional
        The country The country.
    excludeCnFromSans : bool, default is Undefined, optional
        Flag to exclude CN from SANs Flag to exclude CN from SANs.
    format : str, default is Undefined, optional
        The format of data The format of data.
    id : str, default is Undefined, optional
        id
    ipSans : [str], default is Undefined, optional
        List of alternative IPs List of alternative IPs.
    issuerId : str, default is Undefined, optional
        The ID of the generated issuer. The ID of the generated issuer.
    issuerName : str, default is Undefined, optional
        Provides a name to the specified issuer. The name must be unique across all issuers and not be the reserved value default Provides a name to the specified issuer. The name must be unique across all issuers and not be the reserved value 'default'.
    issuingCa : str, default is Undefined, optional
        The issuing CA certificate. The issuing CA.
    keyBits : float, default is Undefined, optional
        The number of bits to use The number of bits to use.
    keyId : str, default is Undefined, optional
        The ID of the generated key. The ID of the generated key.
    keyName : str, default is Undefined, optional
        When a new key is created with this request, optionally specifies the name for this. The global ref default may not be used as a name. When a new key is created with this request, optionally specifies the name for this.
    keyRef : str, default is Undefined, optional
        Specifies the key (either default, by name, or by identifier) to use for generating this request. Only suitable for type=existing requests. Specifies the key to use for generating this request.
    keyType : str, default is Undefined, optional
        The desired key type The desired key type.
    locality : str, default is Undefined, optional
        The locality The locality.
    managedKeyId : str, default is Undefined, optional
        The ID of the previously configured managed key. This field is required if type is kms and it conflicts with managed_key_name The ID of the previously configured managed key.
    managedKeyName : str, default is Undefined, optional
        The name of the previously configured managed key. This field is required if type is kms  and it conflicts with managed_key_id The name of the previously configured managed key.
    maxPathLength : float, default is Undefined, optional
        The maximum path length to encode in the generated certificate The maximum path length to encode in the generated certificate.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    organization : str, default is Undefined, optional
        The organization The organization.
    otherSans : [str], default is Undefined, optional
        List of other SANs List of other SANs.
    ou : str, default is Undefined, optional
        The organization unit The organization unit.
    permittedDnsDomains : [str], default is Undefined, optional
        List of domains for which certificates are allowed to be issued List of domains for which certificates are allowed to be issued.
    postalCode : str, default is Undefined, optional
        The postal code The postal code.
    privateKeyFormat : str, default is Undefined, optional
        The private key format The private key format.
    province : str, default is Undefined, optional
        The province The province.
    serial : str, default is Undefined, optional
        Deprecated, use serial_number instead. The serial number.
    serialNumber : str, default is Undefined, optional
        The certificate's serial number, hex formatted. The certificate's serial number, hex formatted.
    streetAddress : str, default is Undefined, optional
        The street address The street address.
    ttl : str, default is Undefined, optional
        Time to live Time to live.
    $type : str, default is Undefined, optional
        Type of intermediate to create. Must be either "exported", "internal" or "kms" Type of root to create. Must be either "existing", "exported", "internal" or "kms"
    uriSans : [str], default is Undefined, optional
        List of alternative URIs List of alternative URIs.
    """


    altNames?: [str]

    backend?: str

    certificate?: str

    commonName?: str

    country?: str

    excludeCnFromSans?: bool

    format?: str

    id?: str

    ipSans?: [str]

    issuerId?: str

    issuerName?: str

    issuingCa?: str

    keyBits?: float

    keyId?: str

    keyName?: str

    keyRef?: str

    keyType?: str

    locality?: str

    managedKeyId?: str

    managedKeyName?: str

    maxPathLength?: float

    namespace?: str

    organization?: str

    otherSans?: [str]

    ou?: str

    permittedDnsDomains?: [str]

    postalCode?: str

    privateKeyFormat?: str

    province?: str

    serial?: str

    serialNumber?: str

    streetAddress?: str

    ttl?: str

    $type?: str

    uriSans?: [str]


schema PkiVaultUpboundIoV1alpha1SecretBackendRootCertStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


