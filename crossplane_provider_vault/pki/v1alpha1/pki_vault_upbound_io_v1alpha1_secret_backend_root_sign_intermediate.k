"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecretBackendRootSignIntermediate:
    r"""
    SecretBackendRootSignIntermediate is the Schema for the SecretBackendRootSignIntermediates API. <no value>

    Attributes
    ----------
    apiVersion : str, default is "pki.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecretBackendRootSignIntermediate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpec, default is Undefined, required
        spec
    status : PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateStatus, default is Undefined, optional
        status
    """


    apiVersion: "pki.vault.upbound.io/v1alpha1" = "pki.vault.upbound.io/v1alpha1"

    kind: "SecretBackendRootSignIntermediate" = "SecretBackendRootSignIntermediate"

    metadata?: v1.ObjectMeta

    spec: PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpec

    status?: PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateStatus


schema PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpec:
    r"""
    SecretBackendRootSignIntermediateSpec defines the desired state of SecretBackendRootSignIntermediate

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecForProvider, default is Undefined, required
        for provider
    initProvider : PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecForProvider

    initProvider?: PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecProviderConfigRef

    providerRef?: PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecProviderRef

    publishConnectionDetailsTo?: PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecWriteConnectionSecretToRef


schema PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecForProvider:
    r"""
    pki vault upbound io v1alpha1 secret backend root sign intermediate spec for provider

    Attributes
    ----------
    altNames : [str], default is Undefined, optional
        List of alternative names.
    backend : str, default is Undefined, optional
        The PKI secret backend the resource belongs to.
    commonName : str, default is Undefined, optional
        CN of intermediate to create.
    country : str, default is Undefined, optional
        The country.
    csr : str, default is Undefined, optional
        The CSR.
    excludeCnFromSans : bool, default is Undefined, optional
        Flag to exclude CN from SANs.
    format : str, default is Undefined, optional
        The format of data.
    ipSans : [str], default is Undefined, optional
        List of alternative IPs.
    issuerRef : str, default is Undefined, optional
        Specifies the default issuer of this request.
    locality : str, default is Undefined, optional
        The locality.
    maxPathLength : float, default is Undefined, optional
        The maximum path length to encode in the generated certificate.
    namespace : str, default is Undefined, optional
        Target namespace. (requires Enterprise)
    organization : str, default is Undefined, optional
        The organization.
    otherSans : [str], default is Undefined, optional
        List of other SANs.
    ou : str, default is Undefined, optional
        The organization unit.
    permittedDnsDomains : [str], default is Undefined, optional
        List of domains for which certificates are allowed to be issued.
    postalCode : str, default is Undefined, optional
        The postal code.
    province : str, default is Undefined, optional
        The province.
    revoke : bool, default is Undefined, optional
        Revoke the certificate upon resource destruction.
    streetAddress : str, default is Undefined, optional
        The street address.
    ttl : str, default is Undefined, optional
        Time to live.
    uriSans : [str], default is Undefined, optional
        List of alternative URIs.
    useCsrValues : bool, default is Undefined, optional
        Preserve CSR values.
    """


    altNames?: [str]

    backend?: str

    commonName?: str

    country?: str

    csr?: str

    excludeCnFromSans?: bool

    format?: str

    ipSans?: [str]

    issuerRef?: str

    locality?: str

    maxPathLength?: float

    namespace?: str

    organization?: str

    otherSans?: [str]

    ou?: str

    permittedDnsDomains?: [str]

    postalCode?: str

    province?: str

    revoke?: bool

    streetAddress?: str

    ttl?: str

    uriSans?: [str]

    useCsrValues?: bool


schema PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    altNames : [str], default is Undefined, optional
        List of alternative names.
    backend : str, default is Undefined, optional
        The PKI secret backend the resource belongs to.
    commonName : str, default is Undefined, optional
        CN of intermediate to create.
    country : str, default is Undefined, optional
        The country.
    csr : str, default is Undefined, optional
        The CSR.
    excludeCnFromSans : bool, default is Undefined, optional
        Flag to exclude CN from SANs.
    format : str, default is Undefined, optional
        The format of data.
    ipSans : [str], default is Undefined, optional
        List of alternative IPs.
    issuerRef : str, default is Undefined, optional
        Specifies the default issuer of this request.
    locality : str, default is Undefined, optional
        The locality.
    maxPathLength : float, default is Undefined, optional
        The maximum path length to encode in the generated certificate.
    namespace : str, default is Undefined, optional
        Target namespace. (requires Enterprise)
    organization : str, default is Undefined, optional
        The organization.
    otherSans : [str], default is Undefined, optional
        List of other SANs.
    ou : str, default is Undefined, optional
        The organization unit.
    permittedDnsDomains : [str], default is Undefined, optional
        List of domains for which certificates are allowed to be issued.
    postalCode : str, default is Undefined, optional
        The postal code.
    province : str, default is Undefined, optional
        The province.
    revoke : bool, default is Undefined, optional
        Revoke the certificate upon resource destruction.
    streetAddress : str, default is Undefined, optional
        The street address.
    ttl : str, default is Undefined, optional
        Time to live.
    uriSans : [str], default is Undefined, optional
        List of alternative URIs.
    useCsrValues : bool, default is Undefined, optional
        Preserve CSR values.
    """


    altNames?: [str]

    backend?: str

    commonName?: str

    country?: str

    csr?: str

    excludeCnFromSans?: bool

    format?: str

    ipSans?: [str]

    issuerRef?: str

    locality?: str

    maxPathLength?: float

    namespace?: str

    organization?: str

    otherSans?: [str]

    ou?: str

    permittedDnsDomains?: [str]

    postalCode?: str

    province?: str

    revoke?: bool

    streetAddress?: str

    ttl?: str

    uriSans?: [str]

    useCsrValues?: bool


schema PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecProviderConfigRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecProviderRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecPublishConnectionDetailsToConfigRef

    metadata?: PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecPublishConnectionDetailsToMetadata

    name: str


schema PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecPublishConnectionDetailsToConfigRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateStatus:
    r"""
    SecretBackendRootSignIntermediateStatus defines the observed state of SecretBackendRootSignIntermediate.

    Attributes
    ----------
    atProvider : PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateStatusAtProvider

    conditions?: [PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateStatusConditionsItems0]


schema PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateStatusAtProvider:
    r"""
    pki vault upbound io v1alpha1 secret backend root sign intermediate status at provider

    Attributes
    ----------
    altNames : [str], default is Undefined, optional
        List of alternative names.
    backend : str, default is Undefined, optional
        The PKI secret backend the resource belongs to.
    caChain : [str], default is Undefined, optional
        The CA chain as a list of format specific certificates
    certificate : str, default is Undefined, optional
        The signed intermediate CA certificate.
    certificateBundle : str, default is Undefined, optional
        The concatenation of the intermediate and issuing CA certificates (PEM encoded). Requires the format to be set to any of: pem, pem_bundle. The value will be empty for all other formats.
    commonName : str, default is Undefined, optional
        CN of intermediate to create.
    country : str, default is Undefined, optional
        The country.
    csr : str, default is Undefined, optional
        The CSR.
    excludeCnFromSans : bool, default is Undefined, optional
        Flag to exclude CN from SANs.
    format : str, default is Undefined, optional
        The format of data.
    id : str, default is Undefined, optional
        id
    ipSans : [str], default is Undefined, optional
        List of alternative IPs.
    issuerRef : str, default is Undefined, optional
        Specifies the default issuer of this request.
    issuingCa : str, default is Undefined, optional
        The issuing CA certificate.
    locality : str, default is Undefined, optional
        The locality.
    maxPathLength : float, default is Undefined, optional
        The maximum path length to encode in the generated certificate.
    namespace : str, default is Undefined, optional
        Target namespace. (requires Enterprise)
    organization : str, default is Undefined, optional
        The organization.
    otherSans : [str], default is Undefined, optional
        List of other SANs.
    ou : str, default is Undefined, optional
        The organization unit.
    permittedDnsDomains : [str], default is Undefined, optional
        List of domains for which certificates are allowed to be issued.
    postalCode : str, default is Undefined, optional
        The postal code.
    province : str, default is Undefined, optional
        The province.
    revoke : bool, default is Undefined, optional
        Revoke the certificate upon resource destruction.
    serial : str, default is Undefined, optional
        The serial number.
    serialNumber : str, default is Undefined, optional
        The certificate's serial number, hex formatted.
    streetAddress : str, default is Undefined, optional
        The street address.
    ttl : str, default is Undefined, optional
        Time to live.
    uriSans : [str], default is Undefined, optional
        List of alternative URIs.
    useCsrValues : bool, default is Undefined, optional
        Preserve CSR values.
    """


    altNames?: [str]

    backend?: str

    caChain?: [str]

    certificate?: str

    certificateBundle?: str

    commonName?: str

    country?: str

    csr?: str

    excludeCnFromSans?: bool

    format?: str

    id?: str

    ipSans?: [str]

    issuerRef?: str

    issuingCa?: str

    locality?: str

    maxPathLength?: float

    namespace?: str

    organization?: str

    otherSans?: [str]

    ou?: str

    permittedDnsDomains?: [str]

    postalCode?: str

    province?: str

    revoke?: bool

    serial?: str

    serialNumber?: str

    streetAddress?: str

    ttl?: str

    uriSans?: [str]

    useCsrValues?: bool


schema PkiVaultUpboundIoV1alpha1SecretBackendRootSignIntermediateStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


