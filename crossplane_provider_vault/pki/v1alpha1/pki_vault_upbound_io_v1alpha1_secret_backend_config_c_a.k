"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecretBackendConfigCA:
    r"""
    SecretBackendConfigCA is the Schema for the SecretBackendConfigCAs API. Submit the CA information to PKI.

    Attributes
    ----------
    apiVersion : str, default is "pki.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecretBackendConfigCA", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpec, default is Undefined, required
        spec
    status : PkiVaultUpboundIoV1alpha1SecretBackendConfigCAStatus, default is Undefined, optional
        status
    """


    apiVersion: "pki.vault.upbound.io/v1alpha1" = "pki.vault.upbound.io/v1alpha1"

    kind: "SecretBackendConfigCA" = "SecretBackendConfigCA"

    metadata?: v1.ObjectMeta

    spec: PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpec

    status?: PkiVaultUpboundIoV1alpha1SecretBackendConfigCAStatus


schema PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpec:
    r"""
    SecretBackendConfigCASpec defines the desired state of SecretBackendConfigCA

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecForProvider, default is Undefined, required
        for provider
    initProvider : PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecForProvider

    initProvider?: PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecProviderConfigRef

    providerRef?: PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecProviderRef

    publishConnectionDetailsTo?: PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecWriteConnectionSecretToRef


schema PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecForProvider:
    r"""
    pki vault upbound io v1alpha1 secret backend config c a spec for provider

    Attributes
    ----------
    backend : str, default is Undefined, optional
        The PKI secret backend the resource belongs to. The PKI secret backend the resource belongs to.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    pemBundleSecretRef : PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecForProviderPemBundleSecretRef, default is Undefined, optional
        pem bundle secret ref
    """


    backend?: str

    namespace?: str

    pemBundleSecretRef?: PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecForProviderPemBundleSecretRef


schema PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecForProviderPemBundleSecretRef:
    r"""
    The key and certificate PEM bundle The key and certificate PEM bundle.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    backend : str, default is Undefined, optional
        The PKI secret backend the resource belongs to. The PKI secret backend the resource belongs to.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    """


    backend?: str

    namespace?: str


schema PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecProviderConfigRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecProviderRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecPublishConnectionDetailsToConfigRef

    metadata?: PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecPublishConnectionDetailsToMetadata

    name: str


schema PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecPublishConnectionDetailsToConfigRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema PkiVaultUpboundIoV1alpha1SecretBackendConfigCASpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema PkiVaultUpboundIoV1alpha1SecretBackendConfigCAStatus:
    r"""
    SecretBackendConfigCAStatus defines the observed state of SecretBackendConfigCA.

    Attributes
    ----------
    atProvider : PkiVaultUpboundIoV1alpha1SecretBackendConfigCAStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [PkiVaultUpboundIoV1alpha1SecretBackendConfigCAStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: PkiVaultUpboundIoV1alpha1SecretBackendConfigCAStatusAtProvider

    conditions?: [PkiVaultUpboundIoV1alpha1SecretBackendConfigCAStatusConditionsItems0]


schema PkiVaultUpboundIoV1alpha1SecretBackendConfigCAStatusAtProvider:
    r"""
    pki vault upbound io v1alpha1 secret backend config c a status at provider

    Attributes
    ----------
    backend : str, default is Undefined, optional
        The PKI secret backend the resource belongs to. The PKI secret backend the resource belongs to.
    id : str, default is Undefined, optional
        id
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    """


    backend?: str

    id?: str

    namespace?: str


schema PkiVaultUpboundIoV1alpha1SecretBackendConfigCAStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


