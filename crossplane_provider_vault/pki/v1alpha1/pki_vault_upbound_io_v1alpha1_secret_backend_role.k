"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecretBackendRole:
    r"""
    SecretBackendRole is the Schema for the SecretBackendRoles API. Create a role on an PKI Secret Backend for Vault.

    Attributes
    ----------
    apiVersion : str, default is "pki.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecretBackendRole", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PkiVaultUpboundIoV1alpha1SecretBackendRoleSpec, default is Undefined, required
        spec
    status : PkiVaultUpboundIoV1alpha1SecretBackendRoleStatus, default is Undefined, optional
        status
    """


    apiVersion: "pki.vault.upbound.io/v1alpha1" = "pki.vault.upbound.io/v1alpha1"

    kind: "SecretBackendRole" = "SecretBackendRole"

    metadata?: v1.ObjectMeta

    spec: PkiVaultUpboundIoV1alpha1SecretBackendRoleSpec

    status?: PkiVaultUpboundIoV1alpha1SecretBackendRoleStatus


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleSpec:
    r"""
    SecretBackendRoleSpec defines the desired state of SecretBackendRole

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecForProvider, default is Undefined, required
        for provider
    initProvider : PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecForProvider

    initProvider?: PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRef

    providerRef?: PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRef

    publishConnectionDetailsTo?: PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecWriteConnectionSecretToRef


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecForProvider:
    r"""
    pki vault upbound io v1alpha1 secret backend role spec for provider

    Attributes
    ----------
    allowAnyName : bool, default is Undefined, optional
        Flag to allow any name Flag to allow any name
    allowBareDomains : bool, default is Undefined, optional
        Flag to allow certificates matching the actual domain Flag to allow certificates matching the actual domain.
    allowGlobDomains : bool, default is Undefined, optional
        Flag to allow names containing glob patterns. Flag to allow names containing glob patterns.
    allowIpSans : bool, default is Undefined, optional
        Flag to allow IP SANs Flag to allow IP SANs
    allowLocalhost : bool, default is Undefined, optional
        Flag to allow certificates for localhost Flag to allow certificates for localhost.
    allowSubdomains : bool, default is Undefined, optional
        Flag to allow certificates matching subdomains Flag to allow certificates matching subdomains.
    allowWildcardCertificates : bool, default is Undefined, optional
        Flag to allow wildcard certificates. Flag to allow wildcard certificates
    allowedDomains : [str], default is Undefined, optional
        List of allowed domains for certificates The domains of the role.
    allowedDomainsTemplate : bool, default is Undefined, optional
        Flag, if set, allowed_domains can be specified using identity template expressions such as {{identity.entity.aliases.<mount accessor>.name}}. Flag to indicate that `allowed_domains` specifies a template expression (e.g. {{identity.entity.aliases.<mount accessor>.name}})
    allowedOtherSans : [str], default is Undefined, optional
        Defines allowed custom SANs Defines allowed custom SANs
    allowedSerialNumbers : [str], default is Undefined, optional
        An array of allowed serial numbers to put in Subject Defines allowed Subject serial numbers.
    allowedUriSans : [str], default is Undefined, optional
        Defines allowed URI SANs Defines allowed URI SANs
    allowedUriSansTemplate : bool, default is Undefined, optional
        Flag, if set, allowed_uri_sans can be specified using identity template expressions such as {{identity.entity.aliases.<mount accessor>.name}}. Flag to indicate that `allowed_uri_sans` specifies a template expression (e.g. {{identity.entity.aliases.<mount accessor>.name}})
    allowedUserIds : [str], default is Undefined, optional
        Defines allowed User IDs The allowed User ID's.
    backend : str, default is Undefined, optional
        The path the PKI secret backend is mounted at, with no leading or trailing /s. The path of the PKI secret backend the resource belongs to.
    basicConstraintsValidForNonCa : bool, default is Undefined, optional
        Flag to mark basic constraints valid when issuing non-CA certificates Flag to mark basic constraints valid when issuing non-CA certificates.
    clientFlag : bool, default is Undefined, optional
        Flag to specify certificates for client use Flag to specify certificates for client use.
    codeSigningFlag : bool, default is Undefined, optional
        Flag to specify certificates for code signing use Flag to specify certificates for code signing use.
    country : [str], default is Undefined, optional
        The country of generated certificates The country of generated certificates.
    emailProtectionFlag : bool, default is Undefined, optional
        Flag to specify certificates for email protection use Flag to specify certificates for email protection use.
    enforceHostnames : bool, default is Undefined, optional
        Flag to allow only valid host names Flag to allow only valid host names
    extKeyUsage : [str], default is Undefined, optional
        Specify the allowed extended key usage constraint on issued certificates Specify the allowed extended key usage constraint on issued certificates.
    extKeyUsageOids : [str], default is Undefined, optional
        Specify the allowed extended key usage OIDs constraint on issued certificates A list of extended key usage OIDs.
    generateLease : bool, default is Undefined, optional
        Flag to generate leases with certificates Flag to generate leases with certificates.
    issuerRef : str, default is Undefined, optional
        Specifies the default issuer of this request. May be the value default, a name, or an issuer ID. Use ACLs to prevent access to the /pki/issuer/:issuer_ref/{issue,sign}/:name paths to prevent users overriding the role's issuer_ref value. Specifies the default issuer of this request.
    keyBits : float, default is Undefined, optional
        The number of bits of generated keys The number of bits of generated keys.
    keyType : str, default is Undefined, optional
        The generated key type, choices: rsa, ec, ed25519, any Defaults to rsa The generated key type.
    keyUsage : [str], default is Undefined, optional
        Specify the allowed key usage constraint on issued certificates. Defaults to ["DigitalSignature", "KeyAgreement", "KeyEncipherment"]). To specify no default key usage constraints, set this to an empty list []. Specify the allowed key usage constraint on issued certificates.
    locality : [str], default is Undefined, optional
        The locality of generated certificates The locality of generated certificates.
    maxTtl : str, default is Undefined, optional
        The maximum lease TTL, in seconds, for the role. The maximum TTL.
    name : str, default is Undefined, optional
        The name to identify this role within the backend. Must be unique within the backend. Unique name for the role.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    noStore : bool, default is Undefined, optional
        Flag to not store certificates in the storage backend Flag to not store certificates in the storage backend.
    notBeforeDuration : str, default is Undefined, optional
        Specifies the duration by which to backdate the NotBefore property. Specifies the duration by which to backdate the NotBefore property.
    organization : [str], default is Undefined, optional
        The organization of generated certificates The organization of generated certificates.
    ou : [str], default is Undefined, optional
        The organization unit of generated certificates The organization unit of generated certificates.
    policyIdentifier : [PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecForProviderPolicyIdentifierItems0], default is Undefined, optional
        (Vault 1.11+ only) A block for specifying policy identifers. The policy_identifier block can be repeated, and supports the following arguments: Policy identifier block; can only be used with Vault 1.11+
    policyIdentifiers : [str], default is Undefined, optional
        Specify the list of allowed policies OIDs. Use with Vault 1.10 or before. For Vault 1.11+, use policy_identifier blocks instead Specify the list of allowed policies OIDs.
    postalCode : [str], default is Undefined, optional
        The postal code of generated certificates The postal code of generated certificates.
    province : [str], default is Undefined, optional
        The province of generated certificates The province of generated certificates.
    requireCn : bool, default is Undefined, optional
        Flag to force CN usage Flag to force CN usage.
    serverFlag : bool, default is Undefined, optional
        Flag to specify certificates for server use Flag to specify certificates for server use.
    streetAddress : [str], default is Undefined, optional
        The street address of generated certificates The street address of generated certificates.
    ttl : str, default is Undefined, optional
        The TTL, in seconds, for any certificate issued against this role. The TTL.
    useCsrCommonName : bool, default is Undefined, optional
        Flag to use the CN in the CSR Flag to use the CN in the CSR.
    useCsrSans : bool, default is Undefined, optional
        Flag to use the SANs in the CSR Flag to use the SANs in the CSR.
    """


    allowAnyName?: bool

    allowBareDomains?: bool

    allowGlobDomains?: bool

    allowIpSans?: bool

    allowLocalhost?: bool

    allowSubdomains?: bool

    allowWildcardCertificates?: bool

    allowedDomains?: [str]

    allowedDomainsTemplate?: bool

    allowedOtherSans?: [str]

    allowedSerialNumbers?: [str]

    allowedUriSans?: [str]

    allowedUriSansTemplate?: bool

    allowedUserIds?: [str]

    backend?: str

    basicConstraintsValidForNonCa?: bool

    clientFlag?: bool

    codeSigningFlag?: bool

    country?: [str]

    emailProtectionFlag?: bool

    enforceHostnames?: bool

    extKeyUsage?: [str]

    extKeyUsageOids?: [str]

    generateLease?: bool

    issuerRef?: str

    keyBits?: float

    keyType?: str

    keyUsage?: [str]

    locality?: [str]

    maxTtl?: str

    name?: str

    namespace?: str

    noStore?: bool

    notBeforeDuration?: str

    organization?: [str]

    ou?: [str]

    policyIdentifier?: [PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecForProviderPolicyIdentifierItems0]

    policyIdentifiers?: [str]

    postalCode?: [str]

    province?: [str]

    requireCn?: bool

    serverFlag?: bool

    streetAddress?: [str]

    ttl?: str

    useCsrCommonName?: bool

    useCsrSans?: bool


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecForProviderPolicyIdentifierItems0:
    r"""
    pki vault upbound io v1alpha1 secret backend role spec for provider policy identifier items0

    Attributes
    ----------
    cps : str, default is Undefined, optional
        The URL of the CPS for the policy identifier Optional CPS URL
    notice : str, default is Undefined, optional
        A notice for the policy identifier Optional notice
    oid : str, default is Undefined, optional
        The OID for the policy identifier OID
    """


    cps?: str

    notice?: str

    oid?: str


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    allowAnyName : bool, default is Undefined, optional
        Flag to allow any name Flag to allow any name
    allowBareDomains : bool, default is Undefined, optional
        Flag to allow certificates matching the actual domain Flag to allow certificates matching the actual domain.
    allowGlobDomains : bool, default is Undefined, optional
        Flag to allow names containing glob patterns. Flag to allow names containing glob patterns.
    allowIpSans : bool, default is Undefined, optional
        Flag to allow IP SANs Flag to allow IP SANs
    allowLocalhost : bool, default is Undefined, optional
        Flag to allow certificates for localhost Flag to allow certificates for localhost.
    allowSubdomains : bool, default is Undefined, optional
        Flag to allow certificates matching subdomains Flag to allow certificates matching subdomains.
    allowWildcardCertificates : bool, default is Undefined, optional
        Flag to allow wildcard certificates. Flag to allow wildcard certificates
    allowedDomains : [str], default is Undefined, optional
        List of allowed domains for certificates The domains of the role.
    allowedDomainsTemplate : bool, default is Undefined, optional
        Flag, if set, allowed_domains can be specified using identity template expressions such as {{identity.entity.aliases.<mount accessor>.name}}. Flag to indicate that `allowed_domains` specifies a template expression (e.g. {{identity.entity.aliases.<mount accessor>.name}})
    allowedOtherSans : [str], default is Undefined, optional
        Defines allowed custom SANs Defines allowed custom SANs
    allowedSerialNumbers : [str], default is Undefined, optional
        An array of allowed serial numbers to put in Subject Defines allowed Subject serial numbers.
    allowedUriSans : [str], default is Undefined, optional
        Defines allowed URI SANs Defines allowed URI SANs
    allowedUriSansTemplate : bool, default is Undefined, optional
        Flag, if set, allowed_uri_sans can be specified using identity template expressions such as {{identity.entity.aliases.<mount accessor>.name}}. Flag to indicate that `allowed_uri_sans` specifies a template expression (e.g. {{identity.entity.aliases.<mount accessor>.name}})
    allowedUserIds : [str], default is Undefined, optional
        Defines allowed User IDs The allowed User ID's.
    backend : str, default is Undefined, optional
        The path the PKI secret backend is mounted at, with no leading or trailing /s. The path of the PKI secret backend the resource belongs to.
    basicConstraintsValidForNonCa : bool, default is Undefined, optional
        Flag to mark basic constraints valid when issuing non-CA certificates Flag to mark basic constraints valid when issuing non-CA certificates.
    clientFlag : bool, default is Undefined, optional
        Flag to specify certificates for client use Flag to specify certificates for client use.
    codeSigningFlag : bool, default is Undefined, optional
        Flag to specify certificates for code signing use Flag to specify certificates for code signing use.
    country : [str], default is Undefined, optional
        The country of generated certificates The country of generated certificates.
    emailProtectionFlag : bool, default is Undefined, optional
        Flag to specify certificates for email protection use Flag to specify certificates for email protection use.
    enforceHostnames : bool, default is Undefined, optional
        Flag to allow only valid host names Flag to allow only valid host names
    extKeyUsage : [str], default is Undefined, optional
        Specify the allowed extended key usage constraint on issued certificates Specify the allowed extended key usage constraint on issued certificates.
    extKeyUsageOids : [str], default is Undefined, optional
        Specify the allowed extended key usage OIDs constraint on issued certificates A list of extended key usage OIDs.
    generateLease : bool, default is Undefined, optional
        Flag to generate leases with certificates Flag to generate leases with certificates.
    issuerRef : str, default is Undefined, optional
        Specifies the default issuer of this request. May be the value default, a name, or an issuer ID. Use ACLs to prevent access to the /pki/issuer/:issuer_ref/{issue,sign}/:name paths to prevent users overriding the role's issuer_ref value. Specifies the default issuer of this request.
    keyBits : float, default is Undefined, optional
        The number of bits of generated keys The number of bits of generated keys.
    keyType : str, default is Undefined, optional
        The generated key type, choices: rsa, ec, ed25519, any Defaults to rsa The generated key type.
    keyUsage : [str], default is Undefined, optional
        Specify the allowed key usage constraint on issued certificates. Defaults to ["DigitalSignature", "KeyAgreement", "KeyEncipherment"]). To specify no default key usage constraints, set this to an empty list []. Specify the allowed key usage constraint on issued certificates.
    locality : [str], default is Undefined, optional
        The locality of generated certificates The locality of generated certificates.
    maxTtl : str, default is Undefined, optional
        The maximum lease TTL, in seconds, for the role. The maximum TTL.
    name : str, default is Undefined, optional
        The name to identify this role within the backend. Must be unique within the backend. Unique name for the role.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    noStore : bool, default is Undefined, optional
        Flag to not store certificates in the storage backend Flag to not store certificates in the storage backend.
    notBeforeDuration : str, default is Undefined, optional
        Specifies the duration by which to backdate the NotBefore property. Specifies the duration by which to backdate the NotBefore property.
    organization : [str], default is Undefined, optional
        The organization of generated certificates The organization of generated certificates.
    ou : [str], default is Undefined, optional
        The organization unit of generated certificates The organization unit of generated certificates.
    policyIdentifier : [PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProviderPolicyIdentifierItems0], default is Undefined, optional
        (Vault 1.11+ only) A block for specifying policy identifers. The policy_identifier block can be repeated, and supports the following arguments: Policy identifier block; can only be used with Vault 1.11+
    policyIdentifiers : [str], default is Undefined, optional
        Specify the list of allowed policies OIDs. Use with Vault 1.10 or before. For Vault 1.11+, use policy_identifier blocks instead Specify the list of allowed policies OIDs.
    postalCode : [str], default is Undefined, optional
        The postal code of generated certificates The postal code of generated certificates.
    province : [str], default is Undefined, optional
        The province of generated certificates The province of generated certificates.
    requireCn : bool, default is Undefined, optional
        Flag to force CN usage Flag to force CN usage.
    serverFlag : bool, default is Undefined, optional
        Flag to specify certificates for server use Flag to specify certificates for server use.
    streetAddress : [str], default is Undefined, optional
        The street address of generated certificates The street address of generated certificates.
    ttl : str, default is Undefined, optional
        The TTL, in seconds, for any certificate issued against this role. The TTL.
    useCsrCommonName : bool, default is Undefined, optional
        Flag to use the CN in the CSR Flag to use the CN in the CSR.
    useCsrSans : bool, default is Undefined, optional
        Flag to use the SANs in the CSR Flag to use the SANs in the CSR.
    """


    allowAnyName?: bool

    allowBareDomains?: bool

    allowGlobDomains?: bool

    allowIpSans?: bool

    allowLocalhost?: bool

    allowSubdomains?: bool

    allowWildcardCertificates?: bool

    allowedDomains?: [str]

    allowedDomainsTemplate?: bool

    allowedOtherSans?: [str]

    allowedSerialNumbers?: [str]

    allowedUriSans?: [str]

    allowedUriSansTemplate?: bool

    allowedUserIds?: [str]

    backend?: str

    basicConstraintsValidForNonCa?: bool

    clientFlag?: bool

    codeSigningFlag?: bool

    country?: [str]

    emailProtectionFlag?: bool

    enforceHostnames?: bool

    extKeyUsage?: [str]

    extKeyUsageOids?: [str]

    generateLease?: bool

    issuerRef?: str

    keyBits?: float

    keyType?: str

    keyUsage?: [str]

    locality?: [str]

    maxTtl?: str

    name?: str

    namespace?: str

    noStore?: bool

    notBeforeDuration?: str

    organization?: [str]

    ou?: [str]

    policyIdentifier?: [PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProviderPolicyIdentifierItems0]

    policyIdentifiers?: [str]

    postalCode?: [str]

    province?: [str]

    requireCn?: bool

    serverFlag?: bool

    streetAddress?: [str]

    ttl?: str

    useCsrCommonName?: bool

    useCsrSans?: bool


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProviderPolicyIdentifierItems0:
    r"""
    pki vault upbound io v1alpha1 secret backend role spec init provider policy identifier items0

    Attributes
    ----------
    cps : str, default is Undefined, optional
        The URL of the CPS for the policy identifier Optional CPS URL
    notice : str, default is Undefined, optional
        A notice for the policy identifier Optional notice
    oid : str, default is Undefined, optional
        The OID for the policy identifier OID
    """


    cps?: str

    notice?: str

    oid?: str


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRef

    metadata?: PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToMetadata

    name: str


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleStatus:
    r"""
    SecretBackendRoleStatus defines the observed state of SecretBackendRole.

    Attributes
    ----------
    atProvider : PkiVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [PkiVaultUpboundIoV1alpha1SecretBackendRoleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: PkiVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProvider

    conditions?: [PkiVaultUpboundIoV1alpha1SecretBackendRoleStatusConditionsItems0]


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProvider:
    r"""
    pki vault upbound io v1alpha1 secret backend role status at provider

    Attributes
    ----------
    allowAnyName : bool, default is Undefined, optional
        Flag to allow any name Flag to allow any name
    allowBareDomains : bool, default is Undefined, optional
        Flag to allow certificates matching the actual domain Flag to allow certificates matching the actual domain.
    allowGlobDomains : bool, default is Undefined, optional
        Flag to allow names containing glob patterns. Flag to allow names containing glob patterns.
    allowIpSans : bool, default is Undefined, optional
        Flag to allow IP SANs Flag to allow IP SANs
    allowLocalhost : bool, default is Undefined, optional
        Flag to allow certificates for localhost Flag to allow certificates for localhost.
    allowSubdomains : bool, default is Undefined, optional
        Flag to allow certificates matching subdomains Flag to allow certificates matching subdomains.
    allowWildcardCertificates : bool, default is Undefined, optional
        Flag to allow wildcard certificates. Flag to allow wildcard certificates
    allowedDomains : [str], default is Undefined, optional
        List of allowed domains for certificates The domains of the role.
    allowedDomainsTemplate : bool, default is Undefined, optional
        Flag, if set, allowed_domains can be specified using identity template expressions such as {{identity.entity.aliases.<mount accessor>.name}}. Flag to indicate that `allowed_domains` specifies a template expression (e.g. {{identity.entity.aliases.<mount accessor>.name}})
    allowedOtherSans : [str], default is Undefined, optional
        Defines allowed custom SANs Defines allowed custom SANs
    allowedSerialNumbers : [str], default is Undefined, optional
        An array of allowed serial numbers to put in Subject Defines allowed Subject serial numbers.
    allowedUriSans : [str], default is Undefined, optional
        Defines allowed URI SANs Defines allowed URI SANs
    allowedUriSansTemplate : bool, default is Undefined, optional
        Flag, if set, allowed_uri_sans can be specified using identity template expressions such as {{identity.entity.aliases.<mount accessor>.name}}. Flag to indicate that `allowed_uri_sans` specifies a template expression (e.g. {{identity.entity.aliases.<mount accessor>.name}})
    allowedUserIds : [str], default is Undefined, optional
        Defines allowed User IDs The allowed User ID's.
    backend : str, default is Undefined, optional
        The path the PKI secret backend is mounted at, with no leading or trailing /s. The path of the PKI secret backend the resource belongs to.
    basicConstraintsValidForNonCa : bool, default is Undefined, optional
        Flag to mark basic constraints valid when issuing non-CA certificates Flag to mark basic constraints valid when issuing non-CA certificates.
    clientFlag : bool, default is Undefined, optional
        Flag to specify certificates for client use Flag to specify certificates for client use.
    codeSigningFlag : bool, default is Undefined, optional
        Flag to specify certificates for code signing use Flag to specify certificates for code signing use.
    country : [str], default is Undefined, optional
        The country of generated certificates The country of generated certificates.
    emailProtectionFlag : bool, default is Undefined, optional
        Flag to specify certificates for email protection use Flag to specify certificates for email protection use.
    enforceHostnames : bool, default is Undefined, optional
        Flag to allow only valid host names Flag to allow only valid host names
    extKeyUsage : [str], default is Undefined, optional
        Specify the allowed extended key usage constraint on issued certificates Specify the allowed extended key usage constraint on issued certificates.
    extKeyUsageOids : [str], default is Undefined, optional
        Specify the allowed extended key usage OIDs constraint on issued certificates A list of extended key usage OIDs.
    generateLease : bool, default is Undefined, optional
        Flag to generate leases with certificates Flag to generate leases with certificates.
    id : str, default is Undefined, optional
        id
    issuerRef : str, default is Undefined, optional
        Specifies the default issuer of this request. May be the value default, a name, or an issuer ID. Use ACLs to prevent access to the /pki/issuer/:issuer_ref/{issue,sign}/:name paths to prevent users overriding the role's issuer_ref value. Specifies the default issuer of this request.
    keyBits : float, default is Undefined, optional
        The number of bits of generated keys The number of bits of generated keys.
    keyType : str, default is Undefined, optional
        The generated key type, choices: rsa, ec, ed25519, any Defaults to rsa The generated key type.
    keyUsage : [str], default is Undefined, optional
        Specify the allowed key usage constraint on issued certificates. Defaults to ["DigitalSignature", "KeyAgreement", "KeyEncipherment"]). To specify no default key usage constraints, set this to an empty list []. Specify the allowed key usage constraint on issued certificates.
    locality : [str], default is Undefined, optional
        The locality of generated certificates The locality of generated certificates.
    maxTtl : str, default is Undefined, optional
        The maximum lease TTL, in seconds, for the role. The maximum TTL.
    name : str, default is Undefined, optional
        The name to identify this role within the backend. Must be unique within the backend. Unique name for the role.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    noStore : bool, default is Undefined, optional
        Flag to not store certificates in the storage backend Flag to not store certificates in the storage backend.
    notBeforeDuration : str, default is Undefined, optional
        Specifies the duration by which to backdate the NotBefore property. Specifies the duration by which to backdate the NotBefore property.
    organization : [str], default is Undefined, optional
        The organization of generated certificates The organization of generated certificates.
    ou : [str], default is Undefined, optional
        The organization unit of generated certificates The organization unit of generated certificates.
    policyIdentifier : [PkiVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProviderPolicyIdentifierItems0], default is Undefined, optional
        (Vault 1.11+ only) A block for specifying policy identifers. The policy_identifier block can be repeated, and supports the following arguments: Policy identifier block; can only be used with Vault 1.11+
    policyIdentifiers : [str], default is Undefined, optional
        Specify the list of allowed policies OIDs. Use with Vault 1.10 or before. For Vault 1.11+, use policy_identifier blocks instead Specify the list of allowed policies OIDs.
    postalCode : [str], default is Undefined, optional
        The postal code of generated certificates The postal code of generated certificates.
    province : [str], default is Undefined, optional
        The province of generated certificates The province of generated certificates.
    requireCn : bool, default is Undefined, optional
        Flag to force CN usage Flag to force CN usage.
    serverFlag : bool, default is Undefined, optional
        Flag to specify certificates for server use Flag to specify certificates for server use.
    streetAddress : [str], default is Undefined, optional
        The street address of generated certificates The street address of generated certificates.
    ttl : str, default is Undefined, optional
        The TTL, in seconds, for any certificate issued against this role. The TTL.
    useCsrCommonName : bool, default is Undefined, optional
        Flag to use the CN in the CSR Flag to use the CN in the CSR.
    useCsrSans : bool, default is Undefined, optional
        Flag to use the SANs in the CSR Flag to use the SANs in the CSR.
    """


    allowAnyName?: bool

    allowBareDomains?: bool

    allowGlobDomains?: bool

    allowIpSans?: bool

    allowLocalhost?: bool

    allowSubdomains?: bool

    allowWildcardCertificates?: bool

    allowedDomains?: [str]

    allowedDomainsTemplate?: bool

    allowedOtherSans?: [str]

    allowedSerialNumbers?: [str]

    allowedUriSans?: [str]

    allowedUriSansTemplate?: bool

    allowedUserIds?: [str]

    backend?: str

    basicConstraintsValidForNonCa?: bool

    clientFlag?: bool

    codeSigningFlag?: bool

    country?: [str]

    emailProtectionFlag?: bool

    enforceHostnames?: bool

    extKeyUsage?: [str]

    extKeyUsageOids?: [str]

    generateLease?: bool

    id?: str

    issuerRef?: str

    keyBits?: float

    keyType?: str

    keyUsage?: [str]

    locality?: [str]

    maxTtl?: str

    name?: str

    namespace?: str

    noStore?: bool

    notBeforeDuration?: str

    organization?: [str]

    ou?: [str]

    policyIdentifier?: [PkiVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProviderPolicyIdentifierItems0]

    policyIdentifiers?: [str]

    postalCode?: [str]

    province?: [str]

    requireCn?: bool

    serverFlag?: bool

    streetAddress?: [str]

    ttl?: str

    useCsrCommonName?: bool

    useCsrSans?: bool


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProviderPolicyIdentifierItems0:
    r"""
    pki vault upbound io v1alpha1 secret backend role status at provider policy identifier items0

    Attributes
    ----------
    cps : str, default is Undefined, optional
        The URL of the CPS for the policy identifier Optional CPS URL
    notice : str, default is Undefined, optional
        A notice for the policy identifier Optional notice
    oid : str, default is Undefined, optional
        The OID for the policy identifier OID
    """


    cps?: str

    notice?: str

    oid?: str


schema PkiVaultUpboundIoV1alpha1SecretBackendRoleStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


