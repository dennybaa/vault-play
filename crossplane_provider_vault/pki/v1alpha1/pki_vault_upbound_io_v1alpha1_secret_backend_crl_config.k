"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecretBackendCrlConfig:
    r"""
    SecretBackendCrlConfig is the Schema for the SecretBackendCrlConfigs API. Sets the CRL config on an PKI Secret Backend for Vault.

    Attributes
    ----------
    apiVersion : str, default is "pki.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecretBackendCrlConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpec, default is Undefined, required
        spec
    status : PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "pki.vault.upbound.io/v1alpha1" = "pki.vault.upbound.io/v1alpha1"

    kind: "SecretBackendCrlConfig" = "SecretBackendCrlConfig"

    metadata?: v1.ObjectMeta

    spec: PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpec

    status?: PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigStatus


schema PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpec:
    r"""
    SecretBackendCrlConfigSpec defines the desired state of SecretBackendCrlConfig

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecForProvider, default is Undefined, required
        for provider
    initProvider : PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecForProvider

    initProvider?: PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecProviderConfigRef

    providerRef?: PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecProviderRef

    publishConnectionDetailsTo?: PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecWriteConnectionSecretToRef


schema PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecForProvider:
    r"""
    pki vault upbound io v1alpha1 secret backend crl config spec for provider

    Attributes
    ----------
    autoRebuild : bool, default is Undefined, optional
        Enables periodic rebuilding of the CRL upon expiry. Vault 1.12+ Enables or disables periodic rebuilding of the CRL upon expiry.
    autoRebuildGracePeriod : str, default is Undefined, optional
        Grace period before CRL expiry to attempt rebuild of CRL. Vault 1.12+ Grace period before CRL expiry to attempt rebuild of CRL.
    backend : str, default is Undefined, optional
        The path the PKI secret backend is mounted at, with no leading or trailing /s. The path of the PKI secret backend the resource belongs to.
    crossClusterRevocation : bool, default is Undefined, optional
        Enable cross-cluster revocation request queues. Vault 1.13+ Enable cross-cluster revocation request queues.
    deltaRebuildInterval : str, default is Undefined, optional
        Interval to check for new revocations on, to regenerate the delta CRL. Interval to check for new revocations on, to regenerate the delta CRL.
    disable : bool, default is Undefined, optional
        Disables or enables CRL building. Disables or enables CRL building
    enableDelta : bool, default is Undefined, optional
        Enables building of delta CRLs with up-to-date revocation information, augmenting the last complete CRL.  Vault 1.12+ Enables or disables building of delta CRLs with up-to-date revocation information, augmenting the last complete CRL.
    expiry : str, default is Undefined, optional
        Specifies the time until expiration. Specifies the time until expiration.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    ocspDisable : bool, default is Undefined, optional
        Disables the OCSP responder in Vault. Vault 1.12+ Disables or enables the OCSP responder in Vault.
    ocspExpiry : str, default is Undefined, optional
        The amount of time an OCSP response can be cached for, useful for OCSP stapling refresh durations. Vault 1.12+ The amount of time an OCSP response can be cached for, useful for OCSP stapling refresh durations.
    unifiedCrl : bool, default is Undefined, optional
        Enables unified CRL and OCSP building. Vault 1.13+ Enables unified CRL and OCSP building.
    unifiedCrlOnExistingPaths : bool, default is Undefined, optional
        Enables serving the unified CRL and OCSP on the existing, previously cluster-local paths. Vault 1.13+ Enables serving the unified CRL and OCSP on the existing, previously cluster-local paths.
    """


    autoRebuild?: bool

    autoRebuildGracePeriod?: str

    backend?: str

    crossClusterRevocation?: bool

    deltaRebuildInterval?: str

    disable?: bool

    enableDelta?: bool

    expiry?: str

    namespace?: str

    ocspDisable?: bool

    ocspExpiry?: str

    unifiedCrl?: bool

    unifiedCrlOnExistingPaths?: bool


schema PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    autoRebuild : bool, default is Undefined, optional
        Enables periodic rebuilding of the CRL upon expiry. Vault 1.12+ Enables or disables periodic rebuilding of the CRL upon expiry.
    autoRebuildGracePeriod : str, default is Undefined, optional
        Grace period before CRL expiry to attempt rebuild of CRL. Vault 1.12+ Grace period before CRL expiry to attempt rebuild of CRL.
    backend : str, default is Undefined, optional
        The path the PKI secret backend is mounted at, with no leading or trailing /s. The path of the PKI secret backend the resource belongs to.
    crossClusterRevocation : bool, default is Undefined, optional
        Enable cross-cluster revocation request queues. Vault 1.13+ Enable cross-cluster revocation request queues.
    deltaRebuildInterval : str, default is Undefined, optional
        Interval to check for new revocations on, to regenerate the delta CRL. Interval to check for new revocations on, to regenerate the delta CRL.
    disable : bool, default is Undefined, optional
        Disables or enables CRL building. Disables or enables CRL building
    enableDelta : bool, default is Undefined, optional
        Enables building of delta CRLs with up-to-date revocation information, augmenting the last complete CRL.  Vault 1.12+ Enables or disables building of delta CRLs with up-to-date revocation information, augmenting the last complete CRL.
    expiry : str, default is Undefined, optional
        Specifies the time until expiration. Specifies the time until expiration.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    ocspDisable : bool, default is Undefined, optional
        Disables the OCSP responder in Vault. Vault 1.12+ Disables or enables the OCSP responder in Vault.
    ocspExpiry : str, default is Undefined, optional
        The amount of time an OCSP response can be cached for, useful for OCSP stapling refresh durations. Vault 1.12+ The amount of time an OCSP response can be cached for, useful for OCSP stapling refresh durations.
    unifiedCrl : bool, default is Undefined, optional
        Enables unified CRL and OCSP building. Vault 1.13+ Enables unified CRL and OCSP building.
    unifiedCrlOnExistingPaths : bool, default is Undefined, optional
        Enables serving the unified CRL and OCSP on the existing, previously cluster-local paths. Vault 1.13+ Enables serving the unified CRL and OCSP on the existing, previously cluster-local paths.
    """


    autoRebuild?: bool

    autoRebuildGracePeriod?: str

    backend?: str

    crossClusterRevocation?: bool

    deltaRebuildInterval?: str

    disable?: bool

    enableDelta?: bool

    expiry?: str

    namespace?: str

    ocspDisable?: bool

    ocspExpiry?: str

    unifiedCrl?: bool

    unifiedCrlOnExistingPaths?: bool


schema PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecProviderConfigRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecProviderRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecPublishConnectionDetailsToConfigRef

    metadata?: PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecPublishConnectionDetailsToMetadata

    name: str


schema PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecPublishConnectionDetailsToConfigRefPolicy


schema PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigStatus:
    r"""
    SecretBackendCrlConfigStatus defines the observed state of SecretBackendCrlConfig.

    Attributes
    ----------
    atProvider : PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigStatusAtProvider

    conditions?: [PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigStatusConditionsItems0]


schema PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigStatusAtProvider:
    r"""
    pki vault upbound io v1alpha1 secret backend crl config status at provider

    Attributes
    ----------
    autoRebuild : bool, default is Undefined, optional
        Enables periodic rebuilding of the CRL upon expiry. Vault 1.12+ Enables or disables periodic rebuilding of the CRL upon expiry.
    autoRebuildGracePeriod : str, default is Undefined, optional
        Grace period before CRL expiry to attempt rebuild of CRL. Vault 1.12+ Grace period before CRL expiry to attempt rebuild of CRL.
    backend : str, default is Undefined, optional
        The path the PKI secret backend is mounted at, with no leading or trailing /s. The path of the PKI secret backend the resource belongs to.
    crossClusterRevocation : bool, default is Undefined, optional
        Enable cross-cluster revocation request queues. Vault 1.13+ Enable cross-cluster revocation request queues.
    deltaRebuildInterval : str, default is Undefined, optional
        Interval to check for new revocations on, to regenerate the delta CRL. Interval to check for new revocations on, to regenerate the delta CRL.
    disable : bool, default is Undefined, optional
        Disables or enables CRL building. Disables or enables CRL building
    enableDelta : bool, default is Undefined, optional
        Enables building of delta CRLs with up-to-date revocation information, augmenting the last complete CRL.  Vault 1.12+ Enables or disables building of delta CRLs with up-to-date revocation information, augmenting the last complete CRL.
    expiry : str, default is Undefined, optional
        Specifies the time until expiration. Specifies the time until expiration.
    id : str, default is Undefined, optional
        id
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    ocspDisable : bool, default is Undefined, optional
        Disables the OCSP responder in Vault. Vault 1.12+ Disables or enables the OCSP responder in Vault.
    ocspExpiry : str, default is Undefined, optional
        The amount of time an OCSP response can be cached for, useful for OCSP stapling refresh durations. Vault 1.12+ The amount of time an OCSP response can be cached for, useful for OCSP stapling refresh durations.
    unifiedCrl : bool, default is Undefined, optional
        Enables unified CRL and OCSP building. Vault 1.13+ Enables unified CRL and OCSP building.
    unifiedCrlOnExistingPaths : bool, default is Undefined, optional
        Enables serving the unified CRL and OCSP on the existing, previously cluster-local paths. Vault 1.13+ Enables serving the unified CRL and OCSP on the existing, previously cluster-local paths.
    """


    autoRebuild?: bool

    autoRebuildGracePeriod?: str

    backend?: str

    crossClusterRevocation?: bool

    deltaRebuildInterval?: str

    disable?: bool

    enableDelta?: bool

    expiry?: str

    id?: str

    namespace?: str

    ocspDisable?: bool

    ocspExpiry?: str

    unifiedCrl?: bool

    unifiedCrlOnExistingPaths?: bool


schema PkiVaultUpboundIoV1alpha1SecretBackendCrlConfigStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


