"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Token:
    r"""
    Token is the Schema for the Tokens API. Writes token for Vault

    Attributes
    ----------
    apiVersion : str, default is "vault.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Token", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : VaultVaultUpboundIoV1alpha1TokenSpec, default is Undefined, required
        spec
    status : VaultVaultUpboundIoV1alpha1TokenStatus, default is Undefined, optional
        status
    """


    apiVersion: "vault.vault.upbound.io/v1alpha1" = "vault.vault.upbound.io/v1alpha1"

    kind: "Token" = "Token"

    metadata?: v1.ObjectMeta

    spec: VaultVaultUpboundIoV1alpha1TokenSpec

    status?: VaultVaultUpboundIoV1alpha1TokenStatus


schema VaultVaultUpboundIoV1alpha1TokenSpec:
    r"""
    TokenSpec defines the desired state of Token

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : VaultVaultUpboundIoV1alpha1TokenSpecForProvider, default is Undefined, required
        for provider
    initProvider : VaultVaultUpboundIoV1alpha1TokenSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : VaultVaultUpboundIoV1alpha1TokenSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : VaultVaultUpboundIoV1alpha1TokenSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : VaultVaultUpboundIoV1alpha1TokenSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : VaultVaultUpboundIoV1alpha1TokenSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: VaultVaultUpboundIoV1alpha1TokenSpecForProvider

    initProvider?: VaultVaultUpboundIoV1alpha1TokenSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: VaultVaultUpboundIoV1alpha1TokenSpecProviderConfigRef

    providerRef?: VaultVaultUpboundIoV1alpha1TokenSpecProviderRef

    publishConnectionDetailsTo?: VaultVaultUpboundIoV1alpha1TokenSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: VaultVaultUpboundIoV1alpha1TokenSpecWriteConnectionSecretToRef


schema VaultVaultUpboundIoV1alpha1TokenSpecForProvider:
    r"""
    vault vault upbound io v1alpha1 token spec for provider

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        String containing the token display name The display name of the token.
    explicitMaxTtl : str, default is Undefined, optional
        The explicit max TTL of this token. This is specified as a numeric string with suffix like "30s" ro "5m" The explicit max TTL of the token.
    metadata : {str:str}, default is Undefined, optional
        Metadata to be set on this token Metadata to be associated with the token.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    noDefaultPolicy : bool, default is Undefined, optional
        Flag to not attach the default policy to this token Flag to disable the default policy.
    noParent : bool, default is Undefined, optional
        Flag to create a token without parent Flag to create a token without parent.
    numUses : float, default is Undefined, optional
        The number of allowed uses of this token The number of allowed uses of the token.
    period : str, default is Undefined, optional
        The period of this token. This is specified as a numeric string with suffix like "30s" ro "5m" The period of the token.
    policies : [str], default is Undefined, optional
        List of policies to attach to this token List of policies.
    renewIncrement : float, default is Undefined, optional
        The renew increment. This is specified in seconds The renew increment.
    renewMinLease : float, default is Undefined, optional
        The minimal lease to renew this token The minimum lease to renew token.
    renewable : bool, default is Undefined, optional
        Flag to allow to renew this token Flag to allow the token to be renewed
    roleName : str, default is Undefined, optional
        The token role name The token role name.
    ttl : str, default is Undefined, optional
        The TTL period of this token. This is specified as a numeric string with suffix like "30s" ro "5m" The TTL period of the token.
    wrappingTtl : str, default is Undefined, optional
        The TTL period of this token. This is specified as a numeric string with suffix like "30s" ro "5m" The TTL period of the wrapped token.
    """


    displayName?: str

    explicitMaxTtl?: str

    metadata?: {str:str}

    namespace?: str

    noDefaultPolicy?: bool

    noParent?: bool

    numUses?: float

    period?: str

    policies?: [str]

    renewIncrement?: float

    renewMinLease?: float

    renewable?: bool

    roleName?: str

    ttl?: str

    wrappingTtl?: str


schema VaultVaultUpboundIoV1alpha1TokenSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        String containing the token display name The display name of the token.
    explicitMaxTtl : str, default is Undefined, optional
        The explicit max TTL of this token. This is specified as a numeric string with suffix like "30s" ro "5m" The explicit max TTL of the token.
    metadata : {str:str}, default is Undefined, optional
        Metadata to be set on this token Metadata to be associated with the token.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    noDefaultPolicy : bool, default is Undefined, optional
        Flag to not attach the default policy to this token Flag to disable the default policy.
    noParent : bool, default is Undefined, optional
        Flag to create a token without parent Flag to create a token without parent.
    numUses : float, default is Undefined, optional
        The number of allowed uses of this token The number of allowed uses of the token.
    period : str, default is Undefined, optional
        The period of this token. This is specified as a numeric string with suffix like "30s" ro "5m" The period of the token.
    policies : [str], default is Undefined, optional
        List of policies to attach to this token List of policies.
    renewIncrement : float, default is Undefined, optional
        The renew increment. This is specified in seconds The renew increment.
    renewMinLease : float, default is Undefined, optional
        The minimal lease to renew this token The minimum lease to renew token.
    renewable : bool, default is Undefined, optional
        Flag to allow to renew this token Flag to allow the token to be renewed
    roleName : str, default is Undefined, optional
        The token role name The token role name.
    ttl : str, default is Undefined, optional
        The TTL period of this token. This is specified as a numeric string with suffix like "30s" ro "5m" The TTL period of the token.
    wrappingTtl : str, default is Undefined, optional
        The TTL period of this token. This is specified as a numeric string with suffix like "30s" ro "5m" The TTL period of the wrapped token.
    """


    displayName?: str

    explicitMaxTtl?: str

    metadata?: {str:str}

    namespace?: str

    noDefaultPolicy?: bool

    noParent?: bool

    numUses?: float

    period?: str

    policies?: [str]

    renewIncrement?: float

    renewMinLease?: float

    renewable?: bool

    roleName?: str

    ttl?: str

    wrappingTtl?: str


schema VaultVaultUpboundIoV1alpha1TokenSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VaultVaultUpboundIoV1alpha1TokenSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VaultVaultUpboundIoV1alpha1TokenSpecProviderConfigRefPolicy


schema VaultVaultUpboundIoV1alpha1TokenSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VaultVaultUpboundIoV1alpha1TokenSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VaultVaultUpboundIoV1alpha1TokenSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VaultVaultUpboundIoV1alpha1TokenSpecProviderRefPolicy


schema VaultVaultUpboundIoV1alpha1TokenSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VaultVaultUpboundIoV1alpha1TokenSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : VaultVaultUpboundIoV1alpha1TokenSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : VaultVaultUpboundIoV1alpha1TokenSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: VaultVaultUpboundIoV1alpha1TokenSpecPublishConnectionDetailsToConfigRef

    metadata?: VaultVaultUpboundIoV1alpha1TokenSpecPublishConnectionDetailsToMetadata

    name: str


schema VaultVaultUpboundIoV1alpha1TokenSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VaultVaultUpboundIoV1alpha1TokenSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VaultVaultUpboundIoV1alpha1TokenSpecPublishConnectionDetailsToConfigRefPolicy


schema VaultVaultUpboundIoV1alpha1TokenSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VaultVaultUpboundIoV1alpha1TokenSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema VaultVaultUpboundIoV1alpha1TokenSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema VaultVaultUpboundIoV1alpha1TokenStatus:
    r"""
    TokenStatus defines the observed state of Token.

    Attributes
    ----------
    atProvider : VaultVaultUpboundIoV1alpha1TokenStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [VaultVaultUpboundIoV1alpha1TokenStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: VaultVaultUpboundIoV1alpha1TokenStatusAtProvider

    conditions?: [VaultVaultUpboundIoV1alpha1TokenStatusConditionsItems0]


schema VaultVaultUpboundIoV1alpha1TokenStatusAtProvider:
    r"""
    vault vault upbound io v1alpha1 token status at provider

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        String containing the token display name The display name of the token.
    explicitMaxTtl : str, default is Undefined, optional
        The explicit max TTL of this token. This is specified as a numeric string with suffix like "30s" ro "5m" The explicit max TTL of the token.
    id : str, default is Undefined, optional
        id
    leaseDuration : float, default is Undefined, optional
        String containing the token lease duration if present in state file The token lease duration.
    leaseStarted : str, default is Undefined, optional
        String containing the token lease started time if present in state file The token lease started on.
    metadata : {str:str}, default is Undefined, optional
        Metadata to be set on this token Metadata to be associated with the token.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    noDefaultPolicy : bool, default is Undefined, optional
        Flag to not attach the default policy to this token Flag to disable the default policy.
    noParent : bool, default is Undefined, optional
        Flag to create a token without parent Flag to create a token without parent.
    numUses : float, default is Undefined, optional
        The number of allowed uses of this token The number of allowed uses of the token.
    period : str, default is Undefined, optional
        The period of this token. This is specified as a numeric string with suffix like "30s" ro "5m" The period of the token.
    policies : [str], default is Undefined, optional
        List of policies to attach to this token List of policies.
    renewIncrement : float, default is Undefined, optional
        The renew increment. This is specified in seconds The renew increment.
    renewMinLease : float, default is Undefined, optional
        The minimal lease to renew this token The minimum lease to renew token.
    renewable : bool, default is Undefined, optional
        Flag to allow to renew this token Flag to allow the token to be renewed
    roleName : str, default is Undefined, optional
        The token role name The token role name.
    ttl : str, default is Undefined, optional
        The TTL period of this token. This is specified as a numeric string with suffix like "30s" ro "5m" The TTL period of the token.
    wrappingTtl : str, default is Undefined, optional
        The TTL period of this token. This is specified as a numeric string with suffix like "30s" ro "5m" The TTL period of the wrapped token.
    """


    displayName?: str

    explicitMaxTtl?: str

    id?: str

    leaseDuration?: float

    leaseStarted?: str

    metadata?: {str:str}

    namespace?: str

    noDefaultPolicy?: bool

    noParent?: bool

    numUses?: float

    period?: str

    policies?: [str]

    renewIncrement?: float

    renewMinLease?: float

    renewable?: bool

    roleName?: str

    ttl?: str

    wrappingTtl?: str


schema VaultVaultUpboundIoV1alpha1TokenStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


