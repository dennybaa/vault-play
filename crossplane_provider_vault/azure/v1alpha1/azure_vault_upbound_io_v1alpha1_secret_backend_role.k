"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecretBackendRole:
    r"""
    SecretBackendRole is the Schema for the SecretBackendRoles API. Creates an azure secret backend role for Vault.

    Attributes
    ----------
    apiVersion : str, default is "azure.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecretBackendRole", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AzureVaultUpboundIoV1alpha1SecretBackendRoleSpec, default is Undefined, required
        spec
    status : AzureVaultUpboundIoV1alpha1SecretBackendRoleStatus, default is Undefined, optional
        status
    """


    apiVersion: "azure.vault.upbound.io/v1alpha1" = "azure.vault.upbound.io/v1alpha1"

    kind: "SecretBackendRole" = "SecretBackendRole"

    metadata?: v1.ObjectMeta

    spec: AzureVaultUpboundIoV1alpha1SecretBackendRoleSpec

    status?: AzureVaultUpboundIoV1alpha1SecretBackendRoleStatus


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleSpec:
    r"""
    SecretBackendRoleSpec defines the desired state of SecretBackendRole

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecForProvider, default is Undefined, required
        for provider
    initProvider : AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecForProvider

    initProvider?: AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRef

    providerRef?: AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRef

    publishConnectionDetailsTo?: AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecWriteConnectionSecretToRef


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecForProvider:
    r"""
    azure vault upbound io v1alpha1 secret backend role spec for provider

    Attributes
    ----------
    applicationObjectId : str, default is Undefined, optional
        Application Object ID for an existing service principal that will be used instead of creating dynamic service principals. If present, azure_roles and permanently_delete will be ignored. Application Object ID for an existing service principal that will be used instead of creating dynamic service principals.
    azureGroups : [AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecForProviderAzureGroupsItems0], default is Undefined, optional
        List of Azure groups to be assigned to the generated service principal.
    azureRoles : [AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecForProviderAzureRolesItems0], default is Undefined, optional
        List of Azure roles to be assigned to the generated service principal.
    backend : str, default is Undefined, optional
        Path to the mounted Azure auth backend Unique name of the auth backend to configure.
    description : str, default is Undefined, optional
        Human-friendly description of the mount for the backend.
    maxTtl : str, default is Undefined, optional
        –  Specifies the maximum TTL for service principals generated using this role. Accepts time suffixed strings ("1h") or an integer number of seconds. Defaults to the system/engine max TTL time. Human-friendly description of the mount for the backend.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    permanentlyDelete : bool, default is Undefined, optional
        Indicates whether the applications and service principals created by Vault will be permanently deleted when the corresponding leases expire. Defaults to false. For Vault v1.12+. Indicates whether the applications and service principals created by Vault will be permanently deleted when the corresponding leases expire.
    role : str, default is Undefined, optional
        Name of the Azure role Name of the role to create
    signInAudience : str, default is Undefined, optional
        Specifies the security principal types that are allowed to sign in to the application. Valid values are: AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount, PersonalMicrosoftAccount. Requires Vault 1.16+. Specifies the security principal types that are allowed to sign in to the application. Valid values are: AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount, PersonalMicrosoftAccount
    tags : [str], default is Undefined, optional
        - A list of Azure tags to attach to an application. Requires Vault 1.16+. Comma-separated strings of Azure tags to attach to an application.
    ttl : str, default is Undefined, optional
        –  Specifies the default TTL for service principals generated using this role. Accepts time suffixed strings ("1h") or an integer number of seconds. Defaults to the system/engine default TTL time. Human-friendly description of the mount for the backend.
    """


    applicationObjectId?: str

    azureGroups?: [AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecForProviderAzureGroupsItems0]

    azureRoles?: [AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecForProviderAzureRolesItems0]

    backend?: str

    description?: str

    maxTtl?: str

    namespace?: str

    permanentlyDelete?: bool

    role?: str

    signInAudience?: str

    tags?: [str]

    ttl?: str


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecForProviderAzureGroupsItems0:
    r"""
    azure vault upbound io v1alpha1 secret backend role spec for provider azure groups items0

    Attributes
    ----------
    groupName : str, default is Undefined, optional
        group name
    """


    groupName?: str


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecForProviderAzureRolesItems0:
    r"""
    azure vault upbound io v1alpha1 secret backend role spec for provider azure roles items0

    Attributes
    ----------
    roleId : str, default is Undefined, optional
        role Id
    roleName : str, default is Undefined, optional
        role name
    scope : str, default is Undefined, optional
        scope
    """


    roleId?: str

    roleName?: str

    scope?: str


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    applicationObjectId : str, default is Undefined, optional
        Application Object ID for an existing service principal that will be used instead of creating dynamic service principals. If present, azure_roles and permanently_delete will be ignored. Application Object ID for an existing service principal that will be used instead of creating dynamic service principals.
    azureGroups : [AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProviderAzureGroupsItems0], default is Undefined, optional
        List of Azure groups to be assigned to the generated service principal.
    azureRoles : [AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProviderAzureRolesItems0], default is Undefined, optional
        List of Azure roles to be assigned to the generated service principal.
    backend : str, default is Undefined, optional
        Path to the mounted Azure auth backend Unique name of the auth backend to configure.
    description : str, default is Undefined, optional
        Human-friendly description of the mount for the backend.
    maxTtl : str, default is Undefined, optional
        –  Specifies the maximum TTL for service principals generated using this role. Accepts time suffixed strings ("1h") or an integer number of seconds. Defaults to the system/engine max TTL time. Human-friendly description of the mount for the backend.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    permanentlyDelete : bool, default is Undefined, optional
        Indicates whether the applications and service principals created by Vault will be permanently deleted when the corresponding leases expire. Defaults to false. For Vault v1.12+. Indicates whether the applications and service principals created by Vault will be permanently deleted when the corresponding leases expire.
    role : str, default is Undefined, optional
        Name of the Azure role Name of the role to create
    signInAudience : str, default is Undefined, optional
        Specifies the security principal types that are allowed to sign in to the application. Valid values are: AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount, PersonalMicrosoftAccount. Requires Vault 1.16+. Specifies the security principal types that are allowed to sign in to the application. Valid values are: AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount, PersonalMicrosoftAccount
    tags : [str], default is Undefined, optional
        - A list of Azure tags to attach to an application. Requires Vault 1.16+. Comma-separated strings of Azure tags to attach to an application.
    ttl : str, default is Undefined, optional
        –  Specifies the default TTL for service principals generated using this role. Accepts time suffixed strings ("1h") or an integer number of seconds. Defaults to the system/engine default TTL time. Human-friendly description of the mount for the backend.
    """


    applicationObjectId?: str

    azureGroups?: [AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProviderAzureGroupsItems0]

    azureRoles?: [AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProviderAzureRolesItems0]

    backend?: str

    description?: str

    maxTtl?: str

    namespace?: str

    permanentlyDelete?: bool

    role?: str

    signInAudience?: str

    tags?: [str]

    ttl?: str


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProviderAzureGroupsItems0:
    r"""
    azure vault upbound io v1alpha1 secret backend role spec init provider azure groups items0

    Attributes
    ----------
    groupName : str, default is Undefined, optional
        group name
    """


    groupName?: str


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecInitProviderAzureRolesItems0:
    r"""
    azure vault upbound io v1alpha1 secret backend role spec init provider azure roles items0

    Attributes
    ----------
    roleId : str, default is Undefined, optional
        role Id
    roleName : str, default is Undefined, optional
        role name
    scope : str, default is Undefined, optional
        scope
    """


    roleId?: str

    roleName?: str

    scope?: str


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRefPolicy


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRefPolicy


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRef

    metadata?: AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToMetadata

    name: str


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRefPolicy


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleStatus:
    r"""
    SecretBackendRoleStatus defines the observed state of SecretBackendRole.

    Attributes
    ----------
    atProvider : AzureVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AzureVaultUpboundIoV1alpha1SecretBackendRoleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: AzureVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProvider

    conditions?: [AzureVaultUpboundIoV1alpha1SecretBackendRoleStatusConditionsItems0]


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProvider:
    r"""
    azure vault upbound io v1alpha1 secret backend role status at provider

    Attributes
    ----------
    applicationObjectId : str, default is Undefined, optional
        Application Object ID for an existing service principal that will be used instead of creating dynamic service principals. If present, azure_roles and permanently_delete will be ignored. Application Object ID for an existing service principal that will be used instead of creating dynamic service principals.
    azureGroups : [AzureVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProviderAzureGroupsItems0], default is Undefined, optional
        List of Azure groups to be assigned to the generated service principal.
    azureRoles : [AzureVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProviderAzureRolesItems0], default is Undefined, optional
        List of Azure roles to be assigned to the generated service principal.
    backend : str, default is Undefined, optional
        Path to the mounted Azure auth backend Unique name of the auth backend to configure.
    description : str, default is Undefined, optional
        Human-friendly description of the mount for the backend.
    id : str, default is Undefined, optional
        id
    maxTtl : str, default is Undefined, optional
        –  Specifies the maximum TTL for service principals generated using this role. Accepts time suffixed strings ("1h") or an integer number of seconds. Defaults to the system/engine max TTL time. Human-friendly description of the mount for the backend.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    permanentlyDelete : bool, default is Undefined, optional
        Indicates whether the applications and service principals created by Vault will be permanently deleted when the corresponding leases expire. Defaults to false. For Vault v1.12+. Indicates whether the applications and service principals created by Vault will be permanently deleted when the corresponding leases expire.
    role : str, default is Undefined, optional
        Name of the Azure role Name of the role to create
    signInAudience : str, default is Undefined, optional
        Specifies the security principal types that are allowed to sign in to the application. Valid values are: AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount, PersonalMicrosoftAccount. Requires Vault 1.16+. Specifies the security principal types that are allowed to sign in to the application. Valid values are: AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount, PersonalMicrosoftAccount
    tags : [str], default is Undefined, optional
        - A list of Azure tags to attach to an application. Requires Vault 1.16+. Comma-separated strings of Azure tags to attach to an application.
    ttl : str, default is Undefined, optional
        –  Specifies the default TTL for service principals generated using this role. Accepts time suffixed strings ("1h") or an integer number of seconds. Defaults to the system/engine default TTL time. Human-friendly description of the mount for the backend.
    """


    applicationObjectId?: str

    azureGroups?: [AzureVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProviderAzureGroupsItems0]

    azureRoles?: [AzureVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProviderAzureRolesItems0]

    backend?: str

    description?: str

    id?: str

    maxTtl?: str

    namespace?: str

    permanentlyDelete?: bool

    role?: str

    signInAudience?: str

    tags?: [str]

    ttl?: str


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProviderAzureGroupsItems0:
    r"""
    azure vault upbound io v1alpha1 secret backend role status at provider azure groups items0

    Attributes
    ----------
    groupName : str, default is Undefined, optional
        group name
    objectId : str, default is Undefined, optional
        object Id
    """


    groupName?: str

    objectId?: str


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleStatusAtProviderAzureRolesItems0:
    r"""
    azure vault upbound io v1alpha1 secret backend role status at provider azure roles items0

    Attributes
    ----------
    roleId : str, default is Undefined, optional
        role Id
    roleName : str, default is Undefined, optional
        role name
    scope : str, default is Undefined, optional
        scope
    """


    roleId?: str

    roleName?: str

    scope?: str


schema AzureVaultUpboundIoV1alpha1SecretBackendRoleStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


