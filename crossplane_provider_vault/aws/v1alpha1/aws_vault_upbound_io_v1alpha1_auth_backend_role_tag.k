"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AuthBackendRoleTag:
    r"""
    AuthBackendRoleTag is the Schema for the AuthBackendRoleTags API. Reads role tags from a Vault AWS auth backend.

    Attributes
    ----------
    apiVersion : str, default is "aws.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AuthBackendRoleTag", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpec, default is Undefined, required
        spec
    status : AwsVaultUpboundIoV1alpha1AuthBackendRoleTagStatus, default is Undefined, optional
        status
    """


    apiVersion: "aws.vault.upbound.io/v1alpha1" = "aws.vault.upbound.io/v1alpha1"

    kind: "AuthBackendRoleTag" = "AuthBackendRoleTag"

    metadata?: v1.ObjectMeta

    spec: AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpec

    status?: AwsVaultUpboundIoV1alpha1AuthBackendRoleTagStatus


schema AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpec:
    r"""
    AuthBackendRoleTagSpec defines the desired state of AuthBackendRoleTag

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecForProvider, default is Undefined, required
        for provider
    initProvider : AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecForProvider

    initProvider?: AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecProviderConfigRef

    providerRef?: AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecProviderRef

    publishConnectionDetailsTo?: AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecWriteConnectionSecretToRef


schema AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecForProvider:
    r"""
    aws vault upbound io v1alpha1 auth backend role tag spec for provider

    Attributes
    ----------
    allowInstanceMigration : bool, default is Undefined, optional
        If set, allows migration of the underlying instances where the client resides. Use with caution. Allows migration of the underlying instance where the client resides.
    backend : str, default is Undefined, optional
        The path to the AWS auth backend to read role tags from, with no leading or trailing /s. Defaults to "aws". AWS auth backend to read tags from.
    disallowReauthentication : bool, default is Undefined, optional
        If set, only allows a single token to be granted per instance ID. Only allow a single token to be granted per instance ID.
    instanceId : str, default is Undefined, optional
        Instance ID for which this tag is intended for. If set, the created tag can only be used by the instance with the given ID. Instance ID for which this tag is intended. The created tag can only be used by the instance with the given ID.
    maxTtl : str, default is Undefined, optional
        The maximum TTL of the tokens issued using this role. The maximum allowed lifetime of tokens issued using this role.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    policies : [str], default is Undefined, optional
        The policies to be associated with the tag. Must be a subset of the policies associated with the role. Policies to be associated with the tag.
    role : str, default is Undefined, optional
        The name of the AWS auth backend role to read role tags from, with no leading or trailing /s. Name of the role.
    """


    allowInstanceMigration?: bool

    backend?: str

    disallowReauthentication?: bool

    instanceId?: str

    maxTtl?: str

    namespace?: str

    policies?: [str]

    role?: str


schema AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    allowInstanceMigration : bool, default is Undefined, optional
        If set, allows migration of the underlying instances where the client resides. Use with caution. Allows migration of the underlying instance where the client resides.
    backend : str, default is Undefined, optional
        The path to the AWS auth backend to read role tags from, with no leading or trailing /s. Defaults to "aws". AWS auth backend to read tags from.
    disallowReauthentication : bool, default is Undefined, optional
        If set, only allows a single token to be granted per instance ID. Only allow a single token to be granted per instance ID.
    instanceId : str, default is Undefined, optional
        Instance ID for which this tag is intended for. If set, the created tag can only be used by the instance with the given ID. Instance ID for which this tag is intended. The created tag can only be used by the instance with the given ID.
    maxTtl : str, default is Undefined, optional
        The maximum TTL of the tokens issued using this role. The maximum allowed lifetime of tokens issued using this role.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    policies : [str], default is Undefined, optional
        The policies to be associated with the tag. Must be a subset of the policies associated with the role. Policies to be associated with the tag.
    role : str, default is Undefined, optional
        The name of the AWS auth backend role to read role tags from, with no leading or trailing /s. Name of the role.
    """


    allowInstanceMigration?: bool

    backend?: str

    disallowReauthentication?: bool

    instanceId?: str

    maxTtl?: str

    namespace?: str

    policies?: [str]

    role?: str


schema AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecProviderConfigRefPolicy


schema AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecProviderRefPolicy


schema AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecPublishConnectionDetailsToConfigRef

    metadata?: AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecPublishConnectionDetailsToMetadata

    name: str


schema AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecPublishConnectionDetailsToConfigRefPolicy


schema AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AwsVaultUpboundIoV1alpha1AuthBackendRoleTagSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AwsVaultUpboundIoV1alpha1AuthBackendRoleTagStatus:
    r"""
    AuthBackendRoleTagStatus defines the observed state of AuthBackendRoleTag.

    Attributes
    ----------
    atProvider : AwsVaultUpboundIoV1alpha1AuthBackendRoleTagStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AwsVaultUpboundIoV1alpha1AuthBackendRoleTagStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: AwsVaultUpboundIoV1alpha1AuthBackendRoleTagStatusAtProvider

    conditions?: [AwsVaultUpboundIoV1alpha1AuthBackendRoleTagStatusConditionsItems0]


schema AwsVaultUpboundIoV1alpha1AuthBackendRoleTagStatusAtProvider:
    r"""
    aws vault upbound io v1alpha1 auth backend role tag status at provider

    Attributes
    ----------
    allowInstanceMigration : bool, default is Undefined, optional
        If set, allows migration of the underlying instances where the client resides. Use with caution. Allows migration of the underlying instance where the client resides.
    backend : str, default is Undefined, optional
        The path to the AWS auth backend to read role tags from, with no leading or trailing /s. Defaults to "aws". AWS auth backend to read tags from.
    disallowReauthentication : bool, default is Undefined, optional
        If set, only allows a single token to be granted per instance ID. Only allow a single token to be granted per instance ID.
    id : str, default is Undefined, optional
        id
    instanceId : str, default is Undefined, optional
        Instance ID for which this tag is intended for. If set, the created tag can only be used by the instance with the given ID. Instance ID for which this tag is intended. The created tag can only be used by the instance with the given ID.
    maxTtl : str, default is Undefined, optional
        The maximum TTL of the tokens issued using this role. The maximum allowed lifetime of tokens issued using this role.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    policies : [str], default is Undefined, optional
        The policies to be associated with the tag. Must be a subset of the policies associated with the role. Policies to be associated with the tag.
    role : str, default is Undefined, optional
        The name of the AWS auth backend role to read role tags from, with no leading or trailing /s. Name of the role.
    tagKey : str, default is Undefined, optional
        The key of the role tag.
    tagValue : str, default is Undefined, optional
        The value to set the role key.
    """


    allowInstanceMigration?: bool

    backend?: str

    disallowReauthentication?: bool

    id?: str

    instanceId?: str

    maxTtl?: str

    namespace?: str

    policies?: [str]

    role?: str

    tagKey?: str

    tagValue?: str


schema AwsVaultUpboundIoV1alpha1AuthBackendRoleTagStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


