"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AuthBackendClient:
    r"""
    AuthBackendClient is the Schema for the AuthBackendClients API. Configures the client used by an AWS Auth Backend in Vault.

    Attributes
    ----------
    apiVersion : str, default is "aws.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AuthBackendClient", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AwsVaultUpboundIoV1alpha1AuthBackendClientSpec, default is Undefined, required
        spec
    status : AwsVaultUpboundIoV1alpha1AuthBackendClientStatus, default is Undefined, optional
        status
    """


    apiVersion: "aws.vault.upbound.io/v1alpha1" = "aws.vault.upbound.io/v1alpha1"

    kind: "AuthBackendClient" = "AuthBackendClient"

    metadata?: v1.ObjectMeta

    spec: AwsVaultUpboundIoV1alpha1AuthBackendClientSpec

    status?: AwsVaultUpboundIoV1alpha1AuthBackendClientStatus


schema AwsVaultUpboundIoV1alpha1AuthBackendClientSpec:
    r"""
    AuthBackendClientSpec defines the desired state of AuthBackendClient

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AwsVaultUpboundIoV1alpha1AuthBackendClientSpecForProvider, default is Undefined, required
        for provider
    initProvider : AwsVaultUpboundIoV1alpha1AuthBackendClientSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AwsVaultUpboundIoV1alpha1AuthBackendClientSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : AwsVaultUpboundIoV1alpha1AuthBackendClientSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : AwsVaultUpboundIoV1alpha1AuthBackendClientSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AwsVaultUpboundIoV1alpha1AuthBackendClientSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AwsVaultUpboundIoV1alpha1AuthBackendClientSpecForProvider

    initProvider?: AwsVaultUpboundIoV1alpha1AuthBackendClientSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AwsVaultUpboundIoV1alpha1AuthBackendClientSpecProviderConfigRef

    providerRef?: AwsVaultUpboundIoV1alpha1AuthBackendClientSpecProviderRef

    publishConnectionDetailsTo?: AwsVaultUpboundIoV1alpha1AuthBackendClientSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AwsVaultUpboundIoV1alpha1AuthBackendClientSpecWriteConnectionSecretToRef


schema AwsVaultUpboundIoV1alpha1AuthBackendClientSpecForProvider:
    r"""
    aws vault upbound io v1alpha1 auth backend client spec for provider

    Attributes
    ----------
    accessKeySecretRef : AwsVaultUpboundIoV1alpha1AuthBackendClientSpecForProviderAccessKeySecretRef, default is Undefined, optional
        access key secret ref
    backend : str, default is Undefined, optional
        The path the AWS auth backend being configured was mounted at.  Defaults to aws. Unique name of the auth backend to configure.
    ec2Endpoint : str, default is Undefined, optional
        Override the URL Vault uses when making EC2 API calls. URL to override the default generated endpoint for making AWS EC2 API calls.
    iamEndpoint : str, default is Undefined, optional
        Override the URL Vault uses when making IAM API calls. URL to override the default generated endpoint for making AWS IAM API calls.
    iamServerIdHeaderValue : str, default is Undefined, optional
        The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the IAM auth method. The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    secretKeySecretRef : AwsVaultUpboundIoV1alpha1AuthBackendClientSpecForProviderSecretKeySecretRef, default is Undefined, optional
        secret key secret ref
    stsEndpoint : str, default is Undefined, optional
        Override the URL Vault uses when making STS API calls. URL to override the default generated endpoint for making AWS STS API calls.
    stsRegion : str, default is Undefined, optional
        Override the default region when making STS API calls. The sts_endpoint argument must be set when using sts_region. Region to override the default region for making AWS STS API calls.
    useStsRegionFromClient : bool, default is Undefined, optional
        Available in Vault v1.15+. If set, overrides both sts_endpoint and sts_region to instead use the region specified in the client request headers for IAM-based authentication. This can be useful when you have client requests coming from different regions and want flexibility in which regional STS API is used. If set, will override sts_region and use the region from the client request's header
    """


    accessKeySecretRef?: AwsVaultUpboundIoV1alpha1AuthBackendClientSpecForProviderAccessKeySecretRef

    backend?: str

    ec2Endpoint?: str

    iamEndpoint?: str

    iamServerIdHeaderValue?: str

    namespace?: str

    secretKeySecretRef?: AwsVaultUpboundIoV1alpha1AuthBackendClientSpecForProviderSecretKeySecretRef

    stsEndpoint?: str

    stsRegion?: str

    useStsRegionFromClient?: bool


schema AwsVaultUpboundIoV1alpha1AuthBackendClientSpecForProviderAccessKeySecretRef:
    r"""
    The AWS access key that Vault should use for the auth backend. AWS Access key with permissions to query AWS APIs.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AwsVaultUpboundIoV1alpha1AuthBackendClientSpecForProviderSecretKeySecretRef:
    r"""
    The AWS secret key that Vault should use for the auth backend. AWS Secret key with permissions to query AWS APIs.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AwsVaultUpboundIoV1alpha1AuthBackendClientSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    backend : str, default is Undefined, optional
        The path the AWS auth backend being configured was mounted at.  Defaults to aws. Unique name of the auth backend to configure.
    ec2Endpoint : str, default is Undefined, optional
        Override the URL Vault uses when making EC2 API calls. URL to override the default generated endpoint for making AWS EC2 API calls.
    iamEndpoint : str, default is Undefined, optional
        Override the URL Vault uses when making IAM API calls. URL to override the default generated endpoint for making AWS IAM API calls.
    iamServerIdHeaderValue : str, default is Undefined, optional
        The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the IAM auth method. The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    stsEndpoint : str, default is Undefined, optional
        Override the URL Vault uses when making STS API calls. URL to override the default generated endpoint for making AWS STS API calls.
    stsRegion : str, default is Undefined, optional
        Override the default region when making STS API calls. The sts_endpoint argument must be set when using sts_region. Region to override the default region for making AWS STS API calls.
    useStsRegionFromClient : bool, default is Undefined, optional
        Available in Vault v1.15+. If set, overrides both sts_endpoint and sts_region to instead use the region specified in the client request headers for IAM-based authentication. This can be useful when you have client requests coming from different regions and want flexibility in which regional STS API is used. If set, will override sts_region and use the region from the client request's header
    """


    backend?: str

    ec2Endpoint?: str

    iamEndpoint?: str

    iamServerIdHeaderValue?: str

    namespace?: str

    stsEndpoint?: str

    stsRegion?: str

    useStsRegionFromClient?: bool


schema AwsVaultUpboundIoV1alpha1AuthBackendClientSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AwsVaultUpboundIoV1alpha1AuthBackendClientSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AwsVaultUpboundIoV1alpha1AuthBackendClientSpecProviderConfigRefPolicy


schema AwsVaultUpboundIoV1alpha1AuthBackendClientSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AwsVaultUpboundIoV1alpha1AuthBackendClientSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AwsVaultUpboundIoV1alpha1AuthBackendClientSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AwsVaultUpboundIoV1alpha1AuthBackendClientSpecProviderRefPolicy


schema AwsVaultUpboundIoV1alpha1AuthBackendClientSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AwsVaultUpboundIoV1alpha1AuthBackendClientSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AwsVaultUpboundIoV1alpha1AuthBackendClientSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AwsVaultUpboundIoV1alpha1AuthBackendClientSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AwsVaultUpboundIoV1alpha1AuthBackendClientSpecPublishConnectionDetailsToConfigRef

    metadata?: AwsVaultUpboundIoV1alpha1AuthBackendClientSpecPublishConnectionDetailsToMetadata

    name: str


schema AwsVaultUpboundIoV1alpha1AuthBackendClientSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AwsVaultUpboundIoV1alpha1AuthBackendClientSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AwsVaultUpboundIoV1alpha1AuthBackendClientSpecPublishConnectionDetailsToConfigRefPolicy


schema AwsVaultUpboundIoV1alpha1AuthBackendClientSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AwsVaultUpboundIoV1alpha1AuthBackendClientSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AwsVaultUpboundIoV1alpha1AuthBackendClientSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AwsVaultUpboundIoV1alpha1AuthBackendClientStatus:
    r"""
    AuthBackendClientStatus defines the observed state of AuthBackendClient.

    Attributes
    ----------
    atProvider : AwsVaultUpboundIoV1alpha1AuthBackendClientStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AwsVaultUpboundIoV1alpha1AuthBackendClientStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: AwsVaultUpboundIoV1alpha1AuthBackendClientStatusAtProvider

    conditions?: [AwsVaultUpboundIoV1alpha1AuthBackendClientStatusConditionsItems0]


schema AwsVaultUpboundIoV1alpha1AuthBackendClientStatusAtProvider:
    r"""
    aws vault upbound io v1alpha1 auth backend client status at provider

    Attributes
    ----------
    backend : str, default is Undefined, optional
        The path the AWS auth backend being configured was mounted at.  Defaults to aws. Unique name of the auth backend to configure.
    ec2Endpoint : str, default is Undefined, optional
        Override the URL Vault uses when making EC2 API calls. URL to override the default generated endpoint for making AWS EC2 API calls.
    iamEndpoint : str, default is Undefined, optional
        Override the URL Vault uses when making IAM API calls. URL to override the default generated endpoint for making AWS IAM API calls.
    iamServerIdHeaderValue : str, default is Undefined, optional
        The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the IAM auth method. The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method.
    id : str, default is Undefined, optional
        id
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    stsEndpoint : str, default is Undefined, optional
        Override the URL Vault uses when making STS API calls. URL to override the default generated endpoint for making AWS STS API calls.
    stsRegion : str, default is Undefined, optional
        Override the default region when making STS API calls. The sts_endpoint argument must be set when using sts_region. Region to override the default region for making AWS STS API calls.
    useStsRegionFromClient : bool, default is Undefined, optional
        Available in Vault v1.15+. If set, overrides both sts_endpoint and sts_region to instead use the region specified in the client request headers for IAM-based authentication. This can be useful when you have client requests coming from different regions and want flexibility in which regional STS API is used. If set, will override sts_region and use the region from the client request's header
    """


    backend?: str

    ec2Endpoint?: str

    iamEndpoint?: str

    iamServerIdHeaderValue?: str

    id?: str

    namespace?: str

    stsEndpoint?: str

    stsRegion?: str

    useStsRegionFromClient?: bool


schema AwsVaultUpboundIoV1alpha1AuthBackendClientStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


