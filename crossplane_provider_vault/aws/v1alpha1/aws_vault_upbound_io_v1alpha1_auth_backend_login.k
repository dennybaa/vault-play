"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AuthBackendLogin:
    r"""
    AuthBackendLogin is the Schema for the AuthBackendLogins API. Manages Vault tokens acquired using the AWS auth backend.

    Attributes
    ----------
    apiVersion : str, default is "aws.vault.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AuthBackendLogin", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AwsVaultUpboundIoV1alpha1AuthBackendLoginSpec, default is Undefined, required
        spec
    status : AwsVaultUpboundIoV1alpha1AuthBackendLoginStatus, default is Undefined, optional
        status
    """


    apiVersion: "aws.vault.upbound.io/v1alpha1" = "aws.vault.upbound.io/v1alpha1"

    kind: "AuthBackendLogin" = "AuthBackendLogin"

    metadata?: v1.ObjectMeta

    spec: AwsVaultUpboundIoV1alpha1AuthBackendLoginSpec

    status?: AwsVaultUpboundIoV1alpha1AuthBackendLoginStatus


schema AwsVaultUpboundIoV1alpha1AuthBackendLoginSpec:
    r"""
    AuthBackendLoginSpec defines the desired state of AuthBackendLogin

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecForProvider, default is Undefined, required
        for provider
    initProvider : AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecForProvider

    initProvider?: AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecProviderConfigRef

    providerRef?: AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecProviderRef

    publishConnectionDetailsTo?: AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecWriteConnectionSecretToRef


schema AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecForProvider:
    r"""
    aws vault upbound io v1alpha1 auth backend login spec for provider

    Attributes
    ----------
    backend : str, default is Undefined, optional
        The unique name of the AWS auth backend. Defaults to 'aws'. AWS Auth Backend to read the token from.
    iamHttpRequestMethod : str, default is Undefined, optional
        The HTTP method used in the signed IAM request. The HTTP method used in the signed request.
    iamRequestBody : str, default is Undefined, optional
        The base64-encoded body of the signed request. The Base64-encoded body of the signed request.
    iamRequestHeaders : str, default is Undefined, optional
        The base64-encoded, JSON serialized representation of the GetCallerIdentity HTTP request headers. The Base64-encoded, JSON serialized representation of the sts:GetCallerIdentity HTTP request headers.
    iamRequestUrl : str, default is Undefined, optional
        The base64-encoded HTTP URL used in the signed request. The Base64-encoded HTTP URL used in the signed request.
    identity : str, default is Undefined, optional
        The base64-encoded EC2 instance identity document to authenticate with. Can be retrieved from the EC2 metadata server. Base64-encoded EC2 instance identity document to authenticate with.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    nonce : str, default is Undefined, optional
        The unique nonce to be used for login requests. Can be set to a user-specified value, or will contain the server-generated value once a token is issued. EC2 instances can only acquire a single token until the whitelist is tidied again unless they keep track of this nonce. The nonce to be used for subsequent login requests.
    pkcs7 : str, default is Undefined, optional
        The PKCS#7 signature of the identity document to authenticate with, with all newline characters removed. Can be retrieved from the EC2 metadata server. PKCS7 signature of the identity document to authenticate with, with all newline characters removed.
    role : str, default is Undefined, optional
        The name of the AWS auth backend role to create tokens against. AWS Auth Role to read the token from.
    signature : str, default is Undefined, optional
        The base64-encoded SHA256 RSA signature of the instance identity document to authenticate with, with all newline characters removed. Can be retrieved from the EC2 metadata server. Base64-encoded SHA256 RSA signature of the instance identtiy document to authenticate with.
    """


    backend?: str

    iamHttpRequestMethod?: str

    iamRequestBody?: str

    iamRequestHeaders?: str

    iamRequestUrl?: str

    identity?: str

    namespace?: str

    nonce?: str

    pkcs7?: str

    role?: str

    signature?: str


schema AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecInitProvider:
    r"""
    THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.

    Attributes
    ----------
    backend : str, default is Undefined, optional
        The unique name of the AWS auth backend. Defaults to 'aws'. AWS Auth Backend to read the token from.
    iamHttpRequestMethod : str, default is Undefined, optional
        The HTTP method used in the signed IAM request. The HTTP method used in the signed request.
    iamRequestBody : str, default is Undefined, optional
        The base64-encoded body of the signed request. The Base64-encoded body of the signed request.
    iamRequestHeaders : str, default is Undefined, optional
        The base64-encoded, JSON serialized representation of the GetCallerIdentity HTTP request headers. The Base64-encoded, JSON serialized representation of the sts:GetCallerIdentity HTTP request headers.
    iamRequestUrl : str, default is Undefined, optional
        The base64-encoded HTTP URL used in the signed request. The Base64-encoded HTTP URL used in the signed request.
    identity : str, default is Undefined, optional
        The base64-encoded EC2 instance identity document to authenticate with. Can be retrieved from the EC2 metadata server. Base64-encoded EC2 instance identity document to authenticate with.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    nonce : str, default is Undefined, optional
        The unique nonce to be used for login requests. Can be set to a user-specified value, or will contain the server-generated value once a token is issued. EC2 instances can only acquire a single token until the whitelist is tidied again unless they keep track of this nonce. The nonce to be used for subsequent login requests.
    pkcs7 : str, default is Undefined, optional
        The PKCS#7 signature of the identity document to authenticate with, with all newline characters removed. Can be retrieved from the EC2 metadata server. PKCS7 signature of the identity document to authenticate with, with all newline characters removed.
    role : str, default is Undefined, optional
        The name of the AWS auth backend role to create tokens against. AWS Auth Role to read the token from.
    signature : str, default is Undefined, optional
        The base64-encoded SHA256 RSA signature of the instance identity document to authenticate with, with all newline characters removed. Can be retrieved from the EC2 metadata server. Base64-encoded SHA256 RSA signature of the instance identtiy document to authenticate with.
    """


    backend?: str

    iamHttpRequestMethod?: str

    iamRequestBody?: str

    iamRequestHeaders?: str

    iamRequestUrl?: str

    identity?: str

    namespace?: str

    nonce?: str

    pkcs7?: str

    role?: str

    signature?: str


schema AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecProviderConfigRefPolicy


schema AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecProviderRefPolicy


schema AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecPublishConnectionDetailsToConfigRef

    metadata?: AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecPublishConnectionDetailsToMetadata

    name: str


schema AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecPublishConnectionDetailsToConfigRefPolicy


schema AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AwsVaultUpboundIoV1alpha1AuthBackendLoginSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AwsVaultUpboundIoV1alpha1AuthBackendLoginStatus:
    r"""
    AuthBackendLoginStatus defines the observed state of AuthBackendLogin.

    Attributes
    ----------
    atProvider : AwsVaultUpboundIoV1alpha1AuthBackendLoginStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AwsVaultUpboundIoV1alpha1AuthBackendLoginStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: AwsVaultUpboundIoV1alpha1AuthBackendLoginStatusAtProvider

    conditions?: [AwsVaultUpboundIoV1alpha1AuthBackendLoginStatusConditionsItems0]


schema AwsVaultUpboundIoV1alpha1AuthBackendLoginStatusAtProvider:
    r"""
    aws vault upbound io v1alpha1 auth backend login status at provider

    Attributes
    ----------
    accessor : str, default is Undefined, optional
        The token's accessor. The accessor returned from Vault for this token.
    authType : str, default is Undefined, optional
        The authentication type used to generate this token. The auth method used to generate this token.
    backend : str, default is Undefined, optional
        The unique name of the AWS auth backend. Defaults to 'aws'. AWS Auth Backend to read the token from.
    iamHttpRequestMethod : str, default is Undefined, optional
        The HTTP method used in the signed IAM request. The HTTP method used in the signed request.
    iamRequestBody : str, default is Undefined, optional
        The base64-encoded body of the signed request. The Base64-encoded body of the signed request.
    iamRequestHeaders : str, default is Undefined, optional
        The base64-encoded, JSON serialized representation of the GetCallerIdentity HTTP request headers. The Base64-encoded, JSON serialized representation of the sts:GetCallerIdentity HTTP request headers.
    iamRequestUrl : str, default is Undefined, optional
        The base64-encoded HTTP URL used in the signed request. The Base64-encoded HTTP URL used in the signed request.
    id : str, default is Undefined, optional
        id
    identity : str, default is Undefined, optional
        The base64-encoded EC2 instance identity document to authenticate with. Can be retrieved from the EC2 metadata server. Base64-encoded EC2 instance identity document to authenticate with.
    leaseDuration : float, default is Undefined, optional
        The duration in seconds the token will be valid, relative to the time in lease_start_time. Lease duration in seconds relative to the time in lease_start_time.
    leaseStartTime : str, default is Undefined, optional
        the approximate time at which the token was created, using the clock of the system where Upbound official provider was running. time at which the lease was read, using the clock of the system where Upbound official provider was running
    metadata : {str:str}, default is Undefined, optional
        A map of information returned by the Vault server about the authentication used to generate this token. The metadata reported by the Vault server.
    namespace : str, default is Undefined, optional
        The namespace to provision the resource in. The value should not contain leading or trailing forward slashes. The namespace is always relative to the provider's configured namespace. Available only for Vault Enterprise. Target namespace. (requires Enterprise)
    nonce : str, default is Undefined, optional
        The unique nonce to be used for login requests. Can be set to a user-specified value, or will contain the server-generated value once a token is issued. EC2 instances can only acquire a single token until the whitelist is tidied again unless they keep track of this nonce. The nonce to be used for subsequent login requests.
    pkcs7 : str, default is Undefined, optional
        The PKCS#7 signature of the identity document to authenticate with, with all newline characters removed. Can be retrieved from the EC2 metadata server. PKCS7 signature of the identity document to authenticate with, with all newline characters removed.
    policies : [str], default is Undefined, optional
        The Vault policies assigned to this token. The policies assigned to this token.
    renewable : bool, default is Undefined, optional
        Set to true if the token can be extended through renewal. True if the duration of this lease can be extended through renewal.
    role : str, default is Undefined, optional
        The name of the AWS auth backend role to create tokens against. AWS Auth Role to read the token from.
    signature : str, default is Undefined, optional
        The base64-encoded SHA256 RSA signature of the instance identity document to authenticate with, with all newline characters removed. Can be retrieved from the EC2 metadata server. Base64-encoded SHA256 RSA signature of the instance identtiy document to authenticate with.
    """


    accessor?: str

    authType?: str

    backend?: str

    iamHttpRequestMethod?: str

    iamRequestBody?: str

    iamRequestHeaders?: str

    iamRequestUrl?: str

    id?: str

    identity?: str

    leaseDuration?: float

    leaseStartTime?: str

    metadata?: {str:str}

    namespace?: str

    nonce?: str

    pkcs7?: str

    policies?: [str]

    renewable?: bool

    role?: str

    signature?: str


schema AwsVaultUpboundIoV1alpha1AuthBackendLoginStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


